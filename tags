!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
#	bundle/Mark--Karkat/plugin/mark.vim	/^	nmap <unique> # <Plug>MarkSearchPrev$/;"	m
#	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vnoremap <silent> # y?<C-R>=substitute(escape(@", '.*\\\\\/[]'), "\\n", '\\\\n', 'g')<CR><CR>$/;"	m
*	bundle/Mark--Karkat/plugin/mark.vim	/^	nmap <unique> * <Plug>MarkSearchNext$/;"	m
*	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vnoremap <silent> * y\/<C-R>=substitute(escape(@", '.*\\\\\/[]'), "\\n", '\\\\n', 'g')<CR><CR>$/;"	m
.	bundle/repeat.vim/autoload/repeat.vim	/^nnoremap <silent> .     :<C-U>call repeat#run(v:count)<CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    inoremenu <silent> .51 PopUp.TxtBrowser(&T).#\\ Search\\ Backward(&P) <ESC>#$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    inoremenu <silent> .51 PopUp.TxtBrowser(&T).*\\ Search\\ Forward(&N) <ESC>*$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    inoremenu <silent> .51 PopUp.TxtBrowser(&T).Find\\ This\\ Word(&F) <ESC>:TFind <cword> <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    inoremenu <silent> .51 PopUp.TxtBrowser(&T).Goto\\ This\\ Url(&G) <ESC>:TGoto <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    inoremenu <silent> .51 PopUp.TxtBrowser(&T).Hightlight\\ This\\ Word(&H) <ESC>yaw:TBMatch @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    inoremenu <silent> .51 PopUp.TxtBrowser(&T).Make\\ Blue <ESC>yaw:TBBlue @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    inoremenu <silent> .51 PopUp.TxtBrowser(&T).Make\\ bold(&B) <ESC>yaw:TBBold @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    inoremenu <silent> .51 PopUp.TxtBrowser(&T).Make\\ green <ESC>yaw:TBGreen @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    inoremenu <silent> .51 PopUp.TxtBrowser(&T).Make\\ italic(&I) <ESC>yaw:TBItalic @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    inoremenu <silent> .51 PopUp.TxtBrowser(&T).Make\\ red(&R) <ESC>yaw:TBRed @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    inoremenu <silent> .51 PopUp.TxtBrowser(&T).Search\\ This\\ Word(&S) <ESC>:TSearch <cword> <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    inoremenu <silent> .51 PopUp.文本浏览工具(&T).前向搜索光标下的单词(&N) <ESC>*$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    inoremenu <silent> .51 PopUp.文本浏览工具(&T).加粗(&B) <ESC>yaw:TBBold @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    inoremenu <silent> .51 PopUp.文本浏览工具(&T).加红(&R) <ESC>yaw:TBRed @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    inoremenu <silent> .51 PopUp.文本浏览工具(&T).加绿 <ESC>yaw:TBGreen @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    inoremenu <silent> .51 PopUp.文本浏览工具(&T).加蓝 <ESC>yaw:TBBlue @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    inoremenu <silent> .51 PopUp.文本浏览工具(&T).变斜(&I) <ESC>yaw:TBItalic @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    inoremenu <silent> .51 PopUp.文本浏览工具(&T).后向搜索光标下的单词(&P) <ESC>#$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    inoremenu <silent> .51 PopUp.文本浏览工具(&T).打开光标下的URL(&G) <ESC>:TGoto <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    inoremenu <silent> .51 PopUp.文本浏览工具(&T).搜索光标下的单词(&S) <ESC>:TSearch <cword> <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    inoremenu <silent> .51 PopUp.文本浏览工具(&T).查找光标下的单词(&F) <ESC>:TFind <cword> <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    inoremenu <silent> .51 PopUp.文本浏览工具(&T).高亮搜索光标下的单词(&H) <ESC>yaw:TBMatch @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nnoremenu <silent> .51 PopUp.TxtBrowser(&T).#\\ Search\\ Backward(&P) #$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nnoremenu <silent> .51 PopUp.TxtBrowser(&T).*\\ Search\\ Forward(&N) *$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nnoremenu <silent> .51 PopUp.TxtBrowser(&T).Find\\ This\\ Word(&F) :TFind <cword> <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nnoremenu <silent> .51 PopUp.TxtBrowser(&T).Goto\\ This\\ Url(&G) :TGoto <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nnoremenu <silent> .51 PopUp.TxtBrowser(&T).Hightlight\\ This\\ Word(&H) yaw<ESC>:TBMatch @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nnoremenu <silent> .51 PopUp.TxtBrowser(&T).Make\\ Blue yaw<ESC>:TBBlue @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nnoremenu <silent> .51 PopUp.TxtBrowser(&T).Make\\ bold(&B) yaw<ESC>:TBBold @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nnoremenu <silent> .51 PopUp.TxtBrowser(&T).Make\\ green yaw<ESC>:TBGreen @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nnoremenu <silent> .51 PopUp.TxtBrowser(&T).Make\\ italic(&I) yaw<ESC>:TBItalic @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nnoremenu <silent> .51 PopUp.TxtBrowser(&T).Make\\ red(&R) yaw<ESC>:TBRed @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nnoremenu <silent> .51 PopUp.TxtBrowser(&T).Search\\ This\\ Word(&S) :TSearch <cword> <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nnoremenu <silent> .51 PopUp.文本浏览工具(&T).前向搜索光标下的单词(&N) *$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nnoremenu <silent> .51 PopUp.文本浏览工具(&T).加粗(&B) yaw<ESC>:TBBold @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nnoremenu <silent> .51 PopUp.文本浏览工具(&T).加红(&R) yaw<ESC>:TBRed @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nnoremenu <silent> .51 PopUp.文本浏览工具(&T).加绿 yaw<ESC>:TBGreen @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nnoremenu <silent> .51 PopUp.文本浏览工具(&T).加蓝 yaw<ESC>:TBBlue @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nnoremenu <silent> .51 PopUp.文本浏览工具(&T).变斜(&I) yaw<ESC>:TBItalic @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nnoremenu <silent> .51 PopUp.文本浏览工具(&T).后向搜索光标下的单词(&P) #$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nnoremenu <silent> .51 PopUp.文本浏览工具(&T).打开光标下的URL(&G) :TGoto <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nnoremenu <silent> .51 PopUp.文本浏览工具(&T).搜索光标下的单词(&S) :TSearch <cword> <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nnoremenu <silent> .51 PopUp.文本浏览工具(&T).查找光标下的单词(&F) :TFind <cword> <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nnoremenu <silent> .51 PopUp.文本浏览工具(&T).高亮搜索光标下的单词(&H) yaw<ESC>:TBMatch @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vnoremenu <silent> .51 PopUp.TxtBrowser(&T).#\\ Search\\ Backward(&P) y?<C-R>=substitute(escape(@", '.*\\\\\/[]'), "\\n", '\\\\n', 'g')<CR><CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vnoremenu <silent> .51 PopUp.TxtBrowser(&T).*\\ Search\\ Forward(&N) y\/<C-R>=substitute(escape(@", '.*\\\\\/[]'), "\\n", '\\\\n', 'g')<CR><CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vnoremenu <silent> .51 PopUp.TxtBrowser(&T).Find\\ Word\\ Selected(&F) y<ESC>:TFind <c-r>" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vnoremenu <silent> .51 PopUp.TxtBrowser(&T).Goto\\ Url\\ Selected(&G) y<ESC>:TGoto <c-r>" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vnoremenu <silent> .51 PopUp.TxtBrowser(&T).Hightlight\\ Text\\ Selected(&H) y<ESC>:TBMatch @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vnoremenu <silent> .51 PopUp.TxtBrowser(&T).Make\\ Blue y<ESC>:TBBlue @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vnoremenu <silent> .51 PopUp.TxtBrowser(&T).Make\\ bold(&B) y<ESC>:TBBold @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vnoremenu <silent> .51 PopUp.TxtBrowser(&T).Make\\ green y<ESC>:TBGreen @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vnoremenu <silent> .51 PopUp.TxtBrowser(&T).Make\\ italic(&I) y<ESC>:TBItalic @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vnoremenu <silent> .51 PopUp.TxtBrowser(&T).Make\\ red(&R) y<ESC>:TBRed @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vnoremenu <silent> .51 PopUp.TxtBrowser(&T).Search\\ Word\\ Selected(&S) y<ESC>:TSearch <c-r>" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vnoremenu <silent> .51 PopUp.文本浏览工具(&T).前向搜索选中的文本(&N) y\/<C-R>=substitute(escape(@", '.*\\\\\/[]'), "\\n", '\\\\n', 'g')<CR><CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vnoremenu <silent> .51 PopUp.文本浏览工具(&T).加粗(&B) y<ESC>:TBBold @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vnoremenu <silent> .51 PopUp.文本浏览工具(&T).加红(&R) y<ESC>:TBRed @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vnoremenu <silent> .51 PopUp.文本浏览工具(&T).加绿 y<ESC>:TBGreen @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vnoremenu <silent> .51 PopUp.文本浏览工具(&T).加蓝 y<ESC>:TBBlue @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vnoremenu <silent> .51 PopUp.文本浏览工具(&T).变斜(&I) y<ESC>:TBItalic @\\" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vnoremenu <silent> .51 PopUp.文本浏览工具(&T).后向搜索选中的文本(&P) y?<C-R>=substitute(escape(@", '.*\\\\\/[]'), "\\n", '\\\\n', 'g')<CR><CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vnoremenu <silent> .51 PopUp.文本浏览工具(&T).打开选择的URL(&G) y<ESC>:TGoto <c-r>" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vnoremenu <silent> .51 PopUp.文本浏览工具(&T).搜索选择的单词(&S) y<ESC>:TSearch <c-r>" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vnoremenu <silent> .51 PopUp.文本浏览工具(&T).查找选择的单词(&F) y<ESC>:TFind <c-r>" <CR>$/;"	m
.51	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vnoremenu <silent> .51 PopUp.文本浏览工具(&T).高亮选中的文本(&H) y<ESC>:TBMatch @\\" <CR>$/;"	m
<2-LeftMouse>	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <2-LeftMouse>   \\|:call <SID>DoFoldOrOpenEntry('', 'e')<CR>$/;"	m
<2-RightMouse>	bundle/project/plugin/project.vim	/^        nmap     <buffer> <silent> <2-RightMouse> <space>$/;"	m
<3-LeftMouse>	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <3-LeftMouse>  <Nop>$/;"	m
<3-RightMouse>	bundle/project/plugin/project.vim	/^        nmap     <buffer> <silent> <3-RightMouse> <space>$/;"	m
<4-RightMouse>	bundle/project/plugin/project.vim	/^        nmap     <buffer> <silent> <4-RightMouse> <space>$/;"	m
<C-2-LeftMouse>	bundle/project/plugin/project.vim	/^        nmap     <buffer> <silent> <C-2-LeftMouse> <C-Return>$/;"	m
<C-Down>	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <C-Down> \\|:silent call <SID>MoveDown()<CR>$/;"	m
<C-G>S	bundle/vim-surround/plugin/surround.vim	/^    imap      <C-G>S <Plug>ISurround$/;"	m
<C-G>s	bundle/vim-surround/plugin/surround.vim	/^    imap      <C-G>s <Plug>Isurround$/;"	m
<C-LeftMouse>	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <C-LeftMouse>   <LeftMouse>$/;"	m
<C-R>	bundle/repeat.vim/autoload/repeat.vim	/^nnoremap <silent> <C-R> :<C-U>call repeat#wrap("\\<Lt>C-R>",v:count)<CR>$/;"	m
<C-Return>	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <C-Return> \\|:call <SID>DoFoldOrOpenEntry('silent! only', 'e')<CR>$/;"	m
<C-S>	bundle/vim-surround/plugin/surround.vim	/^      imap    <C-S> <Plug>Isurround$/;"	m
<C-Up>	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <C-Up>   \\|:silent call <SID>MoveUp()<CR>$/;"	m
<C-W><C-O>	bundle/project/plugin/project.vim	/^                nmap <silent> <unique> <C-W><C-O> <C-W>o$/;"	m
<C-W>o	bundle/project/plugin/project.vim	/^                nmap <silent> <unique> <C-W>o <Plug>ProjectOnly$/;"	m
<C-^>	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <C-^> <Nop>$/;"	m
<C-e>	bundle/lookupfile1_8/plugin/lookupfile.vim	/^      imap <unique> <expr> <silent> <C-e> (pumvisible() ? "\\<Plug>LookupFileCE" :$/;"	m
<C-e>	bundle/lookupfile1_8/plugin/lookupfile.vim	/^      nmap <unique> <silent> <C-e> <Plug>LookupFile$/;"	m
<F10>	plugin/cao_yj4java.vim	/^map <F10> :call s:SET_COMMENTV()<CR>$/;"	m
<F12>	bundle/project/plugin/project.vim	/^        nmap <silent> <F12> <Plug>ToggleProject$/;"	m
<F12>	plugin/cao_yj4java.vim	/^map <F12> :call ProjectTagUpdateLookupFile()<CR>$/;"	m
<F1>	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <F1> :let g:proj_doinghelp = 1<CR><F1>$/;"	m
<F5>	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent>           <F5> :call <SID>RefreshEntriesFromDir(1)<CR>$/;"	m
<Leader>#	bundle/Mark--Karkat/plugin/mark.vim	/^	nmap <unique> <Leader># <Plug>MarkSearchCurrentPrev$/;"	m
<Leader>*	bundle/Mark--Karkat/plugin/mark.vim	/^	nmap <unique> <Leader>* <Plug>MarkSearchCurrentNext$/;"	m
<Leader>/	bundle/Mark--Karkat/plugin/mark.vim	/^	nmap <unique> <Leader>\/ <Plug>MarkSearchAnyNext$/;"	m
<Leader>?	bundle/Mark--Karkat/plugin/mark.vim	/^	nmap <unique> <Leader>? <Plug>MarkSearchAnyPrev$/;"	m
<Leader>be	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^    noremap <script> <silent> <unique> <Leader>be :BufExplorer<CR>$/;"	m
<Leader>bs	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^    noremap <script> <silent> <unique> <Leader>bs :BufExplorerHorizontalSplit<CR>$/;"	m
<Leader>bv	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^    noremap <script> <silent> <unique> <Leader>bv :BufExplorerVerticalSplit<CR>$/;"	m
<Leader>f	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nmap <script> <silent> <unique> <Leader>f <ESC>:TFind <cword> <CR>$/;"	m
<Leader>f	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vmap <script> <silent> <unique> <Leader>f y<ESC>:TFind <c-r>" <CR>$/;"	m
<Leader>g	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nmap <script> <silent> <unique> <Leader>g <ESC>:TGoto <CR>$/;"	m
<Leader>g	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vmap <script> <silent> <unique> <Leader>g y<ESC>:TGoto <c-r>" <CR>$/;"	m
<Leader>h	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nmap <script> <silent> <unique> <Leader>h yaw<ESC>:TBMatch @\\" <CR>$/;"	m
<Leader>h	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vmap <script> <silent> <unique> <Leader>h y<ESC>:TBMatch @\\" <CR>$/;"	m
<Leader>ih	bundle/a.vim/plugin/a.vim	/^imap <Leader>ih <ESC>:IHS<CR>$/;"	m
<Leader>ih	bundle/a.vim/plugin/a.vim	/^nmap <Leader>ih :IHS<CR>$/;"	m
<Leader>ihn	bundle/a.vim/plugin/a.vim	/^imap <Leader>ihn <ESC>:IHN<CR>$/;"	m
<Leader>ihn	bundle/a.vim/plugin/a.vim	/^nmap <Leader>ihn :IHN<CR>$/;"	m
<Leader>is	bundle/a.vim/plugin/a.vim	/^imap <Leader>is <ESC>:IHS<CR>:A<CR>$/;"	m
<Leader>is	bundle/a.vim/plugin/a.vim	/^nmap <Leader>is :IHS<CR>:A<CR>$/;"	m
<Leader>m	bundle/Mark--Karkat/plugin/mark.vim	/^	nmap <unique> <Leader>m <Plug>MarkSet$/;"	m
<Leader>n	bundle/Mark--Karkat/plugin/mark.vim	/^	nmap <unique> <Leader>n <Plug>MarkClear$/;"	m
<Leader>r	bundle/Mark--Karkat/plugin/mark.vim	/^	nmap <unique> <Leader>r <Plug>MarkRegex$/;"	m
<Leader>rwp	bundle/Align/plugin/cecutil.vim	/^ map <unique> <Leader>rwp <Plug>RestoreWinPosn$/;"	m
<Leader>s	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    nmap <script> <silent> <unique> <Leader>s <ESC>:TSearch <cword> <CR>$/;"	m
<Leader>s	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    vmap <script> <silent> <unique> <Leader>s y<ESC>:TSearch <c-r>" <CR>$/;"	m
<Leader>swp	bundle/Align/plugin/cecutil.vim	/^ map <unique> <Leader>swp <Plug>SaveWinPosn$/;"	m
<LocalLeader>0	bundle/project/plugin/project.vim	/^        nnoremap <buffer>          <LocalLeader>0 \\|:call <SID>ListSpawn("")<CR>$/;"	m
<LocalLeader><Down>	bundle/project/plugin/project.vim	/^        nmap     <buffer> <silent> <LocalLeader><Down> <C-Down>$/;"	m
<LocalLeader><Up>	bundle/project/plugin/project.vim	/^        nmap     <buffer> <silent> <LocalLeader><Up> <C-Up>$/;"	m
<LocalLeader>C	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>C :call <SID>CreateEntriesFromDir(1)<CR>$/;"	m
<LocalLeader>E	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>E :call <SID>OpenEntry(line('.'), '', 'e', 1)<CR>$/;"	m
<LocalLeader>F0	bundle/project/plugin/project.vim	/^        nnoremap <buffer>          <LocalLeader>F0 \\|:call <SID>ListSpawn("_fold")<CR>$/;"	m
<LocalLeader>G	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>G \\|:call <SID>GrepAll(1, line('.'), "")<CR>$/;"	m
<LocalLeader>I	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>I :echo Project_GetFname(line('.'))<CR>$/;"	m
<LocalLeader>L	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>L \\|:call <SID>LoadAll(1, line('.'))<CR>$/;"	m
<LocalLeader>R	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>R :call <SID>RefreshEntriesFromDir(1)<CR>$/;"	m
<LocalLeader>S	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>S \\|:call <SID>LoadAllSplit(0, line('.'))<CR>$/;"	m
<LocalLeader>T	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>T \\|:call <SID>DoFoldOrOpenEntry('', 'tabe')<CR>$/;"	m
<LocalLeader>W	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>W \\|:call <SID>WipeAll(1, line('.'))<CR>$/;"	m
<LocalLeader>c	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>c :call <SID>CreateEntriesFromDir(0)<CR>$/;"	m
<LocalLeader>e	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>e :call <SID>OpenEntry(line('.'), '', '', 0)<CR>$/;"	m
<LocalLeader>f0	bundle/project/plugin/project.vim	/^        nnoremap <buffer>          <LocalLeader>f0 \\|:call <SID>ListSpawn("_fold")<CR>$/;"	m
<LocalLeader>g	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>g \\|:call <SID>GrepAll(0, line('.'), "")<CR>$/;"	m
<LocalLeader>i	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>i :echo <SID>RecursivelyConstructDirectives(line('.'))<CR>$/;"	m
<LocalLeader>l	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>l \\|:call <SID>LoadAll(0, line('.'))<CR>$/;"	m
<LocalLeader>o	bundle/project/plugin/project.vim	/^        nmap     <buffer> <silent> <LocalLeader>o <C-Return>$/;"	m
<LocalLeader>r	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>r :call <SID>RefreshEntriesFromDir(0)<CR>$/;"	m
<LocalLeader>s	bundle/project/plugin/project.vim	/^        nmap     <buffer> <silent> <LocalLeader>s <S-Return>$/;"	m
<LocalLeader>v	bundle/project/plugin/project.vim	/^        nmap     <buffer> <silent> <LocalLeader>v <M-CR>$/;"	m
<LocalLeader>w	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>w \\|:call <SID>WipeAll(0, line('.'))<CR>$/;"	m
<M-2-LeftMouse>	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <M-2-LeftMouse> <M-CR>$/;"	m
<M-CR>	bundle/project/plugin/project.vim	/^        nmap     <buffer> <silent> <M-CR> <Return><C-W>p$/;"	m
<Plug>AM_Htd	bundle/Align/plugin/AlignMapsPlugin.vim	/^map <silent> <script> <Plug>AM_Htd <SID>WS:'y,'zs%<[tT][rR]><[tT][dD][^>]\\{-}>\\<Bar><\/[tT][dD]><[tT][dD][^>]\\{-}>\\<Bar><\/[tT][dD]><\/[tT][rR]>%@&@%g<CR>'yjma'zk:AlignCtrl m=Ilp1P0 @<CR>:'a,.Align<CR>:'y,'zs\/ @\/@\/<CR>:'y,'zs\/@ <[tT][rR]>\/<[tT][rR]>\/ge<CR>:'y,'zs\/@\/\/ge<CR><SID>WE$/;"	m
<Plug>AM_T|	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_T| <SID>WS:AlignCtrl mIp0P0=r <Bar><CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_T#	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_T#   <SID>WS:AlignCtrl mIp0P0=r #<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_T,	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_T,   <SID>WS:AlignCtrl mIp0P1=r ,<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_T:	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_T:   <SID>WS:AlignCtrl mIp1P1=r :<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_T;	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_T;   <SID>WS:AlignCtrl mIp0P0=r ;<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_T<	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_T<   <SID>WS:AlignCtrl mIp0P0=r <<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_T=	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_T=   <SID>WS:'a,'z-1s\/\\s\\+\\([*\/+\\-%<Bar>&\\~^]\\==\\)\/ \\1\/e<CR>:'a,'z-1s@ \\+\\([*\/+\\-%<Bar>&\\~^]\\)=@\\1=@ge<CR>:'a,'z-1s\/; *\/;@\/e<CR>:'a,'z-1s\/==\/\\="\\<Char-0x0f>\\<Char-0x0f>"\/ge<CR>:'a,'z-1s\/!=\/\\x="!\\<Char-0x0f>"\/ge<CR>:AlignCtrl mIp1P1=r = @<CR>:AlignCtrl g =<CR>:'a,'z-1Align<CR>:'a,'z-1s\/; *@\/;\/e<CR>:'a,'z-1s\/; *$\/;\/e<CR>:'a,'z-1s@\\([*\/+\\-%<Bar>&\\~^]\\)\\( \\+\\)=@\\2\\1=@ge<CR>:'a,'z-1s\/\\( \\+\\);\/;\\1\/ge<CR>:'a,'z-1s\/\\xff\/=\/ge<CR><SID>WE:exe "norm <Plug>acom"$/;"	m
<Plug>AM_T?	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_T?   <SID>WS:AlignCtrl mIp0P0=r ?<CR>:'a,.Align<CR>:'y,'zs\/ \\( *\\);\/;\\1\/ge<CR><SID>WE$/;"	m
<Plug>AM_T@	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_T@   <SID>WS:AlignCtrl mIp0P0=r @<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_TW@	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_TW@  <SID>WS:AlignCtrl mWp0P0=r @<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_Tab	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_Tab  <SID>WS:'a,.s\/^\\(\\t*\\)\\(.*\\)\/\\=submatch(1).escape(substitute(submatch(2),'\\t','@','g'),'\\')\/<CR>:AlignCtrl mI=r @<CR>:'a,.Align<CR>:'y+1,'z-1s\/@\/ \/g<CR><SID>WE$/;"	m
<Plug>AM_Ts,	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_Ts,  <SID>WS:AlignCtrl mIp0P1=r ,<CR>:'a,.Align<CR>:'a,.s\/\\(\\s*\\),\/,\\1\/ge<CR><SID>WE$/;"	m
<Plug>AM_Tsp	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_Tsp  <SID>WS:'a,.s\/^\\(\\s*\\)\\(.*\\)\/\\=submatch(1).escape(substitute(submatch(2),'\\s\\+','@','g'),'\\')\/<CR>:AlignCtrl mI=r @<CR>:'a,.Align<CR>:'y+1,'z-1s\/@\/ \/g<CR><SID>WE$/;"	m
<Plug>AM_T~	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_T~   <SID>WS:AlignCtrl mIp0P0=r ~<CR>:'a,.Align<CR>:'y,'zs\/ \\( *\\);\/;\\1\/ge<CR><SID>WE$/;"	m
<Plug>AM_a(	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_a(      <SID>WS:AlignCtrl mIp0P1=l<CR>:'a,.Align [(,]<CR>:sil 'y+1,'z-1s\/\\(\\s\\+\\),\/,\\1\/ge<CR><SID>WE$/;"	m
<Plug>AM_a,		<SID>WS:'y,'zs/\(\S\)\s\+/\1	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_a,		<SID>WS:'y,'zs\/\\(\\S\\)\\s\\+\/\\1 \/ge<CR>'yjma'zk:call AlignMaps#CharJoiner(",")<cr>:silent 'y,'zg\/,\/call AlignMaps#FixMultiDec()<CR>'z:exe "norm \\<Plug>AM_adec"<cr><SID>WE$/;"	m
<Plug>AM_a<		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_a<		<SID>WS:AlignCtrl mIp1P1=l << >><CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_a=		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_a=		<SID>WS:AlignCtrl mIp1P1=l<CR>:AlignCtrl g :=<CR>:'a,'zAlign :\\==<CR><SID>WE$/;"	m
<Plug>AM_a?		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_a?		<SID>WS:AlignCtrl mIp1P1lC ? : : : : <CR>:'a,.Align<CR>:'a,'z-1s\/\\(\\s\\+\\)? \/?\\1\/e<CR><SID>WE$/;"	m
<Plug>AM_abox	<SID>WS:let	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_abox	<SID>WS:let g:alignmaps_iws=substitute(getline("'a"),'^\\(\\s*\\).*$','\\1','e')<CR>:'a,'z-1s\/^\\s\\+\/\/e<CR>:'a,'z-1s\/^.*$\/@&@\/<CR>:AlignCtrl m=p01P0w @<CR>:'a,.Align<CR>:'a,'z-1s\/@\/ * \/<CR>:'a,'z-1s\/@$\/*\/<CR>'aYP:s\/.\/*\/g<CR>0r\/'zkYp:s\/.\/*\/g<CR>0r A\/<Esc>:exe "'a-1,'z-1s\/^\/".g:alignmaps_iws."\/e"<CR><SID>WE$/;"	m
<Plug>AM_acom	<SID>WS:'a,.s/\/[*/]\/\=/@&@/e<CR>:'a,.s/\*\//@&/e<CR>:'y,'zs/^\(	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_acom	<SID>WS:'a,.s\/\\\/[*\/]\\\/\\=\/@&@\/e<CR>:'a,.s\/\\*\\\/\/@&\/e<CR>:'y,'zs\/^\\( *\\) @\/\\1@\/e<CR>'zk:call AlignMaps#StdAlign(2)<CR>:'y,'zs\/^\\(\\s*\\) @\/\\1\/e<CR>:'y,'zs\/ @\/\/eg<CR><SID>WE$/;"	m
<Plug>AM_adcom	<SID>WS:'a,.v/^\s*\/[/*]/s/\/[*/]\*\=/@&@/e<CR>:'a,.v/^\s*\/[/*]/s/\*\//@&/e<CR>:'y,'zv/^\s*\/[/*]/s/^\(	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_adcom	<SID>WS:'a,.v\/^\\s*\\\/[\/*]\/s\/\\\/[*\/]\\*\\=\/@&@\/e<CR>:'a,.v\/^\\s*\\\/[\/*]\/s\/\\*\\\/\/@&\/e<CR>:'y,'zv\/^\\s*\\\/[\/*]\/s\/^\\( *\\) @\/\\1@\/e<CR>'zk:call AlignMaps#StdAlign(3)<cr>:'y,'zv\/^\\s*\\\/[\/*]\/s\/^\\(\\s*\\) @\/\\1\/e<CR>:'y,'zs\/ @\/\/eg<CR><SID>WE$/;"	m
<Plug>AM_adec	<SID>WS:'a,'zs/\([^	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_adec	<SID>WS:'a,'zs\/\\([^ \\t\/(]\\)\\([*&]\\)\/\\1 \\2\/e<CR>:'y,'zv\/^\\\/\/s\/\\([^ \\t]\\)\\s\\+\/\\1 \/ge<CR>:'y,'zv\/^\\s*[*\/]\/s\/\\([^\/][*&]\\)\\s\\+\/\\1\/ge<CR>:'y,'zv\/^\\s*[*\/]\/s\/^\\(\\s*\\%([a-zA-Z_][a-zA-Z_0-9<>:]*\\s\\+\\%([a-zA-Z_*(&]\\)\\@=\\)\\+\\)\\([*(&]*\\)\\s*\\([a-zA-Z0-9_()<>:]\\+\\)\\s*\\(\\(\\[.\\{-}]\\)*\\)\\s*\\(=\\)\\=\\s*\\(.\\{-}\\)\\=\\s*;\/\\1@\\2#@\\3\\4@\\6@\\7;@\/e<CR>:'y,'zv\/^\\s*[*\/]\/s\/\\*\\\/\\s*$\/@*\\\/\/e<CR>:'y,'zv\/^\\s*[*\/]\/s\/^\\s\\+\\*\/@@@@@* \/e<CR>:'y,'zv\/^\\s*[*\/]\/s\/^@@@@@\\*\\(.*[^*\/]\\)$\/&@*\/e<CR>'yjma'zk:AlignCtrl v ^\\s*[*\/#]<CR>:call AlignMaps#StdAlign(1)<cr>:'y,'zv\/^\\s*[*\/]\/s\/@ \/\/ge<CR>:'y,'zv\/^\\s*[*\/]\/s\/\\(\\s*\\);\/;\\1\/e<CR>:'y,'zv\/^#\/s\/# \/\/e<CR>:'y,'zv\/^\\s\\+[*\/#]\/s\/\\([^\/*]\\)\\(\\*\\+\\)\\( \\+\\)\/\\1\\3\\2\/e<CR>:'y,'zv\/^\\s\\+[*\/#]\/s\/\\((\\+\\)\\( \\+\\)\\*\/\\2\\1*\/e<CR>:'y,'zv\/^\\s\\+[*\/#]\/s\/^\\(\\s\\+\\) \\*\/\\1*\/e<CR>:'y,'zv\/^\\s\\+[*\/#]\/s\/[ \\t@]*$\/\/e<CR>:'y,'zs\/^[*]\/ *\/e<CR><SID>WE$/;"	m
<Plug>AM_adef	<SID>WS:AlignPush<CR>:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_adef	<SID>WS:AlignPush<CR>:AlignCtrl v ^\\s*\\(\\\/\\*\\<bar>\\\/\\\/\\)<CR>:'a,.v\/^\\s*\\(\\\/\\*\\<bar>\\\/\\\/\\)\/s\/^\\(\\s*\\)#\\(\\s\\)*define\\s*\\(\\I[a-zA-Z_0-9(),]*\\)\\s*\\(.\\{-}\\)\\($\\<Bar>\\\/\\*\\)\/#\\1\\2define @\\3@\\4@\\5\/e<CR>:'a,.v\/^\\s*\\(\\\/\\*\\<bar>\\\/\\\/\\)\/s\/\\($\\<Bar>\\*\\\/\\)\/@&\/e<CR>'zk:call AlignMaps#StdAlign(1)<cr>'yjma'zk:'a,.v\/^\\s*\\(\\\/\\*\\<bar>\\\/\\\/\\)\/s\/ @\/\/g<CR><SID>WE$/;"	m
<Plug>AM_aenum	<SID>WS:'a,'zs/\([-+]\=\d\+\)\([eE][-+]\d\+\)\=/\1#\2/ge<CR>:'a,'zs/\([,eE][-+]\=\d\+\)#/\1/ge<CR>:'a,'zs/#,/,/ge<CR>:'a,'zs/[-+]\=\%(\d\+\%([,#]\d*\)\=\<bar>[,#]\d\+\)\%([eE][-+]\=\d\+\)\=/@&@/ge<CR>:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_aenum	<SID>WS:'a,'zs\/\\([-+]\\=\\d\\+\\)\\([eE][-+]\\d\\+\\)\\=\/\\1#\\2\/ge<CR>:'a,'zs\/\\([,eE][-+]\\=\\d\\+\\)#\/\\1\/ge<CR>:'a,'zs\/#,\/,\/ge<CR>:'a,'zs\/[-+]\\=\\%(\\d\\+\\%([,#]\\d*\\)\\=\\<bar>[,#]\\d\\+\\)\\%([eE][-+]\\=\\d\\+\\)\\=\/@&@\/ge<CR>:AlignCtrl Imp0P0r<CR>:'a,'zAlign [@#,]<CR>:'a,'zs\/\\([,#]\\)\\(\\s\\+\\)\\(\\d*\\%([eE][-+]\\=\\d\\+\\)\\=\\)@\/\\1\\3\\2@\/ge<CR>:'a,'zs\/@\/\/<CR>:'a,'zs\/[#@]\/ \/ge<CR><SID>WE$/;"	m
<Plug>AM_afnc	:<c-u>set	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_afnc	:<c-u>set lz<CR>:silent call AlignMaps#Afnc()<CR>:set nolz<CR>$/;"	m
<Plug>AM_aocom	<SID>WS:AlignPush<CR>:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_aocom	<SID>WS:AlignPush<CR>:AlignCtrl g \/[*\/]<CR>:exe "norm \\<Plug>AM_acom"<cr>:AlignPop<CR><SID>WE$/;"	m
<Plug>AM_ascom	<SID>WS:'a,.s/\/[*/]/@&@/e<CR>:'a,.s/\*\//@&/e<CR>:silent!	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_ascom	<SID>WS:'a,.s\/\\\/[*\/]\/@&@\/e<CR>:'a,.s\/\\*\\\/\/@&\/e<CR>:silent! 'a,.g\/^\\s*@\\\/[*\/]\/s\/@\/\/ge<CR>:AlignCtrl v ^\\s*\\\/[*\/]<CR>:AlignCtrl g \\\/[*\/]<CR>'zk:call AlignMaps#StdAlign(2)<cr>:'y,'zs\/^\\(\\s*\\) @\/\\1\/e<CR>:'y,'zs\/ @\/\/eg<CR><SID>WE$/;"	m
<Plug>AM_aunum	<SID>WS:'a,'zs/\([-+]\=\d\+\)\([eE][-+]\d\+\)\=/\1#\2/ge<CR>:'a,'zs/\([.eE][-+]\=\d\+\)#/\1/ge<CR>:'a,'zs/#\././ge<CR>:'a,'zs/[-+]\=\%(\d\+\%([.#]\d*\)\=\<bar>[.#]\d\+\)\%([eE][-+]\=\d\+\)\=/@&@/ge<CR>:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_aunum	<SID>WS:'a,'zs\/\\([-+]\\=\\d\\+\\)\\([eE][-+]\\d\\+\\)\\=\/\\1#\\2\/ge<CR>:'a,'zs\/\\([.eE][-+]\\=\\d\\+\\)#\/\\1\/ge<CR>:'a,'zs\/#\\.\/.\/ge<CR>:'a,'zs\/[-+]\\=\\%(\\d\\+\\%([.#]\\d*\\)\\=\\<bar>[.#]\\d\\+\\)\\%([eE][-+]\\=\\d\\+\\)\\=\/@&@\/ge<CR>:AlignCtrl Imp0P0r<CR>:'a,'zAlign [@#.]<CR>:'a,'zs\/\\([.#]\\)\\(\\s\\+\\)\\(\\d*\\%([eE][-+]\\=\\d\\+\\)\\=\\)@\/\\1\\3\\2@\/ge<CR>:'a,'zs\/@\/\/<CR>:'a,'zs\/[#@]\/ \/ge<CR><SID>WE$/;"	m
<Plug>AM_m=		<SID>WS:'a,'zs/\s\+\([*/+\-%<Bar>&\~^]\==\)/	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_m=		<SID>WS:'a,'zs\/\\s\\+\\([*\/+\\-%<Bar>&\\~^]\\==\\)\/ \\1\/e<CR>:'a,'zs@ \\+\\([*\/+\\-%<Bar>&\\~^]\\)=@\\1=@ge<CR>:'a,'zs\/==\/\\="\\<Char-0x0f>\\<Char-0x0f>"\/ge<CR>:'a,'zs\/!=\/\\="!\\<Char-0x0f>"\/ge<CR>'zk:AlignCtrl mIp1P1=l =<CR>:AlignCtrl g =<CR>:'a,'z-1Align<CR>:'a,'z-1s@\\([*\/+\\-%<Bar>&\\~^!=]\\)\\( \\+\\)=@\\2\\1=@ge<CR>:'a,'z-1s\/\\( \\+\\);\/;\\1\/ge<CR>:'a,'z-s\/%\\ze[^=]\/ @%@ \/e<CR>'zk:call AlignMaps#StdAlign(1)<cr>:'y,'zs\/^\\(\\s*\\) @\/\\1\/e<CR>:'a,'z-1s\/\\xff\/=\/ge<CR>:'y,'zs\/ @\/\/eg<CR><SID>WE$/;"	m
<Plug>AM_t|	<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_t|	<SID>WS:AlignCtrl mIp0P0=l <Bar><CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_t#		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_t#		<SID>WS:AlignCtrl mIp0P0=l #<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_t,		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_t,		<SID>WS:AlignCtrl mIp0P1=l ,<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_t:		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_t:		<SID>WS:AlignCtrl mIp1P1=l :<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_t;		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_t;		<SID>WS:AlignCtrl mIp0P1=l ;<CR>:'a,.Align<CR>:sil 'y,'zs\/\\( *\\);\/;\\1\/ge<CR><SID>WE$/;"	m
<Plug>AM_t<		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_t<		<SID>WS:AlignCtrl mIp0P0=l <<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_t=		<SID>WS:call	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_t=		<SID>WS:call AlignMaps#Equals()<CR><SID>WE$/;"	m
<Plug>AM_t?		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_t?		<SID>WS:AlignCtrl mIp0P0=l ?<CR>:'a,.Align<CR>:.,'zs\/ \\( *\\);\/;\\1\/ge<CR><SID>WE$/;"	m
<Plug>AM_t@		<SID>WS:call	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_t@		<SID>WS:call AlignMaps#StdAlign(1)<cr><SID>WE$/;"	m
<Plug>AM_tW@		<SID>WS:call	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_tW@		<SID>WS:call AlignMaps#StdAlign(2)<cr><SID>WE$/;"	m
<Plug>AM_tab		<SID>WS:'a,.s/^\(\t*\)\(.*\)$/\=submatch(1).escape(substitute(submatch(2),'\t',"\<Char-0x0f>",'g'),'\')/<CR>:if	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_tab		<SID>WS:'a,.s\/^\\(\\t*\\)\\(.*\\)$\/\\=submatch(1).escape(substitute(submatch(2),'\\t',"\\<Char-0x0f>",'g'),'\\')\/<CR>:if &ts == 1<bar>exe "AlignCtrl mI=lp0P0 \\<Char-0x0f>"<bar>else<bar>exe "AlignCtrl mI=l"<bar>endif<CR>:'a,.Align <Char-0x0f><CR>:exe "'y+1,'z-1s\/\\<Char-0x0f>\/".((&ts == 1)? '\\t' : ' ')."\/g"<CR><SID>WE$/;"	m
<Plug>AM_tml		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_tml		<SID>WS:AlignCtrl mWp1P0=l \\\\\\@<!\\\\\\s*$<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_ts,		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_ts,		<SID>WS:AlignCtrl mIp0P1=l #\\zs<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_ts,		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_ts,		<SID>WS:AlignCtrl mIp0P1=l ,\\zs<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_ts:		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_ts:		<SID>WS:AlignCtrl mIp1P1=l :\\zs<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_ts;		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_ts;		<SID>WS:AlignCtrl mIp1P1=l ;\\zs<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_ts<		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_ts<		<SID>WS:AlignCtrl mIp1P1=l <\\zs<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_ts=		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_ts=		<SID>WS:AlignCtrl mIp1P1=l =\\zs<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_tsp		<SID>WS:keepj	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_tsp		<SID>WS:keepj 'a,.s\/^\\(\\s*\\)\\(.*\\)\/\\=submatch(1).escape(substitute(submatch(2),'\\s\\+','@','g'),'\\')\/<CR>:AlignCtrl mI=lp0P0 @<CR>:'a,.Align<CR>:keepj 'y+1,'z-1s\/@\/ \/g<CR><SID>WE$/;"	m
<Plug>AM_tsq		<SID>WS:'a,.AlignReplaceQuotedSpaces<CR>:keepj	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_tsq		<SID>WS:'a,.AlignReplaceQuotedSpaces<CR>:keepj 'a,.s\/^\\(\\s*\\)\\(.*\\)\/\\=submatch(1).substitute(submatch(2),'\\s\\+','@','g')\/<CR>:AlignCtrl mIp0P0=l @<CR>:'a,.Align<CR>:keepj 'y+1,'z-1s\/[%@]\/ \/g<CR><SID>WE$/;"	m
<Plug>AM_tt		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_tt		<SID>WS:AlignCtrl mIp1P1=l \\\\\\@<!& \\\\\\\\<CR>:'a,.Align<CR><SID>WE$/;"	m
<Plug>AM_t~		<SID>WS:AlignCtrl	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_t~		<SID>WS:AlignCtrl mIp0P0=l ~<CR>:'a,.Align<CR>:'y,'zs\/ \\( *\\);\/;\\1\/ge<CR><SID>WE$/;"	m
<Plug>AM_w=		<SID>WS:'a,'zg/=/s/\s\+\([*/+\-%<Bar>&\~^]\==\)/	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AM_w=		<SID>WS:'a,'zg\/=\/s\/\\s\\+\\([*\/+\\-%<Bar>&\\~^]\\==\\)\/ \\1\/e<CR>:'a,'zg\/=\/s@ \\+\\([*\/+\\-%<Bar>&\\~^]\\)=@\\1=@ge<CR>:'a,'zg\/=\/s\/==\/\\="\\<Char-0x0f>\\<Char-0x0f>"\/ge<CR>:'a,'zg\/=\/s\/!=\/\\="!\\<Char-0x0f>"\/ge<CR>'zk:AlignCtrl mWp1P1=l =<CR>:AlignCtrl g =<CR>:'a,'z-1g\/=\/Align<CR>:'a,'z-1g\/=\/s@\\([*\/+\\-%<Bar>&\\~^!=]\\)\\( \\+\\)=@\\2\\1=@ge<CR>:'a,'z-1g\/=\/s\/\\( \\+\\);\/;\\1\/ge<CR>:'a,'z-1v\/^\\s*\\\/[*\/]\/s\/\\\/[*\/]\/@&@\/e<CR>:'a,'z-1v\/^\\s*\\\/[*\/]\/s\/\\*\\\/\/@&\/e<CR>'zk:call AlignMaps#StdAlign(1)<cr>:'y,'zs\/^\\(\\s*\\) @\/\\1\/e<CR>:'a,'z-1g\/=\/s\/\\xff\/=\/ge<CR>:'y,'zg\/=\/s\/ @\/\/eg<CR><SID>WE$/;"	m
<Plug>AlignMapsWrapperEnd	:call	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AlignMapsWrapperEnd	:call AlignMaps#WrapperEnd()<CR>:set nolz<CR>$/;"	m
<Plug>AlignMapsWrapperStart	:<c-u>set	bundle/Align/plugin/AlignMapsPlugin.vim	/^vnoremap <silent> <script> <Plug>AlignMapsWrapperStart	:<c-u>set lz<CR>:call AlignMaps#WrapperStart(1)<CR>$/;"	m
<Plug>AlignMapsWrapperStart	:set	bundle/Align/plugin/AlignMapsPlugin.vim	/^nnoremap <silent> <script> <Plug>AlignMapsWrapperStart	:set lz<CR>:call AlignMaps#WrapperStart(0)<CR>$/;"	m
<Plug>AutoPairsReturn	bundle/auto-pairs/plugin/auto-pairs.vim	/^imap <script> <Plug>AutoPairsReturn <SID>AutoPairsReturn$/;"	m
<Plug>Csurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Csurround  :<C-U>call <SID>changesurround()<CR>$/;"	m
<Plug>Dsurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Dsurround  :<C-U>call <SID>dosurround(<SID>inputtarget())<CR>$/;"	m
<Plug>ISurround	bundle/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>ISurround  <C-R>=<SID>insert(1)<CR>$/;"	m
<Plug>Isurround	bundle/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>Isurround  <C-R>=<SID>insert()<CR>$/;"	m
<Plug>LookupFile	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  noremap <script> <silent> <Plug>LookupFile :LookupFile<CR>$/;"	m
<Plug>LookupFileCE	bundle/lookupfile1_8/plugin/lookupfile.vim	/^      inoremap <Plug>LookupFileCE <C-E>$/;"	m
<Plug>MarkAllClear	bundle/Mark--Karkat/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkAllClear :<C-u>call mark#ClearAll()<CR>$/;"	m
<Plug>MarkClear	bundle/Mark--Karkat/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkClear    :<C-u>if !mark#DoMark(v:count, (v:count ? '' : mark#CurrentMark()[0]))[0]<Bar>execute "normal! \\<lt>C-\\>\\<lt>C-n>\\<lt>Esc>"<Bar>endif<CR>$/;"	m
<Plug>MarkRegex	bundle/Mark--Karkat/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkRegex    :<C-u>if !mark#MarkRegex(v:count, '')<Bar>execute "normal! \\<lt>C-\\>\\<lt>C-n>\\<lt>Esc>"<Bar>endif<CR>$/;"	m
<Plug>MarkRegex	bundle/Mark--Karkat/plugin/mark.vim	/^vnoremap <silent> <Plug>MarkRegex    :<C-u>if !mark#MarkRegex(v:count, mark#GetVisualSelectionAsRegexp())<Bar>execute "normal! \\<lt>C-\\>\\<lt>C-n>\\<lt>Esc>"<Bar>endif<CR>$/;"	m
<Plug>MarkSearchAnyNext	bundle/Mark--Karkat/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkSearchAnyNext     :<C-u>call mark#SearchAnyMark(0)<CR>$/;"	m
<Plug>MarkSearchAnyPrev	bundle/Mark--Karkat/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkSearchAnyPrev     :<C-u>call mark#SearchAnyMark(1)<CR>$/;"	m
<Plug>MarkSearchCurrentNext	bundle/Mark--Karkat/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkSearchCurrentNext :<C-u>call mark#SearchCurrentMark(0)<CR>$/;"	m
<Plug>MarkSearchCurrentPrev	bundle/Mark--Karkat/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkSearchCurrentPrev :<C-u>call mark#SearchCurrentMark(1)<CR>$/;"	m
<Plug>MarkSearchGroupNext	bundle/Mark--Karkat/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkSearchGroupNext   :<C-u>call mark#SearchGroupMark(v:count, 1, 0, 1)<CR>$/;"	m
<Plug>MarkSearchGroupPrev	bundle/Mark--Karkat/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkSearchGroupPrev   :<C-u>call mark#SearchGroupMark(v:count, 1, 1, 1)<CR>$/;"	m
<Plug>MarkSearchNext	bundle/Mark--Karkat/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkSearchNext        :<C-u>if !mark#SearchNext(0)<Bar>execute 'normal! *zv'<Bar>endif<CR>$/;"	m
<Plug>MarkSearchOrAnyNext	bundle/Mark--Karkat/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkSearchOrAnyNext   :<C-u>if !mark#SearchNext(0,'mark#SearchAnyMark')<Bar>execute 'normal! *zv'<Bar>endif<CR>$/;"	m
<Plug>MarkSearchOrAnyPrev	bundle/Mark--Karkat/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkSearchOrAnyPrev   :<C-u>if !mark#SearchNext(1,'mark#SearchAnyMark')<Bar>execute 'normal! #zv'<Bar>endif<CR>$/;"	m
<Plug>MarkSearchOrCurNext	bundle/Mark--Karkat/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkSearchOrCurNext   :<C-u>if !mark#SearchNext(0,'mark#SearchCurrentMark')<Bar>execute 'normal! *zv'<Bar>endif<CR>$/;"	m
<Plug>MarkSearchOrCurPrev	bundle/Mark--Karkat/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkSearchOrCurPrev   :<C-u>if !mark#SearchNext(1,'mark#SearchCurrentMark')<Bar>execute 'normal! #zv'<Bar>endif<CR>$/;"	m
<Plug>MarkSearchPrev	bundle/Mark--Karkat/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkSearchPrev        :<C-u>if !mark#SearchNext(1)<Bar>execute 'normal! #zv'<Bar>endif<CR>$/;"	m
<Plug>MarkSet	bundle/Mark--Karkat/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkSet      :<C-u>if !mark#MarkCurrentWord(v:count)<Bar>execute "normal! \\<lt>C-\\>\\<lt>C-n>\\<lt>Esc>"<Bar>endif<CR>$/;"	m
<Plug>MarkSet	bundle/Mark--Karkat/plugin/mark.vim	/^vnoremap <silent> <Plug>MarkSet      :<C-u>if !mark#DoMark(v:count, mark#GetVisualSelectionAsLiteralPattern())[0]<Bar>execute "normal! \\<lt>C-\\>\\<lt>C-n>\\<lt>Esc>"<Bar>endif<CR>$/;"	m
<Plug>MarkToggle	bundle/Mark--Karkat/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkToggle   :<C-u>call mark#Toggle()<CR>$/;"	m
<Plug>ProjectOnly	bundle/project/plugin/project.vim	/^        nnoremap <script> <Plug>ProjectOnly :call <SID>DoProjectOnly()<CR>$/;"	m
<Plug>RestoreWinPosn	:call	bundle/Align/plugin/cecutil.vim	/^nmap <silent> <Plug>RestoreWinPosn	:call RestoreWinPosn()<CR>$/;"	m
<Plug>SaveWinPosn		:call	bundle/Align/plugin/cecutil.vim	/^nmap <silent> <Plug>SaveWinPosn		:call SaveWinPosn()<CR>$/;"	m
<Plug>SurroundRepeat	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>SurroundRepeat .$/;"	m
<Plug>ToggleProject	bundle/project/plugin/project.vim	/^nnoremap <script> <Plug>ToggleProject :call <SID>DoToggleProject()<CR>$/;"	m
<Plug>VSurround	bundle/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VSurround  :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>$/;"	m
<Plug>VgSurround	bundle/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VgSurround :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>$/;"	m
<Plug>YSsurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSsurround :<C-U>call <SID>opfunc2(v:count1)<CR>$/;"	m
<Plug>YSurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSurround  :<C-U>set opfunc=<SID>opfunc2<CR>g@$/;"	m
<Plug>Yssurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Yssurround :<C-U>call <SID>opfunc(v:count1)<CR>$/;"	m
<Plug>Ysurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Ysurround  :<C-U>set opfunc=<SID>opfunc<CR>g@$/;"	m
<Plug>ZoomWin	bundle/ZoomWin/plugin/ZoomWinPlugin.vim	/^nnoremap <silent> <Plug>ZoomWin :set lz<bar>sil call ZoomWin#ZoomWin()<bar>set nolz<CR>$/;"	m
<Return>	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <Return>   \\|:call <SID>DoFoldOrOpenEntry('', 'e')<CR>$/;"	m
<RightMouse>	bundle/project/plugin/project.vim	/^        nmap     <buffer> <silent> <RightMouse>   <space>$/;"	m
<S-2-LeftMouse>	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <S-2-LeftMouse> \\|:call <SID>DoFoldOrOpenEntry('', 'sp')<CR>$/;"	m
<S-LeftMouse>	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <S-LeftMouse>   <LeftMouse>$/;"	m
<S-Return>	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <S-Return> \\|:call <SID>DoFoldOrOpenEntry('', 'sp')<CR>$/;"	m
<SID>AutoPairsReturn	bundle/auto-pairs/plugin/auto-pairs.vim	/^inoremap <silent> <SID>AutoPairsReturn <C-R>=AutoPairsReturn()<CR>$/;"	m
<SID>WE	<Plug>AlignMapsWrapperEnd	bundle/Align/plugin/AlignMapsPlugin.vim	/^ nmap <unique> <SID>WE	<Plug>AlignMapsWrapperEnd$/;"	m
<SID>WS	<Plug>AlignMapsWrapperStart	bundle/Align/plugin/AlignMapsPlugin.vim	/^ map <unique> <SID>WS	<Plug>AlignMapsWrapperStart$/;"	m
<SID>xx	bundle/taglist.vim/plugin/taglist.vim	/^    map <SID>xx <SID>xx$/;"	m
<c-r><tab>	bundle/snipmate.vim/after/plugin/snipMate.vim	/^ino <silent> <c-r><tab> <c-r>=ShowAvailableSnips()<cr>$/;"	m
<c-w>o	bundle/ZoomWin/plugin/ZoomWinPlugin.vim	/^ nmap <unique> <c-w>o  <Plug>ZoomWin$/;"	m
<plug>NERDCommenterAltDelims	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <plug>NERDCommenterAltDelims :call <SID>SwitchToAlternativeDelimiters(1)<cr>$/;"	m
<plug>NERDCommenterInsert	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^inoremap <silent> <plug>NERDCommenterInsert <SPACE><BS><ESC>:call NERDComment('i', "insert")<CR>$/;"	m
<s-tab>	bundle/snipmate.vim/after/plugin/snipMate.vim	/^ino <silent> <s-tab> <c-r>=BackwardsSnippet()<cr>$/;"	m
<space>	bundle/project/plugin/project.vim	/^        nnoremap <buffer> <silent> <space>  \\|:silent exec 'vertical resize '.(match(g:proj_flags, '\\Ct')!=-1 && winwidth('.') > g:proj_window_width?(g:proj_window_width):(winwidth('.') + g:proj_window_increment))<CR>$/;"	m
<tab>	bundle/snipmate.vim/after/plugin/snipMate.vim	/^ino <silent> <tab> <c-r>=TriggerSnippet()<cr>$/;"	m
A	bundle/a.vim/plugin/a.vim	/^comm! -nargs=? -bang A call AlternateFile("n<bang>", <f-args>)$/;"	c
AN	bundle/a.vim/plugin/a.vim	/^comm! -nargs=? -bang AN call NextAlternate("<bang>")$/;"	c
AS	bundle/a.vim/plugin/a.vim	/^comm! -nargs=? -bang AS call AlternateFile("h<bang>", <f-args>)$/;"	c
AT	bundle/a.vim/plugin/a.vim	/^comm! -nargs=? -bang AT call AlternateFile("t<bang>", <f-args>)$/;"	c
AV	bundle/a.vim/plugin/a.vim	/^comm! -nargs=? -bang AV call AlternateFile("v<bang>", <f-args>)$/;"	c
AcceptFile	bundle/lookupfile1_8/autoload/lookupfile.vim	/^function! s:AcceptFile(splitWin, key)$/;"	f
ActivateBuffer	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:ActivateBuffer()$/;"	f
AddAlternateExtensionMapping	bundle/a.vim/plugin/a.vim	/^function! <SID>AddAlternateExtensionMapping(extension, alternates)$/;"	f
AddCleanup	bundle/lookupfile1_8/plugin/lookupfile.vim	/^function! s:AddCleanup(cmd)$/;"	f
AddDivider	bundle/vim-powerline/autoload/Pl/Parser.vim	/^function! s:AddDivider(text, side, mode, colors, prev, curr, next) " {{{$/;"	f
AddLeftDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddLeftDelim(delim, theLine)$/;"	f
AddLeftDelimAligned	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddLeftDelimAligned(delim, theLine, alignIndx)$/;"	f
AddPattern	bundle/lookupfile1_8/autoload/lookupfile.vim	/^function! s:AddPattern()$/;"	f
AddRightDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddRightDelim(delim, theLine)$/;"	f
AddRightDelimAligned	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddRightDelimAligned(delim, theLine, alignIndx)$/;"	f
AddScopedTags	bundle/tagbar/autoload/tagbar.vim	/^function! s:AddScopedTags(tags, processedtags, parent, depth,$/;"	f
AddSymbs	bundle/ccvext.vim/plugin/ccvext.vim	/^function! AddSymbs (symbs)$/;"	f
AddTemplateFile	plugin/load_template.vim	/^function s:AddTemplateFile(list,path,filter) "{{{$/;"	f
AddToClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:AddToClasspath(classpath, path)$/;"	f
Align	bundle/Align/plugin/AlignPlugin.vim	/^com! -bang -range -nargs=* Align <line1>,<line2>call Align#Align(<bang>0,<q-args>)$/;"	c
Align#Align	bundle/Align/autoload/Align.vim	/^fun! Align#Align(hasctrl,...) range$/;"	f
Align#AlignCtrl	bundle/Align/autoload/Align.vim	/^fun! Align#AlignCtrl(...)$/;"	f
Align#AlignPop	bundle/Align/autoload/Align.vim	/^fun! Align#AlignPop()$/;"	f
Align#AlignPush	bundle/Align/autoload/Align.vim	/^fun! Align#AlignPush()$/;"	f
Align#AlignReplaceQuotedSpaces	bundle/Align/autoload/Align.vim	/^fun! Align#AlignReplaceQuotedSpaces()$/;"	f
AlignCtrl	bundle/Align/plugin/AlignPlugin.vim	/^com!              -nargs=* AlignCtrl call Align#AlignCtrl(<q-args>)$/;"	c
AlignMaps#Afnc	bundle/Align/autoload/AlignMaps.vim	/^fun! AlignMaps#Afnc()$/;"	f
AlignMaps#AlignMapsClean	bundle/Align/autoload/AlignMaps.vim	/^fun! AlignMaps#AlignMapsClean()$/;"	f
AlignMaps#CharJoiner	bundle/Align/autoload/AlignMaps.vim	/^fun! AlignMaps#CharJoiner(chr)$/;"	f
AlignMaps#Equals	bundle/Align/autoload/AlignMaps.vim	/^fun! AlignMaps#Equals() range$/;"	f
AlignMaps#FixMultiDec	bundle/Align/autoload/AlignMaps.vim	/^fun! AlignMaps#FixMultiDec()$/;"	f
AlignMaps#MakeMap	bundle/Align/autoload/AlignMaps.vim	/^fun! AlignMaps#MakeMap(mapname)$/;"	f
AlignMaps#StdAlign	bundle/Align/autoload/AlignMaps.vim	/^fun! AlignMaps#StdAlign(mode) range$/;"	f
AlignMaps#Vis	bundle/Align/autoload/AlignMaps.vim	/^fun! AlignMaps#Vis(plugmap) range$/;"	f
AlignMaps#WrapperEnd	bundle/Align/autoload/AlignMaps.vim	/^fun! AlignMaps#WrapperEnd() range$/;"	f
AlignMaps#WrapperStart	bundle/Align/autoload/AlignMaps.vim	/^fun! AlignMaps#WrapperStart(vis) range$/;"	f
AlignMapsClean	bundle/Align/plugin/AlignMapsPlugin.vim	/^com! AlignMapsClean	:call AlignMaps#AlignMapsClean()$/;"	c
AlignPop	bundle/Align/plugin/AlignPlugin.vim	/^com!              -nargs=0 AlignPop  call Align#AlignPop()$/;"	c
AlignPush	bundle/Align/plugin/AlignPlugin.vim	/^com!              -nargs=0 AlignPush call Align#AlignPush()$/;"	c
AlignReplaceQuotedSpaces	bundle/Align/plugin/AlignPlugin.vim	/^com!       -range -nargs=0 AlignReplaceQuotedSpaces <line1>,<line2>call Align#AlignReplaceQuotedSpaces()$/;"	c
AltMultipart	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AltMultipart()$/;"	f
AlternateFile	bundle/a.vim/plugin/a.vim	/^function! AlternateFile(splitWindow, ...)$/;"	f
AlternateOpenFileUnderCursor	bundle/a.vim/plugin/a.vim	/^function! AlternateOpenFileUnderCursor(splitWindow,...)$/;"	f
AlternateOpenNextFile	bundle/a.vim/plugin/a.vim	/^function! AlternateOpenNextFile(bang)$/;"	f
AnyMark	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:AnyMark()$/;"	f
AppendCommentToLine	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AppendCommentToLine()$/;"	f
Args	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:Args()$/;"	f
Author	templates/env.vim	/^let Author='cao_yj'$/;"	v
AutoLoadMarks	bundle/Mark--Karkat/plugin/mark.vim	/^	function! s:AutoLoadMarks()$/;"	f
AutoPairsBackInsert	bundle/auto-pairs/plugin/auto-pairs.vim	/^function! AutoPairsBackInsert()$/;"	f
AutoPairsDelete	bundle/auto-pairs/plugin/auto-pairs.vim	/^function! AutoPairsDelete()$/;"	f
AutoPairsFastWrap	bundle/auto-pairs/plugin/auto-pairs.vim	/^function! AutoPairsFastWrap()$/;"	f
AutoPairsInit	bundle/auto-pairs/plugin/auto-pairs.vim	/^function! AutoPairsInit()$/;"	f
AutoPairsInsert	bundle/auto-pairs/plugin/auto-pairs.vim	/^function! AutoPairsInsert(key)$/;"	f
AutoPairsJump	bundle/auto-pairs/plugin/auto-pairs.vim	/^function! AutoPairsJump()$/;"	f
AutoPairsMap	bundle/auto-pairs/plugin/auto-pairs.vim	/^function! AutoPairsMap(key)$/;"	f
AutoPairsReturn	bundle/auto-pairs/plugin/auto-pairs.vim	/^function! AutoPairsReturn()$/;"	f
AutoPairsSpace	bundle/auto-pairs/plugin/auto-pairs.vim	/^function! AutoPairsSpace()$/;"	f
AutoPairsToggle	bundle/auto-pairs/plugin/auto-pairs.vim	/^function! AutoPairsToggle()$/;"	f
AutoPairsTryInit	bundle/auto-pairs/plugin/auto-pairs.vim	/^function! AutoPairsTryInit()$/;"	f
AutoRemoveBufferMap	bundle/ccvext.vim/plugin/ccvext.vim	/^function! AutoRemoveBufferMap ()$/;"	f
AutoTagTrace	bundle/ccvext.vim/plugin/ccvext.vim	/^function! AutoTagTrace ()$/;"	f
AutoUpdate	bundle/tagbar/autoload/tagbar.vim	/^function! s:AutoUpdate(fname, force) abort$/;"	f
BackwardsSnippet	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! BackwardsSnippet()$/;"	f
BaseTag.New	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.New(name) abort dict$/;"	f
BaseTag._getPrefix	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag._getPrefix() abort dict$/;"	f
BaseTag._init	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag._init(name) abort dict$/;"	f
BaseTag.closeFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.closeFold() abort dict$/;"	f
BaseTag.getClosedParentTline	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.getClosedParentTline() abort dict$/;"	f
BaseTag.getPrototype	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.getPrototype(short) abort dict$/;"	f
BaseTag.initFoldState	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.initFoldState() abort dict$/;"	f
BaseTag.isFoldable	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isFoldable() abort dict$/;"	f
BaseTag.isFolded	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isFolded() abort dict$/;"	f
BaseTag.isKindheader	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isKindheader() abort dict$/;"	f
BaseTag.isNormalTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isNormalTag() abort dict$/;"	f
BaseTag.isPseudoTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isPseudoTag() abort dict$/;"	f
BaseTag.openFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.openFold() abort dict$/;"	f
BaseTag.openParents	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.openParents() abort dict$/;"	f
BaseTag.setFolded	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.setFolded(folded) abort dict$/;"	f
BinSearchToAppend	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:BinSearchToAppend(start, end, line, cmp, direction)$/;"	f
BinSearchToAppend2	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:BinSearchToAppend2(start, end, line, cmp, direction, accessor,$/;"	f
Bookmark.AddBookmark	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.GetNodeForName	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot)$/;"	f
Bookmark.GetSelected	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.Sort	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Sort()$/;"	f
Bookmark.ToRoot	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name)$/;"	f
Bookmark.Write	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(...)$/;"	f
Bookmark.compareTo	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.compareTo(otherbookmark)$/;"	f
Bookmark.delete	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.open	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(...)$/;"	f
Bookmark.openInNewTab	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot()$/;"	f
Bookmark.validate	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
BufEnterHook	bundle/syntastic/plugin/syntastic.vim	/^function! s:BufEnterHook()$/;"	f
BufExplorer	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^command! BufExplorer :call BufExplorer()$/;"	c
BufExplorer	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! BufExplorer()$/;"	f
BufExplorerHorizontalSplit	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^command! BufExplorerHorizontalSplit :call BufExplorerHorizontalSplit()$/;"	c
BufExplorerHorizontalSplit	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! BufExplorerHorizontalSplit()$/;"	f
BufExplorerVerticalSplit	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^command! BufExplorerVerticalSplit :call BufExplorerVerticalSplit()$/;"	c
BufExplorerVerticalSplit	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! BufExplorerVerticalSplit()$/;"	f
BufExplorer_IsValid	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! BufExplorer_IsValid()$/;"	f
BufExplorer_ReSize	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! BufExplorer_ReSize()$/;"	f
BufExplorer_Refresh	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! BufExplorer_Refresh()$/;"	f
BufExplorer_Start	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! BufExplorer_Start()$/;"	f
BufLineAccessor	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:BufLineAccessor(line, context)$/;"	f
BufLineMover	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:BufLineMover(from, to, context)$/;"	f
BufLineSwapper	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:BufLineSwapper(line1, line2, context)$/;"	f
BufReadPostHook	bundle/syntastic/plugin/syntastic.vim	/^function! s:BufReadPostHook()$/;"	f
BufWinEnterHook	bundle/syntastic/plugin/syntastic.vim	/^function! s:BufWinEnterHook()$/;"	f
BufWritePostHook	bundle/syntastic/plugin/syntastic.vim	/^function! s:BufWritePostHook()$/;"	f
BufferOrFileExists	bundle/a.vim/plugin/a.vim	/^function! <SID>BufferOrFileExists(fileName)$/;"	f
BuildBufferList	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:BuildBufferList()$/;"	f
BuildContextStack	bundle/OmniCppComplete/autoload/omni/cpp/namespaces.vim	/^function! s:BuildContextStack(namespaces, szCurrentScope)$/;"	f
BuildProject	plugin/cao_yj4java.vim	/^function! BuildProject()$/;"	f
BuildTabStops	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:BuildTabStops(snip, lnum, col, indent)$/;"	f
Bundle	bundle/vundle/autoload/vundle.vim	/^com! -nargs=+         Bundle$/;"	c
BundleClean	bundle/vundle/autoload/vundle.vim	/^com! -nargs=? -bang   BundleClean$/;"	c
BundleDocs	bundle/vundle/autoload/vundle.vim	/^com! -nargs=0         BundleDocs $/;"	c
BundleInstall	bundle/vundle/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete BundleInstall$/;"	c
BundleList	bundle/vundle/autoload/vundle.vim	/^com! -nargs=0 -bang BundleList$/;"	c
BundleSearch	bundle/vundle/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete BundleSearch$/;"	c
BundleUpdate	bundle/vundle/autoload/vundle.vim	/^com! BundleUpdate BundleInstall!$/;"	c
Bundles	bundle/vundle/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete Bundles$/;"	c
CC	plugin/Makefile	/^CC = gcc$/;"	m
CClass	templates/cpp/singleton.h	/^class CClass$/;"	c
CFLAGS	plugin/Makefile	/^CFLAGS = -fPIC -c -Wall$/;"	m
CSyntaxAfter	bundle/cSyntaxAfter/plugin/cSyntaxAfter.vim	/^function! CSyntaxAfter()$/;"	f
CacheErrors	bundle/syntastic/plugin/syntastic.vim	/^function! s:CacheErrors(checkers)$/;"	f
CallPluginMRU	bundle/ccvext.vim/plugin/ccvext.vim	/^function! CallPluginMRU ()$/;"	f
CallPluginMark	bundle/ccvext.vim/plugin/ccvext.vim	/^function! CallPluginMark (op)$/;"	f
CallPluginNERDTree	bundle/ccvext.vim/plugin/ccvext.vim	/^function! CallPluginNERDTree ()$/;"	f
CallPluginTagList	bundle/ccvext.vim/plugin/ccvext.vim	/^function! CallPluginTagList ()$/;"	f
CanCommentLine	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanCommentLine(forceNested, lineNum)$/;"	f
CanPlaceCursor	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanPlaceCursor(line, col)$/;"	f
CanSexyCommentLines	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanSexyCommentLines(topline, bottomline)$/;"	f
CanToggleCommentLine	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanToggleCommentLine(forceNested, lineNum)$/;"	f
CanUseOmnicompletion	bundle/OmniCppComplete/autoload/omni/cpp/maycomplete.vim	/^function! s:CanUseOmnicompletion()$/;"	f
Char2Num	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:Char2Num(c)$/;"	f
CheckConditions	bundle/vim-powerline/autoload/Pl/Segment.vim	/^function! s:CheckConditions(params) " {{{$/;"	f
CheckExCtagsVersion	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckExCtagsVersion(output) abort$/;"	f
CheckFTCtags	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckFTCtags(bin, ftype) abort$/;"	f
CheckForExCtags	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckForExCtags(silent) abort$/;"	f
CheckMouseClick	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckMouseClick() abort$/;"	f
ChooseSnippet	bundle/snipmate.vim/plugin/snipMate.vim	/^fun s:ChooseSnippet(scope, trigger)$/;"	f
Cleanup	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:Cleanup()$/;"	f
ClearCache	bundle/syntastic/plugin/syntastic.vim	/^function! s:ClearCache()$/;"	f
ClearMark	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:ClearMark( index )$/;"	f
Close	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:Close()$/;"	f
Close	bundle/snipmate.vim/ftplugin/html_snip_helper.vim	/^fun! Close()$/;"	f
CloseConfigWnd	bundle/ccvext.vim/plugin/ccvext.vim	/^function! CloseConfigWnd ()$/;"	f
CloseFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:CloseFold() abort$/;"	f
CloseSnippedWndAndListWndOnce	bundle/ccvext.vim/plugin/ccvext.vim	/^function! CloseSnippedWndAndListWndOnce ()$/;"	f
CloseWindow	bundle/ccvext.vim/plugin/ccvext.vim	/^function! CloseWindow ()$/;"	f
CloseWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:CloseWindow() abort$/;"	f
CmpByName	bundle/lookupfile1_8/autoload/lookupfile.vim	/^function! s:CmpByName(i1, i2)$/;"	f
CommentBlock	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentBlock(top, bottom, lSide, rSide, forceNested )$/;"	f
CommentLines	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLines(forceNested, align, firstLine, lastLine)$/;"	f
CommentLinesMinimal	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesMinimal(firstLine, lastLine)$/;"	f
CommentLinesSexy	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesSexy(topline, bottomline)$/;"	f
CommentLinesToggle	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesToggle(forceNested, firstLine, lastLine)$/;"	f
CommentRegion	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentRegion(topLine, topCol, bottomLine, bottomCol, forceNested)$/;"	f
CompareByKind	bundle/tagbar/autoload/tagbar.vim	/^function! s:CompareByKind(tag1, tag2) abort$/;"	f
CompareByLine	bundle/tagbar/autoload/tagbar.vim	/^function! s:CompareByLine(tag1, tag2) abort$/;"	f
CompleteCheckerName	bundle/syntastic/plugin/syntastic.vim	/^function! s:CompleteCheckerName(argLead, cmdLine, cursorPos)$/;"	f
CompleteFiletypes	bundle/syntastic/plugin/syntastic.vim	/^function! s:CompleteFiletypes(argLead, cmdLine, cursorPos)$/;"	f
ConfigBufs	bundle/lookupfile1_8/plugin/lookupfile.vim	/^function! s:ConfigBufs()$/;"	f
ConfigSymbs	bundle/ccvext.vim/plugin/ccvext.vim	/^function! ConfigSymbs ()$/;"	f
ConfigWalk	bundle/lookupfile1_8/plugin/lookupfile.vim	/^function! s:ConfigWalk()$/;"	f
ConstructInfo	bundle/project/plugin/project.vim	/^    function! s:ConstructInfo(home, c_d, scriptin, scriptout, flags, filter)$/;"	f
ConvertLeadingSpacesToTabs	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingSpacesToTabs(line)$/;"	f
ConvertLeadingTabsToSpaces	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingTabsToSpaces(line)$/;"	f
ConvertLeadingWhiteSpace	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingWhiteSpace(line)$/;"	f
CorrectFocusOnStartup	bundle/tagbar/autoload/tagbar.vim	/^function! s:CorrectFocusOnStartup() abort$/;"	f
Count	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:Count(haystack, needle)$/;"	f
CountNonESCedOccurances	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CountNonESCedOccurances(str, searchstr, escChar)$/;"	f
CreateAutocommands	bundle/tagbar/autoload/tagbar.vim	/^function! s:CreateAutocommands() abort$/;"	f
CreateDelimMapFromCms	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CreateDelimMapFromCms()$/;"	f
CreateEntriesFromDir	bundle/project/plugin/project.vim	/^    function! s:CreateEntriesFromDir(recursive)$/;"	f
CreateHelp	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:CreateHelp()$/;"	f
CreateMaps	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function! s:CreateMaps(modes, target, desc, combo)$/;"	f
CreatePseudoTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:CreatePseudoTag(name, parent, scope, typeinfo, fileinfo) abort$/;"	f
CreateTime	templates/env.vim	/^let CreateTime= strftime("%Y-%m-%d %T")$/;"	v
Creator.BufNamePrefix	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
Creator.CreateMirror	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
Creator.CreatePrimary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreatePrimary(name)$/;"	f
Creator.CreateSecondary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateSecondary(dir)$/;"	f
Creator.New	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
Creator.TogglePrimary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.TogglePrimary(dir)$/;"	f
Creator._bindMappings	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
Creator._broadcastInitEvent	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
Creator._createTreeWin	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
Creator._nextBufferName	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
Creator._nextBufferNumber	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
Creator._pathForString	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
Creator._setCommonBufOptions	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
Creator._setupStatusline	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
Creator.createMirror	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
Creator.createPrimary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createPrimary(name)$/;"	f
Creator.createSecondary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createSecondary(dir)$/;"	f
Creator.togglePrimary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.togglePrimary(dir)$/;"	f
CscopeConnectionID	bundle/ccvext.vim/plugin/ccvext.vim	/^function! CscopeConnectionID (id)$/;"	f
CscopeCtagsMenu	bundle/ccvext.vim/plugin/ccvext.vim	/^	command! -nargs=0 CscopeCtagsMenu :call CscopeCtagsMenu ()$/;"	c
CscopeCtagsMenu	bundle/ccvext.vim/plugin/ccvext.vim	/^function! CscopeCtagsMenu ()$/;"	f
CtagsErrMsg	bundle/tagbar/autoload/tagbar.vim	/^function! s:CtagsErrMsg(errmsg, infomsg, silent, ...) abort$/;"	f
Cterm2GUI	bundle/vim-powerline/autoload/Pl/Hi.vim	/^function! s:Cterm2GUI(cterm) " {{{$/;"	f
Cycle	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:Cycle( ... )$/;"	f
CygwinPath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:CygwinPath(path)$/;"	f
DM	bundle/Align/plugin/cecutil.vim	/^com! -bar -nargs=1 DM	call DestroyMark(<q-args>)$/;"	c
DeactivateBuffer	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:DeactivateBuffer(remove)$/;"	f
DefineHighlightings	bundle/Mark--Karkat/plugin/mark.vim	/^function! s:DefineHighlightings( palette, isOverride )$/;"	f
DefineSnips	bundle/snipmate.vim/plugin/snipMate.vim	/^fun s:DefineSnips(dir, aliasft, realft)$/;"	f
DelCscopeSymbs	bundle/ccvext.vim/plugin/ccvext.vim	/^function! DelCscopeSymbs (symbs)$/;"	f
DelSymbs	bundle/ccvext.vim/plugin/ccvext.vim	/^function! DelSymbs (symbs, rm)$/;"	f
DeleteBuffer	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:DeleteBuffer(buf, mode)$/;"	f
Description	templates/env.vim	/^let Description='此类用于测试自动备注是否好使!'$/;"	v
DestroyMark	bundle/Align/plugin/cecutil.vim	/^fun! DestroyMark(markname)$/;"	f
DetectFiletype	bundle/tagbar/autoload/tagbar.vim	/^function! s:DetectFiletype(bufnr) abort$/;"	f
DetermineExtension	bundle/a.vim/plugin/a.vim	/^function! DetermineExtension(path) $/;"	f
DevLogOutput	bundle/ccvext.vim/plugin/ccvext.vim	/^function! DevLogOutput (msg, list)$/;"	f
DiQuickSnippet	bundle/ccvext.vim/plugin/ccvext.vim	/^	command! -nargs=0 DiQuickSnippet :call DiQuickSnippet ()$/;"	c
DiQuickSnippet	bundle/ccvext.vim/plugin/ccvext.vim	/^function! DiQuickSnippet ()$/;"	f
DisplayBufferList	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:DisplayBufferList()$/;"	f
DisplayIncludeTree	bundle/OmniCppComplete/autoload/omni/cpp/includes.vim	/^function! s:DisplayIncludeTree(szFilePath, indent, ...)$/;"	f
DisplayInfo	bundle/project/plugin/project.vim	/^    function! s:DisplayInfo()$/;"	f
DoEnsurePlacementSize_au	bundle/project/plugin/project.vim	/^    function! s:DoEnsurePlacementSize_au()$/;"	f
DoEntryFromDir	bundle/project/plugin/project.vim	/^    function! s:DoEntryFromDir(recursive, line, name, absolute_dir, dir, c_d, filter_directive, filter, foldlev, sort)$/;"	f
DoFoldOrOpenEntry	bundle/project/plugin/project.vim	/^    function! s:DoFoldOrOpenEntry(cmd0, cmd1)$/;"	f
DoProjectOnly	bundle/project/plugin/project.vim	/^        function! s:DoProjectOnly()$/;"	f
DoSetup	bundle/project/plugin/project.vim	/^    function! s:DoSetup()$/;"	f
DoSetupAndSplit	bundle/project/plugin/project.vim	/^    function! s:DoSetupAndSplit()$/;"	f
DoSetupAndSplit_au	bundle/project/plugin/project.vim	/^    function! s:DoSetupAndSplit_au()$/;"	f
DoToggleProject	bundle/project/plugin/project.vim	/^    function! s:DoToggleProject()$/;"	f
DoesBlockHaveDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:DoesBlockHaveDelim(delim, top, bottom)$/;"	f
DoesBlockHaveMultipartDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:DoesBlockHaveMultipartDelim(top, bottom)$/;"	f
EchoMark	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:EchoMark( groupNum, regexp )$/;"	f
EchoMarkCleared	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:EchoMarkCleared( groupNum )$/;"	f
EchoMarksDisabled	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:EchoMarksDisabled()$/;"	f
EchoSearchPattern	bundle/Mark--Karkat/autoload/mark.vim	/^	function! s:EchoSearchPattern( searchType, searchPattern, isBackward )$/;"	f
EditClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:EditClasspath()$/;"	f
EditConfig	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:EditConfig()$/;"	f
EnQuickSnippet	bundle/ccvext.vim/plugin/ccvext.vim	/^	command! -nargs=0 EnQuickSnippet :call EnQuickSnippet ()$/;"	c
EnQuickSnippet	bundle/ccvext.vim/plugin/ccvext.vim	/^function! EnQuickSnippet ()$/;"	f
EnableAndMarkScope	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:EnableAndMarkScope( indices, expr )$/;"	f
EnumerateFilesByExtension	bundle/a.vim/plugin/a.vim	/^function! EnumerateFilesByExtension(path, baseName, extension)$/;"	f
EnumerateFilesByExtensionInPath	bundle/a.vim/plugin/a.vim	/^function! EnumerateFilesByExtensionInPath(baseName, extension, pathList, relPathBase)$/;"	f
EqualFilePaths	bundle/a.vim/plugin/a.vim	/^function! <SID>EqualFilePaths(path1, path2)$/;"	f
Error	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:Error(msg)$/;"	f
ErrorMessage	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:ErrorMessage( searchType, searchPattern, isBackward )$/;"	f
ErrorMsg	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:ErrorMsg( text, ... )$/;"	f
Errors	bundle/syntastic/plugin/syntastic.vim	/^command! Errors call s:ShowLocList()$/;"	c
Esc	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Esc(str)$/;"	f
EscapeCtagsCmd	bundle/tagbar/autoload/tagbar.vim	/^function! s:EscapeCtagsCmd(ctags_bin, args, ...) abort$/;"	f
EscapeText	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:EscapeText( text )$/;"	f
Exe	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function! s:Exe()$/;"	f
ExeAferLoad	plugin/load_template.vim	/^function s:ExeAferLoad() "{{{$/;"	f
ExecCscope	bundle/ccvext.vim/plugin/ccvext.vim	/^function! ExecCscope (list)$/;"	f
ExecCtags	bundle/ccvext.vim/plugin/ccvext.vim	/^function! ExecCtags (list)$/;"	f
ExecWinCmdNoEa	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:ExecWinCmdNoEa(winCmd)$/;"	f
ExecuteCtags	bundle/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtags(ctags_cmd) abort$/;"	f
ExecuteCtagsOnFile	bundle/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtagsOnFile(fname, realfname, typeinfo) abort$/;"	f
ExpandAlternatePath	bundle/a.vim/plugin/a.vim	/^function! <SID>ExpandAlternatePath(pathSpec, sfPath) $/;"	f
ExpandMap	bundle/auto-pairs/plugin/auto-pairs.vim	/^function! s:ExpandMap(map)$/;"	f
ExtendTagItemToPopupItem	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^function! s:ExtendTagItemToPopupItem(tagItem, szTypeName)$/;"	f
ExtractScopeFromTypeInfo	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^function! s:ExtractScopeFromTypeInfo(szTypeInfo)$/;"	f
ExtractSnips	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ExtractSnips(dir, ft)$/;"	f
ExtractSnipsFile	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ExtractSnipsFile(file, ft)$/;"	f
ExtractTypeInfoFromDecl	bundle/OmniCppComplete/autoload/omni/cpp/items.vim	/^function! s:ExtractTypeInfoFromDecl(tokens)$/;"	f
FileInfo.New	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.New(fname, ftype, typeinfo) abort dict$/;"	f
FileInfo.clearOldFolds	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.clearOldFolds() abort dict$/;"	f
FileInfo.closeKindFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.closeKindFold(kind) abort dict$/;"	f
FileInfo.openKindFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.openKindFold(kind) abort dict$/;"	f
FileInfo.reset	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.reset() abort dict$/;"	f
FileInfo.sortTags	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.sortTags() abort dict$/;"	f
FileName	templates/env.vim	/^let FileName=expand("%:t:r")$/;"	v
FilePatIgnoreCase	bundle/lookupfile1_8/plugin/lookupfile.vim	/^function! s:FilePatIgnoreCase(filePat)$/;"	f
Filename	bundle/snipmate.vim/autoload/snipMate.vim	/^fun! Filename(...)$/;"	f
FilterClassMembers	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^function! s:FilterClassMembers(tagPopupList, szAccessFilter)$/;"	f
FilterClassScopeMembers	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^function! s:FilterClassScopeMembers(tagPopupList, szAccessFilter)$/;"	f
FilterNamespaceScopeMembers	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^function! s:FilterNamespaceScopeMembers(tagPopupList)$/;"	f
FilterOverloadedFunctions	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^function! s:FilterOverloadedFunctions(tagPopupList)$/;"	f
FilterStaticClassMembers	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^function! s:FilterStaticClassMembers(tagPopupList, szAccessFilter)$/;"	f
FindBoundingLinesOfSexyCom	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:FindBoundingLinesOfSexyCom(lineNum)$/;"	f
FindBufferForName	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:FindBufferForName(fileName)$/;"	f
FindDelimiterIndex	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:FindDelimiterIndex(delimiter, line)$/;"	f
FindFileInSearchPath	bundle/a.vim/plugin/a.vim	/^function! <SID>FindFileInSearchPath(fileName, pathList, relPathBase)$/;"	f
FindFileInSearchPathEx	bundle/a.vim/plugin/a.vim	/^function! <SID>FindFileInSearchPathEx(fileName, pathList, relPathBase, count)$/;"	f
FindFoldBottom	bundle/project/plugin/project.vim	/^    function! s:FindFoldBottom(line)$/;"	f
FindFoldTop	bundle/project/plugin/project.vim	/^    function! s:FindFoldTop(line)$/;"	f
FindMarkedWindow	bundle/ccvext.vim/plugin/ccvext.vim	/^function! FindMarkedWindow (page_idx, mark_desc)$/;"	f
FindOrCreateBuffer	bundle/a.vim/plugin/a.vim	/^function! <SID>FindOrCreateBuffer(fileName, doSplit, findSimilar)$/;"	f
FindStartPositionOfCompletion	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^function! s:FindStartPositionOfCompletion()$/;"	f
FormatChunk	bundle/auto-pairs/plugin/auto-pairs.vim	/^func! s:FormatChunk(open, close)$/;"	f
FormatFileResults	bundle/lookupfile1_8/plugin/lookupfile.vim	/^function! s:FormatFileResults(fl, parentLen, matchPat, matchingCase, dirsOnly)$/;"	f
ForwardToZshChecker	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! s:ForwardToZshChecker()$/;"	f
FreeGroupIndex	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:FreeGroupIndex()$/;"	f
GUDebugEcho	bundle/genutils-2.5/autoload/genutils.vim	/^command! -complete=file -nargs=* GUDebugEcho :echo <q-args>$/;"	c
GenerateEntry	bundle/project/plugin/project.vim	/^    function! s:GenerateEntry(recursive, line, name, absolute_dir, dir, c_d, filter_directive, filter, foldlev, sort)$/;"	f
GetAccessFilter	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^function! s:GetAccessFilter(szFilter, szAccessFilter)$/;"	f
GetAllUsingNamespaceMapFromCurrentBuffer	bundle/OmniCppComplete/autoload/omni/cpp/namespaces.vim	/^function! s:GetAllUsingNamespaceMapFromCurrentBuffer(...)$/;"	f
GetAllUsingNamespaceMapFromFile	bundle/OmniCppComplete/autoload/omni/cpp/namespaces.vim	/^function! s:GetAllUsingNamespaceMapFromFile(szFilePath, ...)$/;"	f
GetAlternativeCount	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:GetAlternativeCount( pattern )$/;"	f
GetBufferInfo	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:GetBufferInfo(bufnr)$/;"	f
GetCd	bundle/project/plugin/project.vim	/^    function! s:GetCd(info, home)$/;"	f
GetCflags	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:GetCflags(ft, ck, opts)$/;"	f
GetCheckerVar	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:GetCheckerVar(scope, filetype, subchecker, name, default)$/;"	f
GetClassScopeAtCursor	bundle/OmniCppComplete/autoload/omni/cpp/namespaces.vim	/^function! s:GetClassScopeAtCursor()$/;"	f
GetCommand	bundle/lookupfile1_8/autoload/lookupfile.vim	/^function! s:GetCommand(withPopupTrigger, withSkipPat, actCmd, innerCmd)$/;"	f
GetDefDir	bundle/lookupfile1_8/plugin/lookupfile.vim	/^function! s:GetDefDir()$/;"	f
GetFileWinnr	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetFileWinnr(fileinfo) abort$/;"	f
GetFilter	bundle/project/plugin/project.vim	/^    function! s:GetFilter(info, parent_filter)$/;"	f
GetFlags	bundle/project/plugin/project.vim	/^    function! s:GetFlags(info)$/;"	f
GetHelpStatus	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:GetHelpStatus()$/;"	f
GetHome	bundle/project/plugin/project.vim	/^    function! s:GetHome(info, parent_home)$/;"	f
GetIncludeDirs	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:GetIncludeDirs(filetype)$/;"	f
GetIncludeListFromCurrentBuffer	bundle/OmniCppComplete/autoload/omni/cpp/includes.vim	/^function! s:GetIncludeListFromCurrentBuffer()$/;"	f
GetIncludeListFromFile	bundle/OmniCppComplete/autoload/omni/cpp/includes.vim	/^function! s:GetIncludeListFromFile(szFilePath, bUpdate) $/;"	f
GetMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetMakeprg()$/;"	f
GetMarker	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:GetMarker( index, nextGroupIndex )$/;"	f
GetMavenClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:GetMavenClasspath()$/;"	f
GetMavenProperties	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:GetMavenProperties()$/;"	f
GetNamespaceAliasListFromLine	bundle/OmniCppComplete/autoload/omni/cpp/namespaces.vim	/^function! s:GetNamespaceAliasListFromLine(szLine)$/;"	f
GetNamespaceAliasMap	bundle/OmniCppComplete/autoload/omni/cpp/namespaces.vim	/^function! s:GetNamespaceAliasMap()$/;"	f
GetNamespaceListFromLine	bundle/OmniCppComplete/autoload/omni/cpp/namespaces.vim	/^function! s:GetNamespaceListFromLine(szLine)$/;"	f
GetNearbyTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetNearbyTag(all, forcecurrent, ...) abort$/;"	f
GetNextGroupIndex	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:GetNextGroupIndex()$/;"	f
GetNextWinnrInStack	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:GetNextWinnrInStack(dir)$/;"	f
GetNthItemFromList	bundle/a.vim/plugin/a.vim	/^function! <SID>GetNthItemFromList(list, n) $/;"	f
GetOcamlBuildMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOcamlBuildMakeprg()$/;"	f
GetOcamlcMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOcamlcMakeprg()$/;"	f
GetOtherMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOtherMakeprg()$/;"	f
GetPalette	bundle/Mark--Karkat/plugin/mark.vim	/^function! s:GetPalette()$/;"	f
GetProfile	bundle/syntastic/syntax_checkers/glsl/cgc.vim	/^function! s:GetProfile()$/;"	f
GetScriptin	bundle/project/plugin/project.vim	/^    function! s:GetScriptin(info, home)$/;"	f
GetScriptout	bundle/project/plugin/project.vim	/^    function! s:GetScriptout(info, home)$/;"	f
GetSexyComLeft	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComLeft(space, esc)$/;"	f
GetSexyComMarker	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComMarker(space, esc)$/;"	f
GetSexyComRight	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComRight(space, esc)$/;"	f
GetShell	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! s:GetShell()$/;"	f
GetSnippet	bundle/snipmate.vim/plugin/snipMate.vim	/^fun s:GetSnippet(word, scope)$/;"	f
GetSnippets	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! GetSnippets(dir, filetypes)$/;"	f
GetStopPositionForLocalSearch	bundle/OmniCppComplete/autoload/omni/cpp/namespaces.vim	/^function! s:GetStopPositionForLocalSearch()$/;"	f
GetSupportedFiletypes	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetSupportedFiletypes() abort$/;"	f
GetSymbol	bundle/OmniCppComplete/autoload/omni/cpp/items.vim	/^function! s:GetSymbol(tokens)$/;"	f
GetTabNbr	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:GetTabNbr(bufNbr)$/;"	f
GetTagInfo	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetTagInfo(linenr, ignorepseudo) abort$/;"	f
GetTagOfSameScope	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^function! s:GetTagOfSameScope(listTags, szScopeToMatch)$/;"	f
GetTypeInfoOfReturnedType	bundle/OmniCppComplete/autoload/omni/cpp/items.vim	/^function! s:GetTypeInfoOfReturnedType(contextStack, szFunctionName)$/;"	f
GetTypeInfoOfVariable	bundle/OmniCppComplete/autoload/omni/cpp/items.vim	/^function! s:GetTypeInfoOfVariable(contextStack, szVariable, bSearchDecl)$/;"	f
GetUsingNamespaceListFromMap	bundle/OmniCppComplete/autoload/omni/cpp/namespaces.vim	/^function! s:GetUsingNamespaceListFromMap(namespaceMap, ...)$/;"	f
GetValaModules	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! s:GetValaModules()$/;"	f
GetValaVapiDirs	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! s:GetValaVapiDirs()$/;"	f
GetWinDim	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:GetWinDim(dir, win)$/;"	f
GetWinNbr	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:GetWinNbr(tabNbr, bufNbr)$/;"	f
GhcModNew	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^function! s:GhcModNew(exe)$/;"	f
GoToLine	bundle/ccvext.vim/plugin/ccvext.vim	/^function! GoToLine(mainbuffer)$/;"	f
GoToMaredWindow	bundle/ccvext.vim/plugin/ccvext.vim	/^function! GoToMaredWindow (page_idx, mark_desc)$/;"	f
GoWinbufnr	bundle/Align/plugin/cecutil.vim	/^fun! GoWinbufnr(bufnum)$/;"	f
GotoFileWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoFileWindow(fileinfo, ...) abort$/;"	f
GotoNextToplevelTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoNextToplevelTag(direction) abort$/;"	f
GotoWinNum	bundle/ZoomWin/autoload/ZoomWin.vim	/^fun! s:GotoWinNum(winnum)$/;"	f
GrepAll	bundle/project/plugin/project.vim	/^    function! s:GrepAll(recurse, lineno, pattern)$/;"	f
GrepToBuffer	bundle/ccvext.vim/plugin/ccvext.vim	/^function! GrepToBuffer(pattern)$/;"	f
HasATagFileOrTagEnvChanged	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^function! s:HasATagFileOrTagEnvChanged()$/;"	f
HasCStyleComments	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasCStyleComments()$/;"	f
HasLeadingTabs	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasLeadingTabs(...)$/;"	f
HasMultipartDelims	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasMultipartDelims()$/;"	f
HasTagEnvChanged	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^function! s:HasTagEnvChanged()$/;"	f
HasVariablePersistence	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:HasVariablePersistence()$/;"	f
HeightToSize	plugin/cao_yj4java.vim	/^func! HeightToSize(height)$/;"	f
HiLink	bundle/cSyntaxAfter/after/syntax/javacc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	bundle/cSyntaxAfter/after/syntax/javacc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	syntax/javacc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	syntax/javacc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HidePopup	bundle/lookupfile1_8/autoload/lookupfile.vim	/^function! s:HidePopup()$/;"	f
HighlightTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:HighlightTag(openfolds, ...) abort$/;"	f
HlCreate	bundle/vim-powerline/autoload/Pl/Parser.vim	/^function! s:HlCreate(hl) " {{{$/;"	f
HlExists	bundle/vim-powerline/autoload/Pl/Parser.vim	/^function! s:HlExists(hl) " {{{$/;"	f
HtmlHiLink	bundle/cSyntaxAfter/after/syntax/html.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	bundle/cSyntaxAfter/after/syntax/html.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlHiLink	syntax/html.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	syntax/html.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
IH	bundle/a.vim/plugin/a.vim	/^comm! -nargs=? -bang IH call AlternateOpenFileUnderCursor("n<bang>", <f-args>)$/;"	c
IHN	bundle/a.vim/plugin/a.vim	/^comm! -nargs=? -bang IHN call AlternateOpenNextFile("<bang>")$/;"	c
IHS	bundle/a.vim/plugin/a.vim	/^comm! -nargs=? -bang IHS call AlternateOpenFileUnderCursor("h<bang>", <f-args>)$/;"	c
IHT	bundle/a.vim/plugin/a.vim	/^comm! -nargs=? -bang IHT call AlternateOpenFileUnderCursor("t<bang>", <f-args>)$/;"	c
IHV	bundle/a.vim/plugin/a.vim	/^comm! -nargs=? -bang IHV call AlternateOpenFileUnderCursor("v<bang>", <f-args>)$/;"	c
IdoAccept	bundle/lookupfile1_8/plugin/lookupfile.vim	/^function! s:IdoAccept(splitWin, key)$/;"	f
IdoBS	bundle/lookupfile1_8/plugin/lookupfile.vim	/^function! s:IdoBS()$/;"	f
IdoSwitchTo	bundle/lookupfile1_8/plugin/lookupfile.vim	/^function! s:IdoSwitchTo(mode)$/;"	f
IdoTab	bundle/lookupfile1_8/plugin/lookupfile.vim	/^function! s:IdoTab()$/;"	f
IgnoreError	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:IgnoreError(text)$/;"	f
IgnoreError	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:IgnoreError(text)$/;"	f
IgnoreFile	bundle/syntastic/plugin/syntastic.vim	/^function! s:IgnoreFile(filename)$/;"	f
IndentLinesReset	bundle/indentLine/after/plugin/indentLine.vim	/^command! -nargs=? IndentLinesReset call <SID>ResetWidth(<f-args>)$/;"	c
IndentLinesToggle	bundle/indentLine/after/plugin/indentLine.vim	/^command! IndentLinesToggle call <SID>IndentLinesToggle()$/;"	c
IndentLinesToggle	bundle/indentLine/after/plugin/indentLine.vim	/^function! <SID>IndentLinesToggle()$/;"	f
Init	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:Init()$/;"	f
Init	bundle/tagbar/autoload/tagbar.vim	/^function! s:Init(silent) abort$/;"	f
InitColor	bundle/indentLine/after/plugin/indentLine.vim	/^function! <SID>InitColor()$/;"	f
InitComplete	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^function! s:InitComplete()$/;"	f
InitTypes	bundle/tagbar/autoload/tagbar.vim	/^function! s:InitTypes() abort$/;"	f
InitVariable	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:InitVariable(var, value)$/;"	f
InitWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:InitWindow(autoclose) abort$/;"	f
Initialize	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:Initialize()$/;"	f
InvertComment	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:InvertComment(firstLine, lastLine)$/;"	f
InvokeFuncs	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:InvokeFuncs(funcList)$/;"	f
IsAbsolutePath	bundle/project/plugin/project.vim	/^    function! s:IsAbsolutePath(path)$/;"	f
IsCached	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^function! s:IsCached(cache, szKey1, szKey2)$/;"	f
IsComment	plugin/cao_yj4java.vim	/^function! s:IsComment(str)$/;"	f
IsCommented	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommented(left, right, line)$/;"	f
IsCommentedFromStartOfLine	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedFromStartOfLine(left, line)$/;"	f
IsCommentedNormOrSexy	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedNormOrSexy(lineNum)$/;"	f
IsCommentedOuttermost	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedOuttermost(left, right, leftAlt, rightAlt, line)$/;"	f
IsDelimValid	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsDelimValid(delimiter, delIndx, line)$/;"	f
IsEscaped	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsEscaped(str, indx, escChar)$/;"	f
IsIgnoreCase	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:IsIgnoreCase( expr )$/;"	f
IsInSexyComment	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsInSexyComment(line)$/;"	f
IsNumEven	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsNumEven(num)$/;"	f
IsRedrawRequiredAfterMake	bundle/syntastic/plugin/syntastic.vim	/^function! s:IsRedrawRequiredAfterMake()$/;"	f
IsSexyComment	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsSexyComment(topline, bottomline)$/;"	f
IsShellValid	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! s:IsShellValid()$/;"	f
IsTypeInfoResolved	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^function! s:IsTypeInfoResolved(szTypeInfo)$/;"	f
IsUnnamedType	bundle/OmniCppComplete/autoload/omni/cpp/items.vim	/^function! s:IsUnnamedType(tagItem)$/;"	f
IsValid	bundle/lookupfile1_8/autoload/lookupfile.vim	/^function! s:IsValid(fileName)$/;"	f
IsValidFile	bundle/tagbar/autoload/tagbar.vim	/^function! s:IsValidFile(fname, ftype) abort$/;"	f
JavaHiLink	bundle/cSyntaxAfter/after/syntax/java.vim	/^  command! -nargs=+ JavaHiLink hi def link <args>$/;"	c
JavaHiLink	bundle/cSyntaxAfter/after/syntax/java.vim	/^  command! -nargs=+ JavaHiLink hi link <args>$/;"	c
JavaHiLink	syntax/java.vim	/^  command! -nargs=+ JavaHiLink hi def link <args>$/;"	c
JavaHiLink	syntax/java.vim	/^  command! -nargs=+ JavaHiLink hi link <args>$/;"	c
JavaImports_Del_ambigous_imports	plugin/javaimports.vim	/^fun JavaImports_Del_ambigous_imports(buffer)$/;"	f
JavaImports_Fill_buffer	plugin/javaimports.vim	/^fun JavaImports_Fill_buffer(imports, buffer)$/;"	f
JavaImports_Get_paste_content	plugin/javaimports.vim	/^fun JavaImports_Get_paste_content(buffer)$/;"	f
JavaImports_Get_user_input	plugin/javaimports.vim	/^fun JavaImports_Get_user_input(ambiguous_clauses)$/;"	f
JavaImports_Insert_imported_classes	plugin/javaimports.vim	/^fun JavaImports_Insert_imported_classes(file_content)$/;"	f
JavaRun	plugin/cao_yj4java.vim	/^function! JavaRun()$/;"	f
JumpToTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:JumpToTag(stay_in_tagbar) abort$/;"	f
KeyMap.Add	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
KeyMap.All	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Create	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.FindFor	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
KeyMap.Invoke	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
KeyMap.Remove	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
KeyMap.bind	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
KeyMap.invoke	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
KindheaderTag.closeFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.closeFold() abort dict$/;"	f
KindheaderTag.getPrototype	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.getPrototype(short) abort dict$/;"	f
KindheaderTag.isFoldable	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isFoldable() abort dict$/;"	f
KindheaderTag.isFolded	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isFolded() abort dict$/;"	f
KindheaderTag.isKindheader	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isKindheader() abort dict$/;"	f
KindheaderTag.openFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.openFold() abort dict$/;"	f
KindheaderTag.toggleFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.toggleFold() abort dict$/;"	f
LUArgs	bundle/lookupfile1_8/plugin/lookupfile.vim	/^command! -nargs=? -bang -complete=file LUArgs :call$/;"	c
LUBufs	bundle/lookupfile1_8/plugin/lookupfile.vim	/^command! -nargs=? -bang -complete=file LUBufs :call$/;"	c
LUPath	bundle/lookupfile1_8/plugin/lookupfile.vim	/^command! -nargs=? -bang -complete=file LUPath :call$/;"	c
LUTags	bundle/lookupfile1_8/plugin/lookupfile.vim	/^command! -nargs=? -bang -complete=tag LUTags :call$/;"	c
LUWalk	bundle/lookupfile1_8/plugin/lookupfile.vim	/^command! -nargs=? -bang -complete=dir LUWalk :call$/;"	c
LastIndexOfDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:LastIndexOfDelim(delim, str)$/;"	f
LayoutEclipse	plugin/cao_yj4java.vim	/^function! LayoutEclipse()$/;"	f
Left	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Left(...)$/;"	f
LeftMostIndx	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:LeftMostIndx(countCommentedLines, countEmptyLines, topline, bottomline)$/;"	f
LinuxF12	plugin/cao_yj4java.vim	/^   function! LinuxF12()$/;"	f
ListSpawn	bundle/project/plugin/project.vim	/^    function! s:ListSpawn(varnamesegment)$/;"	f
LoadAll	bundle/project/plugin/project.vim	/^    function! s:LoadAll(recurse, line)$/;"	f
LoadAllSplit	bundle/project/plugin/project.vim	/^    function! s:LoadAllSplit(recurse, line)$/;"	f
LoadConfigData	bundle/ccvext.vim/plugin/ccvext.vim	/^function! LoadConfigData (env_f)$/;"	f
LoadConfigFile	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:LoadConfigFile()$/;"	f
LoadFile	plugin/load_template.vim	/^function s:LoadFile(path) "{{{$/;"	f
LoadFile	plugin/templatefile.vim	/^command! -nargs=1 LoadFile call LoadFile(<args>)$/;"	c
LoadFile	plugin/templatefile.vim	/^fun! LoadFile(filename)$/;"	f
LoadTemplate	plugin/load_template.vim	/^function LoadTemplate(...) "{{{$/;"	f
LoadTemplateFile	plugin/templatefile.vim	/^command! -nargs=0 LoadTemplateFile call LoadTemplateFile()$/;"	c
LoadTemplateFile	plugin/templatefile.vim	/^fun! LoadTemplateFile()$/;"	f
LoadTemplateFileConfirm	plugin/templatefile.vim	/^fun! LoadTemplateFileConfirm(filename)$/;"	f
LoadUserTypeDefs	bundle/tagbar/autoload/tagbar.vim	/^function! s:LoadUserTypeDefs(...) abort$/;"	f
LocalSearchDecl	bundle/OmniCppComplete/autoload/omni/cpp/items.vim	/^function! s:LocalSearchDecl(name)$/;"	f
LogDebugMessage	bundle/tagbar/autoload/tagbar.vim	/^function! s:LogDebugMessage(msg) abort$/;"	f
LookupArgs	bundle/lookupfile1_8/plugin/lookupfile.vim	/^function! s:LookupArgs(pattern)$/;"	f
LookupBufs	bundle/lookupfile1_8/plugin/lookupfile.vim	/^function! s:LookupBufs(pattern)$/;"	f
LookupFile	bundle/lookupfile1_8/plugin/lookupfile.vim	/^command! -nargs=? -bang -complete=file LookupFile :call$/;"	c
LookupFileReset	bundle/lookupfile1_8/autoload/lookupfile.vim	/^function! s:LookupFileReset(force)$/;"	f
LookupFileSet	bundle/lookupfile1_8/autoload/lookupfile.vim	/^function! s:LookupFileSet()$/;"	f
LookupPath	bundle/lookupfile1_8/plugin/lookupfile.vim	/^function! s:LookupPath(pattern)$/;"	f
LookupReset	bundle/lookupfile1_8/plugin/lookupfile.vim	/^function! s:LookupReset()$/;"	f
LookupUsing	bundle/lookupfile1_8/plugin/lookupfile.vim	/^function! s:LookupUsing(ftr, bang, initPat, minPatLen)$/;"	f
LookupWalk	bundle/lookupfile1_8/plugin/lookupfile.vim	/^function! s:LookupWalk(pattern)$/;"	f
MAX_IMPORT_CHARS	plugin/libvim_javaimports.c	3;"	d	file:
MRUCmp	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:MRUCmp(line1, line2)$/;"	f
MRUListShow	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:MRUListShow()$/;"	f
MRUPop	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:MRUPop(bufnr)$/;"	f
MRUPush	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:MRUPush(buf)$/;"	f
MagicFunc	bundle/ccvext.vim/plugin/ccvext.vim	/^fu! <SID>MagicFunc ()$/;"	f
MakeDirP	bundle/ccvext.vim/plugin/ccvext.vim	/^function! MakeDirP (path)$/;"	f
MakeDirectGroupMappings	bundle/Mark--Karkat/plugin/mark.vim	/^function! s:MakeDirectGroupMappings()$/;"	f
MakeList	bundle/ccvext.vim/plugin/ccvext.vim	/^function! MakeList (dir)$/;"	f
MakeSnip	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! MakeSnip(scope, trigger, content, ...)$/;"	f
MakeSpace	bundle/Align/autoload/Align.vim	/^fun! s:MakeSpace(spacecnt)$/;"	f
MapKeys	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:MapKeys()$/;"	f
MapKeys	bundle/tagbar/autoload/tagbar.vim	/^function! s:MapKeys() abort$/;"	f
Mark	bundle/Mark--Karkat/autoload/mark.vim	/^augroup Mark$/;"	a
Mark	bundle/Mark--Karkat/plugin/mark.vim	/^command! -bang -range=0 -nargs=? -complete=customlist,mark#Complete Mark if <bang>0 | silent call mark#DoMark(<count>, '') | endif | if !mark#DoMarkAndSetCurrent(<count>, <f-args>)[0] | echoerr printf('Only %d mark highlight groups', mark#GetGroupNum()) | endif$/;"	c
MarkClear	bundle/Mark--Karkat/plugin/mark.vim	/^command! -bar MarkClear call mark#ClearAll()$/;"	c
MarkEnable	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:MarkEnable( enable, ...)$/;"	f
MarkInitialization	bundle/Mark--Karkat/plugin/mark.vim	/^	augroup MarkInitialization$/;"	a
MarkLoad	bundle/Mark--Karkat/plugin/mark.vim	/^command! -bar -nargs=? -complete=customlist,mark#MarksVariablesComplete MarkLoad call mark#LoadCommand(1, <f-args>)$/;"	c
MarkMatch	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:MarkMatch( indices, expr )$/;"	f
MarkPalette	bundle/Mark--Karkat/plugin/mark.vim	/^command! -bar -nargs=1 -complete=customlist,<SID>MarkPaletteComplete MarkPalette call <SID>SetPalette(<q-args>)$/;"	c
MarkPaletteComplete	bundle/Mark--Karkat/plugin/mark.vim	/^function! s:MarkPaletteComplete( ArgLead, CmdLine, CursorPos )$/;"	f
MarkSave	bundle/Mark--Karkat/plugin/mark.vim	/^command! -bar -nargs=? -complete=customlist,mark#MarksVariablesComplete MarkSave call mark#SaveCommand(<f-args>)$/;"	c
MarkScope	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:MarkScope( indices, expr )$/;"	f
MarkWindow	bundle/ccvext.vim/plugin/ccvext.vim	/^function! MarkWindow (mark_desc)$/;"	f
Marks	bundle/Mark--Karkat/plugin/mark.vim	/^command! -bar Marks call mark#List()$/;"	c
Match	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:Match(expr, pat, start)$/;"	f
MatchingExactCase	bundle/lookupfile1_8/plugin/lookupfile.vim	/^function! s:MatchingExactCase(filePat)$/;"	f
MavenOutputDirectory	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:MavenOutputDirectory()$/;"	f
MenuController.New	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.showMenu	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
Modules	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function s:Modules()$/;"	f
MoveDown	bundle/project/plugin/project.vim	/^    function! s:MoveDown()$/;"	f
MoveUp	bundle/project/plugin/project.vim	/^    function! s:MoveUp()$/;"	f
Multipart	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Multipart()$/;"	f
NERDComment	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function! NERDComment(mode, type) range$/;"	f
NERDCommenter	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^augroup NERDCommenter$/;"	a
NERDTree	bundle/nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTree :call g:NERDTreeCreator.CreatePrimary('<args>')$/;"	c
NERDTreeAddKeyMap	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddSubmenu	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeCWD call NERDTreeCWD()$/;"	c
NERDTreeCWD	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeClose	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeClose :call nerdtree#closeTreeIfOpen()$/;"	c
NERDTreeCopyNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeDeleteNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeFind	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeFind call nerdtree#findAndRevealPath()$/;"	c
NERDTreeFocus	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeFocus call NERDTreeFocus()$/;"	c
NERDTreeFocus	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeFromBookmark	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=1 -complete=customlist,nerdtree#completeBookmarks -bar NERDTreeFromBookmark call g:NERDTreeCreator.CreatePrimary('<args>')$/;"	c
NERDTreeHijackNetrw	bundle/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeMirror	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeMirror call g:NERDTreeCreator.CreateMirror()$/;"	c
NERDTreeMoveNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRender	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealInFinder	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeToggle	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTreeToggle :call g:NERDTreeCreator.TogglePrimary('<args>')$/;"	c
NeoComplCacheCachingBuffer	bundle/neocomplcache.vim/plugin/neocomplcache/buffer_complete.vim	/^      \\ NeoComplCacheCachingBuffer$/;"	c
NeoComplCacheCachingDictionary	bundle/neocomplcache.vim/plugin/neocomplcache/dictionary_complete.vim	/^      \\ NeoComplCacheCachingDictionary$/;"	c
NeoComplCacheCachingInclude	bundle/neocomplcache.vim/plugin/neocomplcache/include_complete.vim	/^command! -nargs=? -complete=buffer NeoComplCacheCachingInclude$/;"	c
NeoComplCacheCachingSyntax	bundle/neocomplcache.vim/plugin/neocomplcache/syntax_complete.vim	/^      \\ NeoComplCacheCachingSyntax$/;"	c
NeoComplCacheCachingTags	bundle/neocomplcache.vim/plugin/neocomplcache/tags_complete.vim	/^      \\ NeoComplCacheCachingTags$/;"	c
NeoComplCacheClean	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheClean$/;"	c
NeoComplCacheDisable	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheDisable$/;"	c
NeoComplCacheDisableCaching	bundle/neocomplcache.vim/plugin/neocomplcache/buffer_complete.vim	/^      \\ NeoComplCacheDisableCaching$/;"	c
NeoComplCacheEnable	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheEnable$/;"	c
NeoComplCacheEnableCaching	bundle/neocomplcache.vim/plugin/neocomplcache/buffer_complete.vim	/^      \\ NeoComplCacheEnableCaching$/;"	c
NeoComplCacheLock	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheLock$/;"	c
NeoComplCacheLockSource	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^command! -nargs=1 -bar NeoComplCacheLockSource$/;"	c
NeoComplCacheOutputKeyword	bundle/neocomplcache.vim/plugin/neocomplcache/buffer_complete.vim	/^      \\ NeoComplCacheOutputKeyword$/;"	c
NeoComplCachePrintSource	bundle/neocomplcache.vim/plugin/neocomplcache/buffer_complete.vim	/^      \\ NeoComplCachePrintSource$/;"	c
NeoComplCacheSetFileType	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^  command! -nargs=1 -bar -complete=filetype NeoComplCacheSetFileType$/;"	c
NeoComplCacheSetFileType	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^  command! -nargs=1 -bar NeoComplCacheSetFileType$/;"	c
NeoComplCacheToggle	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheToggle$/;"	c
NeoComplCacheUnlock	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheUnlock$/;"	c
NeoComplCacheUnlockSource	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^command! -nargs=1 -bar NeoComplCacheUnlockSource$/;"	c
NerdEcho	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NerdEcho(msg, typeOfMsg)$/;"	f
NewTags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:NewTags(name)$/;"	f
NextAlternate	bundle/a.vim/plugin/a.vim	/^function! NextAlternate(bang)$/;"	f
NextNormalWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:NextNormalWindow() abort$/;"	f
NoMarkErrorMessage	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:NoMarkErrorMessage()$/;"	f
NormalTag.getPrototype	bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.getPrototype(short) abort dict$/;"	f
NormalTag.isNormalTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.isNormalTag() abort dict$/;"	f
NormalTag.str	bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.str(longsig, full) abort dict$/;"	f
NormalTag.strfmt	bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.strfmt() abort dict$/;"	f
NumLinesInBuf	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NumLinesInBuf()$/;"	f
NumberOfLeadingTabs	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NumberOfLeadingTabs(s)$/;"	f
OSSupportsShellredirHack	bundle/syntastic/plugin/syntastic.vim	/^function! s:OSSupportsShellredirHack()$/;"	f
OpenConfigWnd	bundle/ccvext.vim/plugin/ccvext.vim	/^function! OpenConfigWnd (arg)$/;"	f
OpenCurFile	bundle/lookupfile1_8/autoload/lookupfile.vim	/^function! s:OpenCurFile(splitWin)$/;"	f
OpenEntry	bundle/project/plugin/project.vim	/^    function! s:OpenEntry(line, precmd, editcmd, dir)$/;"	f
OpenEntry2	bundle/project/plugin/project.vim	/^    function! s:OpenEntry2(line, infoline, fname, editcmd)$/;"	f
OpenFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenFold() abort$/;"	f
OpenParents	bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenParents(...) abort$/;"	f
OpenWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenWindow(flags) abort$/;"	f
Opener.New	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
Opener._checkToCloseTree	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
Opener._gotoTargetWin	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
Opener._newSplit	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
Opener._newVSplit	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
Opener._openDirectory	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
Opener._openFile	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
Opener._previousWindow	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
Opener._restoreCursorPos	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
Opener._reuseWindow	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
Opener._saveCursorPos	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
Opener.open	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
OtherPluginDetect	bundle/ccvext.vim/plugin/ccvext.vim	/^function! OtherPluginDetect ()$/;"	f
PackagePath	templates/javaHeader.vim	/^let PackagePath = input("Please input Package Path : ")$/;"	v
ParentCls	templates/template_source.vim	/^let ParentCls = input("Please input parentCls : ")$/;"	v
ParseSegments	bundle/vim-powerline/autoload/Pl/Parser.vim	/^function! s:ParseSegments(mode, side, segments, ...) " {{{$/;"	f
ParseTagline	bundle/tagbar/autoload/tagbar.vim	/^function! s:ParseTagline(part1, part2, typeinfo, fileinfo) abort$/;"	f
Path.AbsolutePathFor	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(str)$/;"	f
Path.CopyingSupported	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(path)$/;"	f
Path.Resolve	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
Path.Slash	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Slash()$/;"	f
Path.WinToUnixPath	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._ignorePatternMatches	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
Path._str	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
Path.bookmarkNames	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString()$/;"	f
Path.changeToDir	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
Path.compareTo	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.compareTo(path)$/;"	f
Path.copy	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.delete	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
Path.edit	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
Path.equals	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortOrderIndex	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore()$/;"	f
Path.isUnder	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(path)$/;"	f
Path.isUnixHiddenFile	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
Path.isUnixHiddenPath	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
Path.readInfoFromDisk	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh()$/;"	f
Path.rename	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
Path.tabnr	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
PersistentVarName	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:PersistentVarName(pluginName, persistentVar)$/;"	f
Pl#ClearCache	bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#ClearCache() " {{{$/;"	f
Pl#Colorscheme#Apply	bundle/vim-powerline/autoload/Pl/Colorscheme.vim	/^function! Pl#Colorscheme#Apply(colorscheme, buffer_segments) " {{{$/;"	f
Pl#Colorscheme#Init	bundle/vim-powerline/autoload/Pl/Colorscheme.vim	/^function! Pl#Colorscheme#Init(hi) " {{{$/;"	f
Pl#Hi#Allocate	bundle/vim-powerline/autoload/Pl/Hi.vim	/^function! Pl#Hi#Allocate(colors) " {{{$/;"	f
Pl#Hi#Segments	bundle/vim-powerline/autoload/Pl/Hi.vim	/^function! Pl#Hi#Segments(segments, mode_colors) " {{{$/;"	f
Pl#Load	bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#Load() " {{{$/;"	f
Pl#LoadCache	bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#LoadCache() " {{{$/;"	f
Pl#Match#Add	bundle/vim-powerline/autoload/Pl/Match.vim	/^function! Pl#Match#Add(pat, expr) " {{{$/;"	f
Pl#Match#Any	bundle/vim-powerline/autoload/Pl/Match.vim	/^function! Pl#Match#Any(...) " {{{$/;"	f
Pl#Match#Validate	bundle/vim-powerline/autoload/Pl/Match.vim	/^function! Pl#Match#Validate(theme, window) " {{{$/;"	f
Pl#Mod#AddSegmentMod	bundle/vim-powerline/autoload/Pl/Mod.vim	/^function! Pl#Mod#AddSegmentMod(action, properties) " {{{$/;"	f
Pl#Mod#ApplySegmentMods	bundle/vim-powerline/autoload/Pl/Mod.vim	/^function! Pl#Mod#ApplySegmentMods(theme) " {{{$/;"	f
Pl#Parser#GetStatusline	bundle/vim-powerline/autoload/Pl/Parser.vim	/^function! Pl#Parser#GetStatusline(segments) " {{{$/;"	f
Pl#Parser#ParseChars	bundle/vim-powerline/autoload/Pl/Parser.vim	/^function! Pl#Parser#ParseChars(arg) " {{{$/;"	f
Pl#ReloadColorscheme	bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#ReloadColorscheme() " {{{$/;"	f
Pl#Segment#Create	bundle/vim-powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Create(name, ...) " {{{$/;"	f
Pl#Segment#Get	bundle/vim-powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Get(name) " {{{$/;"	f
Pl#Segment#Init	bundle/vim-powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Init(params) " {{{$/;"	f
Pl#Segment#Modes	bundle/vim-powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Modes(modes) " {{{$/;"	f
Pl#Segment#NoPadding	bundle/vim-powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#NoPadding() " {{{$/;"	f
Pl#Segment#Split	bundle/vim-powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Split(...) " {{{$/;"	f
Pl#Segment#Truncate	bundle/vim-powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Truncate() " {{{$/;"	f
Pl#Statusline	bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#Statusline(statusline, current) " {{{$/;"	f
Pl#StatuslineCallback	bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#StatuslineCallback(statusline, args) " {{{$/;"	f
Pl#Theme#Buffer	bundle/vim-powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#Buffer(ns, ...) " {{{$/;"	f
Pl#Theme#Callback	bundle/vim-powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#Callback(name, expr) " {{{$/;"	f
Pl#Theme#Create	bundle/vim-powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#Create(...) " {{{$/;"	f
Pl#Theme#InsertSegment	bundle/vim-powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#InsertSegment(new_segment, where, target_segment) " {{{$/;"	f
Pl#Theme#RemoveSegment	bundle/vim-powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#RemoveSegment(target_segment) " {{{$/;"	f
Pl#Theme#ReplaceSegment	bundle/vim-powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#ReplaceSegment(old_segment, new_segment) " {{{$/;"	f
Pl#UpdateStatusline	bundle/vim-powerline/autoload/Pl.vim	/^	function! Pl#UpdateStatusline(current, ...) " {{{$/;"	f
PlaceDelimitersAndInsBetween	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:PlaceDelimitersAndInsBetween()$/;"	f
Powerline#Functions#GetCharCode	bundle/vim-powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetCharCode() " {{{$/;"	f
Powerline#Functions#GetFilepath	bundle/vim-powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetFilepath() " {{{$/;"	f
Powerline#Functions#GetFilesize	bundle/vim-powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetFilesize() " {{{$/;"	f
Powerline#Functions#GetMode	bundle/vim-powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetMode() " {{{$/;"	f
Powerline#Functions#GetShortPath	bundle/vim-powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetShortPath(threshold) " {{{$/;"	f
Powerline#Functions#GetWSMarker	bundle/vim-powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetWSMarker() " {{{$/;"	f
Powerline#Functions#ft_man#GetName	bundle/vim-powerline/autoload/Powerline/Functions/ft_man.vim	/^function! Powerline#Functions#ft_man#GetName() " {{{$/;"	f
Powerline#Functions#fugitive#GetBranch	bundle/vim-powerline/autoload/Powerline/Functions/fugitive.vim	/^function! Powerline#Functions#fugitive#GetBranch(symbol) " {{{$/;"	f
Powerline#Functions#hgrev#Status	bundle/vim-powerline/autoload/Powerline/Functions/hgrev.vim	/^function! Powerline#Functions#hgrev#Status(symbol) " {{{$/;"	f
Powerline#Functions#syntastic#GetErrors	bundle/vim-powerline/autoload/Powerline/Functions/syntastic.vim	/^function! Powerline#Functions#syntastic#GetErrors(line_symbol) " {{{$/;"	f
PowerlineClearCache	bundle/vim-powerline/plugin/Powerline.vim	/^	command! PowerlineClearCache call Pl#ClearCache()$/;"	c
PowerlineReloadColorscheme	bundle/vim-powerline/plugin/Powerline.vim	/^	command! PowerlineReloadColorscheme call Pl#ReloadColorscheme()$/;"	c
PowerlineStartup	bundle/vim-powerline/plugin/Powerline.vim	/^	augroup PowerlineStartup$/;"	a
PrintHelp	bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintHelp() abort$/;"	f
PrintKinds	bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintKinds(typeinfo, fileinfo) abort$/;"	f
PrintMarkGroup	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:PrintMarkGroup( nextGroupIndex )$/;"	f
PrintTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintTag(tag, depth, is_first, fileinfo, typeinfo) abort$/;"	f
ProcessFile	bundle/snipmate.vim/plugin/snipMate.vim	/^fun s:ProcessFile(file, ft, ...)$/;"	f
ProcessFile	bundle/tagbar/autoload/tagbar.vim	/^function! s:ProcessFile(fname, ftype) abort$/;"	f
ProcessPseudoChildren	bundle/tagbar/autoload/tagbar.vim	/^function! s:ProcessPseudoChildren(tags, tag, depth, typeinfo, fileinfo) abort$/;"	f
ProcessPseudoTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:ProcessPseudoTag(curtags, tag, parent, typeinfo, fileinfo) abort$/;"	f
ProcessSnippet	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:ProcessSnippet(snip)$/;"	f
Project	bundle/project/plugin/project.vim	/^    command -nargs=? -complete=file Project call <SID>Project('<args>')$/;"	c
Project	bundle/project/plugin/project.vim	/^function! s:Project(filename) " <<<$/;"	f
ProjectName	templates/env.vim	/^let ProjectName='Test'$/;"	v
ProjectTagUpdateLookupFile	plugin/cao_yj4java.vim	/^function! ProjectTagUpdateLookupFile()$/;"	f
Project_ForEach	bundle/project/plugin/project.vim	/^    function! Project_ForEach(recurse, lineno, cmd, data, match)$/;"	f
Project_ForEachR	bundle/project/plugin/project.vim	/^    function! s:Project_ForEachR(recurse, lineno, info, cmd, data, match)$/;"	f
Project_GetAllFnames	bundle/project/plugin/project.vim	/^    function! Project_GetAllFnames(recurse, lineno, separator)$/;"	f
Project_GetFname	bundle/project/plugin/project.vim	/^    function! Project_GetFname(line)$/;"	f
PseudoTag.isPseudoTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:PseudoTag.isPseudoTag() abort dict$/;"	f
PseudoTag.strfmt	bundle/tagbar/autoload/tagbar.vim	/^function! s:PseudoTag.strfmt() abort dict$/;"	f
PylintNew	bundle/syntastic/syntax_checkers/python/pylint.vim	/^function! s:PylintNew(exe)$/;"	f
QArgSplitter	bundle/Align/autoload/Align.vim	/^fun! s:QArgSplitter(qarg)$/;"	f
QArgSplitter	bundle/Align/plugin/cecutil.vim	/^fun! QArgSplitter(qarg)$/;"	f
QSortR	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:QSortR(start, end, cmp, direction, accessor, swapper, context)$/;"	f
QuitIfOnlyWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:QuitIfOnlyWindow() abort$/;"	f
QuitPreHook	bundle/syntastic/plugin/syntastic.vim	/^function! s:QuitPreHook()$/;"	f
RM	bundle/Align/plugin/cecutil.vim	/^com! -bar -nargs=1 RM	call RestoreMark(<q-args>)$/;"	c
RWP	bundle/Align/plugin/cecutil.vim	/^com! -bar -nargs=? RWP	call RestoreWinPosn(<args>)$/;"	c
ReSortListing	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:ReSortListing()$/;"	f
RebuildBufferList	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:RebuildBufferList(...)$/;"	f
RecordPrevBuffer_au	bundle/project/plugin/project.vim	/^    function! s:RecordPrevBuffer_au()$/;"	f
RecursivelyConstructDirectives	bundle/project/plugin/project.vim	/^    function! s:RecursivelyConstructDirectives(lineno)$/;"	f
RefreshEntriesFromDir	bundle/project/plugin/project.vim	/^    function! s:RefreshEntriesFromDir(recursive)$/;"	f
RegHandler	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:RegHandler(regex, function, args)$/;"	f
RegexpQuote	bundle/auto-pairs/plugin/auto-pairs.vim	/^func! s:RegexpQuote(str)$/;"	f
RegexpQuoteInSquare	bundle/auto-pairs/plugin/auto-pairs.vim	/^func! s:RegexpQuoteInSquare(str)$/;"	f
ReloadAllSnippets	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ReloadAllSnippets()$/;"	f
ReloadSnippets	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ReloadSnippets(ft)$/;"	f
RemapLookupFile	bundle/lookupfile1_8/plugin/lookupfile.vim	/^function! s:RemapLookupFile(cmd)$/;"	f
RemoveBuffer	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:RemoveBuffer(mode)$/;"	f
RemoveCComments	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^function! s:RemoveCComments(szLine)$/;"	f
RemoveCarriageReturn	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:RemoveCarriageReturn(line)$/;"	f
RemoveDelimiters	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RemoveDelimiters(left, right, line)$/;"	f
RemoveDir	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:RemoveDir(dir)$/;"	f
RemoveSnippet	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:RemoveSnippet()$/;"	f
RenderContent	bundle/tagbar/autoload/tagbar.vim	/^function! s:RenderContent(...) abort$/;"	f
RenderKeepView	bundle/tagbar/autoload/tagbar.vim	/^function! s:RenderKeepView(...) abort$/;"	f
ReplaceDelims	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceDelims(toReplace1, toReplace2, replacor1, replacor2, str)$/;"	f
ReplaceLeftMostDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceLeftMostDelim(toReplace, replacor, str)$/;"	f
ReplaceRightMostDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceRightMostDelim(toReplace, replacor, str)$/;"	f
Reset	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:Reset()$/;"	f
ResetAllSnippets	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ResetAllSnippets()$/;"	f
ResetSnippets	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ResetSnippets(ft)$/;"	f
ResetWidth	bundle/indentLine/after/plugin/indentLine.vim	/^function! <SID>ResetWidth(...)$/;"	f
ResolveAliasInNamespaceList	bundle/OmniCppComplete/autoload/omni/cpp/namespaces.vim	/^function! s:ResolveAliasInNamespaceList(mapNamespaceAlias, listNamespaces)$/;"	f
ResolveAliasKey	bundle/OmniCppComplete/autoload/omni/cpp/namespaces.vim	/^function! s:ResolveAliasKey(mapNamespaceAlias, szAlias)$/;"	f
ResolveAliasKeys	bundle/OmniCppComplete/autoload/omni/cpp/namespaces.vim	/^function! s:ResolveAliasKeys(mapNamespaceAlias)$/;"	f
ResolveCCast	bundle/OmniCppComplete/autoload/omni/cpp/items.vim	/^function! s:ResolveCCast(tokens)$/;"	f
ResolveCast	bundle/OmniCppComplete/autoload/omni/cpp/items.vim	/^function! s:ResolveCast(tokens, startChar, endChar)$/;"	f
ResolveCppCast	bundle/OmniCppComplete/autoload/omni/cpp/items.vim	/^function! s:ResolveCppCast(tokens)$/;"	f
ResolveFiletypes	bundle/syntastic/plugin/syntastic.vim	/^function! s:ResolveFiletypes(...)$/;"	f
ResolveNamespace	bundle/OmniCppComplete/autoload/omni/cpp/namespaces.vim	/^function! s:ResolveNamespace(namespace, mapCurrentContexts)$/;"	f
ResolveSymbol	bundle/OmniCppComplete/autoload/omni/cpp/items.vim	/^function! s:ResolveSymbol(contextStack, szSymbol, szTagFilter)$/;"	f
RestoreMark	bundle/Align/plugin/cecutil.vim	/^fun! RestoreMark(markname)$/;"	f
RestoreOneWinSettings	bundle/ZoomWin/autoload/ZoomWin.vim	/^fun! s:RestoreOneWinSettings(wnum)$/;"	f
RestorePosn	bundle/ZoomWin/autoload/ZoomWin.vim	/^fun! s:RestorePosn(savedposn)$/;"	f
RestoreScreenState	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RestoreScreenState()$/;"	f
RestoreSession	bundle/tagbar/autoload/tagbar.vim	/^function! s:RestoreSession() abort$/;"	f
RestoreUserMaps	bundle/Align/plugin/cecutil.vim	/^fun! RestoreUserMaps(suffix)$/;"	f
RestoreUserOptions	bundle/Align/autoload/Align.vim	/^fun! s:RestoreUserOptions()$/;"	f
RestoreUserSettings	bundle/ZoomWin/autoload/ZoomWin.vim	/^fun! s:RestoreUserSettings()$/;"	f
RestoreWinPosn	bundle/Align/plugin/cecutil.vim	/^fun! RestoreWinPosn(...)$/;"	f
RestoreWinSettings	bundle/ZoomWin/autoload/ZoomWin.vim	/^fun! s:RestoreWinSettings()$/;"	f
RestoreWinVars	bundle/ZoomWin/autoload/ZoomWin.vim	/^fun! s:RestoreWinVars()$/;"	f
RestoreWindowSettings2	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:RestoreWindowSettings2(id)$/;"	f
ReverseSortSelect	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:ReverseSortSelect()$/;"	f
Right	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Right(...)$/;"	f
RightMostIndx	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RightMostIndx(countCommentedLines, countEmptyLines, topline, bottomline)$/;"	f
SET_COMMENT	plugin/cao_yj4java.vim	/^function! s:SET_COMMENT()$/;"	f
SET_COMMENTV	plugin/cao_yj4java.vim	/^function! s:SET_COMMENTV()$/;"	f
SET_COMMENTV_LINE	plugin/cao_yj4java.vim	/^function! s:SET_COMMENTV_LINE( index,pos, comment_flag  )$/;"	f
SID	bundle/nerdtree/autoload/nerdtree.vim	/^function s:SID()$/;"	f
SM	bundle/Align/plugin/cecutil.vim	/^com! -bar -nargs=1 SM	call SaveMark(<q-args>)$/;"	c
SNR	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:SNR()$/;"	f
SNR	bundle/lookupfile1_8/plugin/lookupfile.vim	/^function! s:SNR()$/;"	f
SWP	bundle/Align/plugin/cecutil.vim	/^com! -bar -nargs=0 SWP	call SaveWinPosn()$/;"	c
SYM_ATTR	bundle/vim-powerline/fontpatcher/fontpatcher	/^SYM_ATTR = {$/;"	v
SaveClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:SaveClasspath()$/;"	f
SaveConfig	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:SaveConfig()$/;"	f
SaveMark	bundle/Align/plugin/cecutil.vim	/^fun! SaveMark(markname)$/;"	f
SavePattern	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:SavePattern( ... )$/;"	f
SavePosn	bundle/ZoomWin/autoload/ZoomWin.vim	/^fun! s:SavePosn(savewinhoriz)$/;"	f
SaveScreenState	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SaveScreenState()$/;"	f
SaveSett	bundle/lookupfile1_8/plugin/lookupfile.vim	/^function! s:SaveSett(sett)$/;"	f
SaveUserMaps	bundle/Align/plugin/cecutil.vim	/^fun! SaveUserMaps(mapmode,maplead,mapchx,suffix)$/;"	f
SaveUserOptions	bundle/Align/autoload/Align.vim	/^fun! s:SaveUserOptions()$/;"	f
SaveUserSettings	bundle/ZoomWin/autoload/ZoomWin.vim	/^fun! s:SaveUserSettings()$/;"	f
SaveWinPosn	bundle/Align/plugin/cecutil.vim	/^fun! SaveWinPosn(...)$/;"	f
SaveWinSettings	bundle/ZoomWin/autoload/ZoomWin.vim	/^fun! s:SaveWinSettings()$/;"	f
SaveWinVars	bundle/ZoomWin/autoload/ZoomWin.vim	/^fun! s:SaveWinVars()$/;"	f
Search	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:Search( pattern, count, isBackward, currentMarkPosition, searchType )$/;"	f
SearchDecl	bundle/OmniCppComplete/autoload/omni/cpp/items.vim	/^function! s:SearchDecl(szVariable)$/;"	f
SearchGlobalMembers	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^function! s:SearchGlobalMembers(szBase)$/;"	f
SearchHeaders	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:SearchHeaders()$/;"	f
SearchMembers	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^function! s:SearchMembers(resolvedTagItem, szBase)$/;"	f
SearchTypeInfoOfDecl	bundle/OmniCppComplete/autoload/omni/cpp/items.vim	/^function! s:SearchTypeInfoOfDecl(szVariable)$/;"	f
SelectBuffer	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:SelectBuffer(...)$/;"	f
SelectWord	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:SelectWord()$/;"	f
Set	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:Set(var, default)$/;"	f
SetFoldLevel	bundle/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevel(level, force) abort$/;"	f
SetFoldLevelRecursive	bundle/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevelRecursive(fileinfo, tags, level) abort$/;"	f
SetIndentLine	bundle/indentLine/after/plugin/indentLine.vim	/^function! <SID>SetIndentLine()$/;"	f
SetMark	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:SetMark( index, regexp, ... )$/;"	f
SetPalette	bundle/Mark--Karkat/plugin/mark.vim	/^function! s:SetPalette( paletteName )$/;"	f
SetPattern	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:SetPattern( index, pattern )$/;"	f
SetSnippetWndMap	bundle/ccvext.vim/plugin/ccvext.vim	/^function! SetSnippetWndMap ()$/;"	f
SetStatusLine	bundle/tagbar/autoload/tagbar.vim	/^function! s:SetStatusLine(current)$/;"	f
SetUpForNewFiletype	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SetUpForNewFiletype(filetype, forceReset)$/;"	f
SetV	plugin/cao_yj4java.vim	/^command! -nargs=0 SetV call s:SET_COMMENT()$/;"	c
SetV	plugin/cao_yj4java.vim	/^command! -nargs=0 SetV call s:SET_COMMENTV()$/;"	c
Setup	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:Setup()$/;"	f
Setup	bundle/indentLine/after/plugin/indentLine.vim	/^function! <SID>Setup()$/;"	f
SetupAutoCommand	bundle/project/plugin/project.vim	/^    function! s:SetupAutoCommand(cwd)$/;"	f
SetupBuf	bundle/lookupfile1_8/autoload/lookupfile.vim	/^function! s:SetupBuf()$/;"	f
SetupScriptAutoCommand	bundle/project/plugin/project.vim	/^    function! s:SetupScriptAutoCommand(bufcmd, script)$/;"	f
SetupSyntax	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:SetupSyntax()$/;"	f
ShouldIgnore	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:ShouldIgnore(buf)$/;"	f
ShowAvailableSnips	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ShowAvailableSnips()$/;"	f
ShowFiller	bundle/lookupfile1_8/autoload/lookupfile.vim	/^function! s:ShowFiller()$/;"	f
ShowInPreviewWin	bundle/tagbar/autoload/tagbar.vim	/^function! s:ShowInPreviewWin() abort$/;"	f
ShowLocList	bundle/syntastic/plugin/syntastic.vim	/^function! s:ShowLocList()$/;"	f
ShowPrototype	bundle/tagbar/autoload/tagbar.vim	/^function! s:ShowPrototype(short) abort$/;"	f
ShrinkIfExpanded	bundle/tagbar/autoload/tagbar.vim	/^function! s:ShrinkIfExpanded() abort$/;"	f
SkipFile	bundle/syntastic/plugin/syntastic.vim	/^function! s:SkipFile()$/;"	f
SlimrbVersion	bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^function! s:SlimrbVersion()$/;"	f
SortListing	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:SortListing()$/;"	f
SortR	bundle/project/plugin/project.vim	/^    function! s:SortR(start, end)$/;"	f
SortReverse	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:SortReverse()$/;"	f
SortSelect	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:SortSelect()$/;"	f
SortTags	bundle/tagbar/autoload/tagbar.vim	/^function! s:SortTags(tags, comparemethod) abort$/;"	f
SourceSnippet	bundle/ccvext.vim/plugin/ccvext.vim	/^function! SourceSnippet()$/;"	f
Spawn	bundle/project/plugin/project.vim	/^    function! s:Spawn(number)$/;"	f
SpawnAll	bundle/project/plugin/project.vim	/^    function! s:SpawnAll(recurse, number)$/;"	f
SplitClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:SplitClasspath(classpath)$/;"	f
SplitIntoAlternatives	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:SplitIntoAlternatives( pattern )$/;"	f
SrcExpl	bundle/SrcExpl/plugin/srcexpl.vim	/^command! -nargs=0 -bar SrcExpl$/;"	c
SrcExpl	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl()$/;"	f
SrcExplClose	bundle/SrcExpl/plugin/srcexpl.vim	/^command! -nargs=0 -bar SrcExplClose$/;"	c
SrcExplToggle	bundle/SrcExpl/plugin/srcexpl.vim	/^command! -nargs=0 -bar SrcExplToggle$/;"	c
SrcExpl_AdaptPlugins	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_AdaptPlugins()$/;"	f
SrcExpl_CleanUp	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_CleanUp()$/;"	f
SrcExpl_Close	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_Close()$/;"	f
SrcExpl_ColorExpr	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_ColorExpr()$/;"	f
SrcExpl_ColorLine	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_ColorLine()$/;"	f
SrcExpl_Debug	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_Debug(log)$/;"	f
SrcExpl_GetEditWin	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_GetEditWin()$/;"	f
SrcExpl_GetInput	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_GetInput(note)$/;"	f
SrcExpl_GetMarkList	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_GetMarkList()$/;"	f
SrcExpl_GetSymbol	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_GetSymbol()$/;"	f
SrcExpl_GetVer	bundle/SrcExpl/plugin/srcexpl.vim	/^function! g:SrcExpl_GetVer()$/;"	f
SrcExpl_GetWin	bundle/SrcExpl/plugin/srcexpl.vim	/^function! g:SrcExpl_GetWin()$/;"	f
SrcExpl_GoBack	bundle/SrcExpl/plugin/srcexpl.vim	/^function! g:SrcExpl_GoBack()$/;"	f
SrcExpl_GoDecl	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_GoDecl(expr)$/;"	f
SrcExpl_Init	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_Init()$/;"	f
SrcExpl_Jump	bundle/SrcExpl/plugin/srcexpl.vim	/^function! g:SrcExpl_Jump()$/;"	f
SrcExpl_JumpDef	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_JumpDef(dir)$/;"	f
SrcExpl_ListMultiDefs	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_ListMultiDefs(list, len)$/;"	f
SrcExpl_MatchExpr	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_MatchExpr()$/;"	f
SrcExpl_NextDef	bundle/SrcExpl/plugin/srcexpl.vim	/^function! g:SrcExpl_NextDef()$/;"	f
SrcExpl_PrevDef	bundle/SrcExpl/plugin/srcexpl.vim	/^function! g:SrcExpl_PrevDef()$/;"	f
SrcExpl_Refresh	bundle/SrcExpl/plugin/srcexpl.vim	/^function! g:SrcExpl_Refresh()$/;"	f
SrcExpl_ReportErr	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_ReportErr(err)$/;"	f
SrcExpl_SelToJump	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_SelToJump(dir)$/;"	f
SrcExpl_SetCurrMark	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_SetCurrMark()$/;"	f
SrcExpl_SetMarkList	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_SetMarkList()$/;"	f
SrcExpl_TagSth	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_TagSth(expr)$/;"	f
SrcExpl_Toggle	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_Toggle()$/;"	f
SrcExpl_UpdateTags	bundle/SrcExpl/plugin/srcexpl.vim	/^function! g:SrcExpl_UpdateTags()$/;"	f
SrcExpl_ViewOneDef	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_ViewOneDef(fpath, excmd)$/;"	f
SrcExpl_WinActive	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinActive()$/;"	f
SrcExpl_WinClose	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinClose()$/;"	f
SrcExpl_WinDelete	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinDelete()$/;"	f
SrcExpl_WinEdit	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinEdit(wincmd)$/;"	f
SrcExpl_WinEnter	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinEnter()$/;"	f
SrcExpl_WinGo	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinGo()$/;"	f
SrcExpl_WinNew	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinNew(wincmd)$/;"	f
SrcExpl_WinOpen	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinOpen()$/;"	f
SrcExpl_WinPrompt	bundle/SrcExpl/plugin/srcexpl.vim	/^function! <SID>SrcExpl_WinPrompt(prompt)$/;"	f
StartDebug	bundle/tagbar/autoload/tagbar.vim	/^function! s:StartDebug(filename) abort$/;"	f
StartFepService	plugin/cao_yj4java.vim	/^function! StartFepService()$/;"	f
StartTomcat	plugin/cao_yj4java.vim	/^function! StartTomcat()$/;"	f
Startup	bundle/vim-powerline/plugin/Powerline.vim	/^	function! s:Startup()$/;"	f
StopDebug	bundle/tagbar/autoload/tagbar.vim	/^function! s:StopDebug() abort$/;"	f
StringWidth	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^    function s:StringWidth(s)$/;"	f
Strlen	bundle/Align/autoload/Align.vim	/^fun! s:Strlen(x)$/;"	f
SwapOutterMultiPartDelimsForPlaceHolders	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwapOutterMultiPartDelimsForPlaceHolders(line)$/;"	f
SwapOutterPlaceHoldersForMultiPartDelims	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwapOutterPlaceHoldersForMultiPartDelims(line)$/;"	f
SwitchToAlternativeDelimiters	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwitchToAlternativeDelimiters(printMsgs)$/;"	f
SymbsConfig	bundle/ccvext.vim/plugin/ccvext.vim	/^	command! -nargs=0 SymbsConfig :call ConfigSymbs()$/;"	c
SyncSource	bundle/ccvext.vim/plugin/ccvext.vim	/^	command! -nargs=0 SyncSource :call SyncSource()$/;"	c
SyncSource	bundle/ccvext.vim/plugin/ccvext.vim	/^function! SyncSource ()$/;"	f
SynchronizeSource	bundle/ccvext.vim/plugin/ccvext.vim	/^function! SynchronizeSource (cur_dir)$/;"	f
SyntasticAddToErrors	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticAddToErrors(errors, options)$/;"	f
SyntasticAutoloclistNotifier.AutoToggle	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.AutoToggle(loclist)$/;"	f
SyntasticAutoloclistNotifier.New	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.New()$/;"	f
SyntasticAutoloclistNotifier.refresh	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.refresh(loclist)$/;"	f
SyntasticBalloonsExprNotifier	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! SyntasticBalloonsExprNotifier()$/;"	f
SyntasticBalloonsNotifier.New	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.New()$/;"	f
SyntasticBalloonsNotifier.enabled	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.enabled()$/;"	f
SyntasticBalloonsNotifier.refresh	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.refresh(loclist)$/;"	f
SyntasticBalloonsNotifier.reset	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.reset(loclist)$/;"	f
SyntasticCheck	bundle/syntastic/plugin/syntastic.vim	/^command! -nargs=* -complete=custom,s:CompleteCheckerName SyntasticCheck$/;"	c
SyntasticChecker.New	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.New(args)$/;"	f
SyntasticChecker._getOpt	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._getOpt(opts, setting, name, default)$/;"	f
SyntasticChecker._populateHighlightRegexes	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._populateHighlightRegexes(errors)$/;"	f
SyntasticChecker._quietMessages	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._quietMessages(errors)$/;"	f
SyntasticChecker._shescape	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._shescape(opt)$/;"	f
SyntasticChecker.getExec	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getExec()$/;"	f
SyntasticChecker.getFiletype	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getFiletype()$/;"	f
SyntasticChecker.getLocList	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getLocList()$/;"	f
SyntasticChecker.getLocListRaw	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getLocListRaw()$/;"	f
SyntasticChecker.getName	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getName()$/;"	f
SyntasticChecker.isAvailable	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.isAvailable()$/;"	f
SyntasticChecker.makeprgBuild	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.makeprgBuild(opts)$/;"	f
SyntasticCheckerIsAvailableDefault	bundle/syntastic/plugin/syntastic/checker.vim	/^function! SyntasticCheckerIsAvailableDefault() dict$/;"	f
SyntasticCursorNotifier.New	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.New()$/;"	f
SyntasticCursorNotifier.enabled	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.enabled()$/;"	f
SyntasticCursorNotifier.refresh	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.refresh(loclist)$/;"	f
SyntasticCursorNotifier.reset	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.reset(loclist)$/;"	f
SyntasticHighlightingNotifier.New	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.New()$/;"	f
SyntasticHighlightingNotifier._setup	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier._setup()$/;"	f
SyntasticHighlightingNotifier.enabled	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.enabled()$/;"	f
SyntasticHighlightingNotifier.refresh	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.refresh(loclist)$/;"	f
SyntasticHighlightingNotifier.reset	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.reset(loclist)$/;"	f
SyntasticInfo	bundle/syntastic/plugin/syntastic.vim	/^command! -nargs=? -complete=custom,s:CompleteFiletypes SyntasticInfo$/;"	c
SyntasticJavacEditClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^command! SyntasticJavacEditClasspath call s:EditClasspath()$/;"	c
SyntasticJavacEditConfig	bundle/syntastic/syntax_checkers/java/javac.vim	/^    command! SyntasticJavacEditConfig call s:EditConfig()$/;"	c
SyntasticLoclist.New	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.New(rawLoclist)$/;"	f
SyntasticLoclist.copyRaw	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.copyRaw()$/;"	f
SyntasticLoclist.current	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.current()$/;"	f
SyntasticLoclist.decorate	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.decorate(name, filetype)$/;"	f
SyntasticLoclist.errors	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.errors()$/;"	f
SyntasticLoclist.extend	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.extend(other)$/;"	f
SyntasticLoclist.filter	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.filter(filters)$/;"	f
SyntasticLoclist.getFirstIssue	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getFirstIssue()$/;"	f
SyntasticLoclist.getName	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getName()$/;"	f
SyntasticLoclist.getRaw	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getRaw()$/;"	f
SyntasticLoclist.getStatuslineFlag	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getStatuslineFlag()$/;"	f
SyntasticLoclist.hasErrorsOrWarningsToDisplay	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.hasErrorsOrWarningsToDisplay()$/;"	f
SyntasticLoclist.isEmpty	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.isEmpty()$/;"	f
SyntasticLoclist.messages	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.messages(buf)$/;"	f
SyntasticLoclist.quietMessages	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.quietMessages(filters)$/;"	f
SyntasticLoclist.setName	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setName(name)$/;"	f
SyntasticLoclist.setloclist	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setloclist()$/;"	f
SyntasticLoclist.show	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.show()$/;"	f
SyntasticLoclist.warnings	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.warnings()$/;"	f
SyntasticLoclistHide	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclistHide()$/;"	f
SyntasticMake	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticMake(options)$/;"	f
SyntasticModeMap.Instance	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.Instance()$/;"	f
SyntasticModeMap._isOneFiletypeActive	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._isOneFiletypeActive(filetypes)$/;"	f
SyntasticModeMap._noFiletypesArePassive	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._noFiletypesArePassive(filetypes)$/;"	f
SyntasticModeMap.allowsAutoChecking	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.allowsAutoChecking(filetype)$/;"	f
SyntasticModeMap.echoMode	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.echoMode()$/;"	f
SyntasticModeMap.isPassive	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.isPassive()$/;"	f
SyntasticModeMap.synch	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.synch()$/;"	f
SyntasticModeMap.toggleMode	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.toggleMode()$/;"	f
SyntasticNotifiers.Instance	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.Instance()$/;"	f
SyntasticNotifiers._initNotifiers	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers._initNotifiers()$/;"	f
SyntasticNotifiers.refresh	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.refresh(loclist)$/;"	f
SyntasticNotifiers.reset	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.reset(loclist)$/;"	f
SyntasticRefreshCursor	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticRefreshCursor()$/;"	f
SyntasticRegistry.CreateAndRegisterChecker	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.CreateAndRegisterChecker(args)$/;"	f
SyntasticRegistry.Instance	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.Instance()$/;"	f
SyntasticRegistry._allCheckersFor	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._allCheckersFor(filetype)$/;"	f
SyntasticRegistry._filterCheckersByAvailability	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._filterCheckersByAvailability(checkers)$/;"	f
SyntasticRegistry._filterCheckersByDefaultSettings	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._filterCheckersByDefaultSettings(checkers, filetype)$/;"	f
SyntasticRegistry._filterCheckersByName	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._filterCheckersByName(checkers, list)$/;"	f
SyntasticRegistry._filterCheckersByUserSettings	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._filterCheckersByUserSettings(checkers, filetype)$/;"	f
SyntasticRegistry._haveLoadedCheckers	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._haveLoadedCheckers(filetype)$/;"	f
SyntasticRegistry._loadCheckers	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._loadCheckers(filetype)$/;"	f
SyntasticRegistry._registerChecker	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._registerChecker(checker) abort$/;"	f
SyntasticRegistry._userHasFiletypeSettings	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._userHasFiletypeSettings(filetype)$/;"	f
SyntasticRegistry._validateUniqueName	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._validateUniqueName(checker) abort$/;"	f
SyntasticRegistry.availableCheckersFor	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.availableCheckersFor(ftalias)$/;"	f
SyntasticRegistry.checkable	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.checkable(ftalias)$/;"	f
SyntasticRegistry.echoInfoFor	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.echoInfoFor(ftalias_list)$/;"	f
SyntasticRegistry.getActiveCheckers	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getActiveCheckers(ftalias)$/;"	f
SyntasticRegistry.getCheckers	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getCheckers(ftalias, list)$/;"	f
SyntasticRegistry.knownFiletypes	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.knownFiletypes()$/;"	f
SyntasticRegistryNormaliseFiletype	bundle/syntastic/plugin/syntastic/registry.vim	/^function! s:SyntasticRegistryNormaliseFiletype(ftalias)$/;"	f
SyntasticReset	bundle/syntastic/plugin/syntastic.vim	/^command! SyntasticReset$/;"	c
SyntasticSetLoclist	bundle/syntastic/plugin/syntastic.vim	/^command! SyntasticSetLoclist call g:SyntasticLoclist.current().setloclist()$/;"	c
SyntasticSignsNotifier.New	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.New()$/;"	f
SyntasticSignsNotifier._bufSignIds	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._bufSignIds()$/;"	f
SyntasticSignsNotifier._removeSigns	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._removeSigns(ids)$/;"	f
SyntasticSignsNotifier._setup	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._setup()$/;"	f
SyntasticSignsNotifier._signErrors	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._signErrors(loclist)$/;"	f
SyntasticSignsNotifier.enabled	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.enabled()$/;"	f
SyntasticSignsNotifier.refresh	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.refresh(loclist)$/;"	f
SyntasticStatuslineFlag	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticStatuslineFlag()$/;"	f
SyntasticToggleMode	bundle/syntastic/plugin/syntastic.vim	/^command! SyntasticToggleMode call s:ToggleMode()$/;"	c
SyntaxCheckers_actionscript_mxmlc_GetHighlightRegex	bundle/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^function! SyntaxCheckers_actionscript_mxmlc_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_actionscript_mxmlc_GetLocList	bundle/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^function! SyntaxCheckers_actionscript_mxmlc_GetLocList() dict$/;"	f
SyntaxCheckers_ada_gcc_GetLocList	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_ada_gcc_IsAvailable	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_applescript_osacompile_GetLocList	bundle/syntastic/syntax_checkers/applescript/osacompile.vim	/^function! SyntaxCheckers_applescript_osacompile_GetLocList() dict$/;"	f
SyntaxCheckers_asciidoc_asciidoc_GetLocList	bundle/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^function! SyntaxCheckers_asciidoc_asciidoc_GetLocList() dict$/;"	f
SyntaxCheckers_bemhtml_bemhtmllint_GetLocList	bundle/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^function SyntaxCheckers_bemhtml_bemhtmllint_GetLocList() dict$/;"	f
SyntaxCheckers_c_checkpatch_GetLocList	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^function! SyntaxCheckers_c_checkpatch_GetLocList() dict$/;"	f
SyntaxCheckers_c_checkpatch_IsAvailable	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^function! SyntaxCheckers_c_checkpatch_IsAvailable() dict$/;"	f
SyntaxCheckers_c_cppcheck_GetLocList	bundle/syntastic/syntax_checkers/c/cppcheck.vim	/^function! SyntaxCheckers_c_cppcheck_GetLocList() dict$/;"	f
SyntaxCheckers_c_gcc_GetLocList	bundle/syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_c_gcc_IsAvailable	bundle/syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_c_make_GetLocList	bundle/syntastic/syntax_checkers/c/make.vim	/^function! SyntaxCheckers_c_make_GetLocList() dict$/;"	f
SyntaxCheckers_c_oclint_GetLocList	bundle/syntastic/syntax_checkers/c/oclint.vim	/^function! SyntaxCheckers_c_oclint_GetLocList() dict$/;"	f
SyntaxCheckers_c_sparse_GetLocList	bundle/syntastic/syntax_checkers/c/sparse.vim	/^function! SyntaxCheckers_c_sparse_GetLocList() dict$/;"	f
SyntaxCheckers_c_splint_GetLocList	bundle/syntastic/syntax_checkers/c/splint.vim	/^function! SyntaxCheckers_c_splint_GetLocList() dict$/;"	f
SyntaxCheckers_chef_foodcritic_GetLocList	bundle/syntastic/syntax_checkers/chef/foodcritic.vim	/^function! SyntaxCheckers_chef_foodcritic_GetLocList() dict$/;"	f
SyntaxCheckers_co_coco_GetLocList	bundle/syntastic/syntax_checkers/co/coco.vim	/^function! SyntaxCheckers_co_coco_GetLocList() dict$/;"	f
SyntaxCheckers_cobol_cobc_GetLocList	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^function! SyntaxCheckers_cobol_cobc_GetLocList() dict$/;"	f
SyntaxCheckers_cobol_cobc_IsAvailable	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^function! SyntaxCheckers_cobol_cobc_IsAvailable() dict$/;"	f
SyntaxCheckers_coffee_coffee_GetLocList	bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_GetLocList() dict$/;"	f
SyntaxCheckers_coffee_coffee_IsAvailable	bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_IsAvailable() dict$/;"	f
SyntaxCheckers_coffee_coffeelint_GetLocList	bundle/syntastic/syntax_checkers/coffee/coffeelint.vim	/^function! SyntaxCheckers_coffee_coffeelint_GetLocList() dict$/;"	f
SyntaxCheckers_coq_coqtop_GetLocList	bundle/syntastic/syntax_checkers/coq/coqtop.vim	/^function! SyntaxCheckers_coq_coqtop_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_cppcheck_GetLocList	bundle/syntastic/syntax_checkers/cpp/cppcheck.vim	/^function! SyntaxCheckers_cpp_cppcheck_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_cpplint_GetLocList	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^function! SyntaxCheckers_cpp_cpplint_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_gcc_GetLocList	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_gcc_IsAvailable	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_cs_mcs_GetLocList	bundle/syntastic/syntax_checkers/cs/mcs.vim	/^function! SyntaxCheckers_cs_mcs_GetLocList() dict$/;"	f
SyntaxCheckers_css_csslint_GetLocList	bundle/syntastic/syntax_checkers/css/csslint.vim	/^function! SyntaxCheckers_css_csslint_GetLocList() dict$/;"	f
SyntaxCheckers_css_prettycss_GetHighlightRegex	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_css_prettycss_GetLocList	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetLocList() dict$/;"	f
SyntaxCheckers_cucumber_cucumber_GetLocList	bundle/syntastic/syntax_checkers/cucumber/cucumber.vim	/^function! SyntaxCheckers_cucumber_cucumber_GetLocList() dict$/;"	f
SyntaxCheckers_cuda_nvcc_GetLocList	bundle/syntastic/syntax_checkers/cuda/nvcc.vim	/^function! SyntaxCheckers_cuda_nvcc_GetLocList() dict$/;"	f
SyntaxCheckers_d_dmd_GetLocList	bundle/syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_GetLocList() dict$/;"	f
SyntaxCheckers_d_dmd_IsAvailable	bundle/syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_IsAvailable() dict$/;"	f
SyntaxCheckers_dart_dartanalyzer_GetHighlightRegex	bundle/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^function! SyntaxCheckers_dart_dartanalyzer_GetHighlightRegex(error)$/;"	f
SyntaxCheckers_dart_dartanalyzer_GetLocList	bundle/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^function! SyntaxCheckers_dart_dartanalyzer_GetLocList() dict$/;"	f
SyntaxCheckers_dustjs_swiffer_GetLocList	bundle/syntastic/syntax_checkers/dustjs/swiffer.vim	/^function! SyntaxCheckers_dustjs_swiffer_GetLocList() dict$/;"	f
SyntaxCheckers_elixir_elixir_GetLocList	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_GetLocList() dict$/;"	f
SyntaxCheckers_elixir_elixir_IsAvailable	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_IsAvailable() dict$/;"	f
SyntaxCheckers_erlang_escript_GetLocList	bundle/syntastic/syntax_checkers/erlang/escript.vim	/^function! SyntaxCheckers_erlang_escript_GetLocList() dict$/;"	f
SyntaxCheckers_eruby_ruby_GetLocList	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_GetLocList() dict$/;"	f
SyntaxCheckers_eruby_ruby_IsAvailable	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_IsAvailable() dict$/;"	f
SyntaxCheckers_fortran_gfortran_GetLocList	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_GetLocList() dict$/;"	f
SyntaxCheckers_fortran_gfortran_IsAvailable	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_IsAvailable() dict$/;"	f
SyntaxCheckers_glsl_cgc_GetLocList	bundle/syntastic/syntax_checkers/glsl/cgc.vim	/^function! SyntaxCheckers_glsl_cgc_GetLocList() dict$/;"	f
SyntaxCheckers_go_go_GetLocList	bundle/syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_GetLocList() dict$/;"	f
SyntaxCheckers_go_go_IsAvailable	bundle/syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_IsAvailable() dict$/;"	f
SyntaxCheckers_go_gofmt_GetLocList	bundle/syntastic/syntax_checkers/go/gofmt.vim	/^function! SyntaxCheckers_go_gofmt_GetLocList() dict$/;"	f
SyntaxCheckers_go_golint_GetLocList	bundle/syntastic/syntax_checkers/go/golint.vim	/^function! SyntaxCheckers_go_golint_GetLocList() dict$/;"	f
SyntaxCheckers_go_gotype_GetLocList	bundle/syntastic/syntax_checkers/go/gotype.vim	/^function! SyntaxCheckers_go_gotype_GetLocList() dict$/;"	f
SyntaxCheckers_go_govet_GetLocList	bundle/syntastic/syntax_checkers/go/govet.vim	/^function! SyntaxCheckers_go_govet_GetLocList() dict$/;"	f
SyntaxCheckers_go_govet_IsAvailable	bundle/syntastic/syntax_checkers/go/govet.vim	/^function! SyntaxCheckers_go_govet_IsAvailable() dict$/;"	f
SyntaxCheckers_haml_haml_GetLocList	bundle/syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_GetLocList() dict$/;"	f
SyntaxCheckers_haml_haml_IsAvailable	bundle/syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_IsAvailable() dict$/;"	f
SyntaxCheckers_haml_haml_lint_GetLocList	bundle/syntastic/syntax_checkers/haml/haml_lint.vim	/^function! SyntaxCheckers_haml_haml_lint_GetLocList() dict$/;"	f
SyntaxCheckers_handlebars_handlebars_GetLocList	bundle/syntastic/syntax_checkers/handlebars/handlebars.vim	/^function! SyntaxCheckers_handlebars_handlebars_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_ghc_mod_GetLocList	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^function! SyntaxCheckers_haskell_ghc_mod_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_ghc_mod_IsAvailable	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^function! SyntaxCheckers_haskell_ghc_mod_IsAvailable() dict$/;"	f
SyntaxCheckers_haskell_hdevtools_GetLocList	bundle/syntastic/syntax_checkers/haskell/hdevtools.vim	/^function! SyntaxCheckers_haskell_hdevtools_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_hlint_GetLocList	bundle/syntastic/syntax_checkers/haskell/hlint.vim	/^function! SyntaxCheckers_haskell_hlint_GetLocList() dict$/;"	f
SyntaxCheckers_haxe_haxe_GetLocList	bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^function! SyntaxCheckers_haxe_haxe_GetLocList() dict$/;"	f
SyntaxCheckers_hss_hss_GetLocList	bundle/syntastic/syntax_checkers/hss/hss.vim	/^function! SyntaxCheckers_hss_hss_GetLocList() dict$/;"	f
SyntaxCheckers_html_jshint_GetLocList	bundle/syntastic/syntax_checkers/html/jshint.vim	/^function! SyntaxCheckers_html_jshint_GetLocList() dict$/;"	f
SyntaxCheckers_html_jshint_IsAvailable	bundle/syntastic/syntax_checkers/html/jshint.vim	/^function! SyntaxCheckers_html_jshint_IsAvailable() dict$/;"	f
SyntaxCheckers_html_tidy_GetLocList	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! SyntaxCheckers_html_tidy_GetLocList() dict$/;"	f
SyntaxCheckers_html_validator_GetLocList	bundle/syntastic/syntax_checkers/html/validator.vim	/^function! SyntaxCheckers_html_validator_GetLocList() dict$/;"	f
SyntaxCheckers_html_validator_Preprocess	bundle/syntastic/syntax_checkers/html/validator.vim	/^function! SyntaxCheckers_html_validator_Preprocess(errors)$/;"	f
SyntaxCheckers_html_w3_GetLocList	bundle/syntastic/syntax_checkers/html/w3.vim	/^function! SyntaxCheckers_html_w3_GetLocList() dict$/;"	f
SyntaxCheckers_java_checkstyle_GetLocList	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_GetLocList() dict$/;"	f
SyntaxCheckers_java_checkstyle_Preprocess	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_Preprocess(errors)$/;"	f
SyntaxCheckers_java_javac_GetLocList	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_GetLocList() dict$/;"	f
SyntaxCheckers_java_javac_IsAvailable	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_closurecompiler_GetLocList	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_closurecompiler_IsAvailable	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_eslint_GetLocList	bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^function! SyntaxCheckers_javascript_eslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_gjslint_GetLocList	bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^function! SyntaxCheckers_javascript_gjslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jscs_GetLocList	bundle/syntastic/syntax_checkers/javascript/jscs.vim	/^function! SyntaxCheckers_javascript_jscs_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jshint_GetLocList	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jshint_IsAvailable	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_jsl_GetLocList	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^function! SyntaxCheckers_javascript_jsl_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jslint_GetHighlightRegex	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_javascript_jslint_GetLocList	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_GetLocList() dict$/;"	f
SyntaxCheckers_json_jsonlint_GetLocList	bundle/syntastic/syntax_checkers/json/jsonlint.vim	/^function! SyntaxCheckers_json_jsonlint_GetLocList() dict$/;"	f
SyntaxCheckers_json_jsonval_GetLocList	bundle/syntastic/syntax_checkers/json/jsonval.vim	/^function! SyntaxCheckers_json_jsonval_GetLocList() dict$/;"	f
SyntaxCheckers_less_lessc_GetLocList	bundle/syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_GetLocList() dict$/;"	f
SyntaxCheckers_less_lessc_IsAvailable	bundle/syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_IsAvailable() dict$/;"	f
SyntaxCheckers_lex_flex_GetHighlightRegex	bundle/syntastic/syntax_checkers/lex/flex.vim	/^function! SyntaxCheckers_lex_flex_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_lex_flex_GetLocList	bundle/syntastic/syntax_checkers/lex/flex.vim	/^function! SyntaxCheckers_lex_flex_GetLocList() dict$/;"	f
SyntaxCheckers_limbo_limbo_GetLocList	bundle/syntastic/syntax_checkers/limbo/limbo.vim	/^function! SyntaxCheckers_limbo_limbo_GetLocList() dict$/;"	f
SyntaxCheckers_lisp_clisp_GetLocList	bundle/syntastic/syntax_checkers/lisp/clisp.vim	/^function! SyntaxCheckers_lisp_clisp_GetLocList() dict$/;"	f
SyntaxCheckers_llvm_llvm_GetLocList	bundle/syntastic/syntax_checkers/llvm/llvm.vim	/^function! SyntaxCheckers_llvm_llvm_GetLocList() dict$/;"	f
SyntaxCheckers_lua_luac_GetHighlightRegex	bundle/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetHighlightRegex(pos)$/;"	f
SyntaxCheckers_lua_luac_GetLocList	bundle/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetLocList() dict$/;"	f
SyntaxCheckers_matlab_mlint_GetLocList	bundle/syntastic/syntax_checkers/matlab/mlint.vim	/^function! SyntaxCheckers_matlab_mlint_GetLocList() dict$/;"	f
SyntaxCheckers_nasm_nasm_GetLocList	bundle/syntastic/syntax_checkers/nasm/nasm.vim	/^function! SyntaxCheckers_nasm_nasm_GetLocList() dict$/;"	f
SyntaxCheckers_nroff_mandoc_GetLocList	bundle/syntastic/syntax_checkers/nroff/mandoc.vim	/^function! SyntaxCheckers_nroff_mandoc_GetLocList() dict$/;"	f
SyntaxCheckers_objc_gcc_GetLocList	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_objc_gcc_IsAvailable	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_objcpp_gcc_GetLocList	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_objcpp_gcc_IsAvailable	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_ocaml_camlp4o_GetLocList	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_GetLocList() dict$/;"	f
SyntaxCheckers_ocaml_camlp4o_IsAvailable	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_IsAvailable() dict$/;"	f
SyntaxCheckers_perl_perl_GetLocList	bundle/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_GetLocList() dict$/;"	f
SyntaxCheckers_perl_perl_IsAvailable	bundle/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_IsAvailable() dict$/;"	f
SyntaxCheckers_perl_perl_Preprocess	bundle/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_Preprocess(errors)$/;"	f
SyntaxCheckers_perl_perlcritic_GetLocList	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^function! SyntaxCheckers_perl_perlcritic_GetLocList() dict$/;"	f
SyntaxCheckers_php_php_GetHighlightRegex	bundle/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_php_GetLocList	bundle/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpcs_GetLocList	bundle/syntastic/syntax_checkers/php/phpcs.vim	/^function! SyntaxCheckers_php_phpcs_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpmd_GetHighlightRegex	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_phpmd_GetLocList	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetLocList() dict$/;"	f
SyntaxCheckers_po_msgfmt_GetHighlightRegex	bundle/syntastic/syntax_checkers/po/msgfmt.vim	/^function! SyntaxCheckers_po_msgfmt_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_po_msgfmt_GetLocList	bundle/syntastic/syntax_checkers/po/msgfmt.vim	/^function! SyntaxCheckers_po_msgfmt_GetLocList() dict$/;"	f
SyntaxCheckers_pod_podchecker_GetLocList	bundle/syntastic/syntax_checkers/pod/podchecker.vim	/^function! SyntaxCheckers_pod_podchecker_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppet_GetLocList	bundle/syntastic/syntax_checkers/puppet/puppet.vim	/^function! SyntaxCheckers_puppet_puppet_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppetlint_GetLocList	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppetlint_IsAvailable	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_IsAvailable() dict$/;"	f
SyntaxCheckers_python_flake8_GetHighlightRegex	bundle/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_python_flake8_GetLocList	bundle/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetLocList() dict$/;"	f
SyntaxCheckers_python_frosted_GetLocList	bundle/syntastic/syntax_checkers/python/frosted.vim	/^function! SyntaxCheckers_python_frosted_GetLocList() dict$/;"	f
SyntaxCheckers_python_pep257_GetLocList	bundle/syntastic/syntax_checkers/python/pep257.vim	/^function! SyntaxCheckers_python_pep257_GetLocList() dict$/;"	f
SyntaxCheckers_python_pep257_Preprocess	bundle/syntastic/syntax_checkers/python/pep257.vim	/^function! SyntaxCheckers_python_pep257_Preprocess(errors)$/;"	f
SyntaxCheckers_python_pep8_GetLocList	bundle/syntastic/syntax_checkers/python/pep8.vim	/^function! SyntaxCheckers_python_pep8_GetLocList() dict$/;"	f
SyntaxCheckers_python_py3kwarn_GetLocList	bundle/syntastic/syntax_checkers/python/py3kwarn.vim	/^function! SyntaxCheckers_python_py3kwarn_GetLocList() dict$/;"	f
SyntaxCheckers_python_pyflakes_GetHighlightRegex	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_python_pyflakes_GetLocList	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylama_GetHighlightRegex	bundle/syntastic/syntax_checkers/python/pylama.vim	/^function! SyntaxCheckers_python_pylama_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_python_pylama_GetLocList	bundle/syntastic/syntax_checkers/python/pylama.vim	/^function! SyntaxCheckers_python_pylama_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylint_GetLocList	bundle/syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylint_IsAvailable	bundle/syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_IsAvailable() dict$/;"	f
SyntaxCheckers_python_python_GetLocList	bundle/syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_GetLocList() dict$/;"	f
SyntaxCheckers_python_python_IsAvailable	bundle/syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_IsAvailable() dict$/;"	f
SyntaxCheckers_racket_code_ayatollah_GetLocList	bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^function! SyntaxCheckers_racket_code_ayatollah_GetLocList() dict$/;"	f
SyntaxCheckers_racket_code_ayatollah_IsAvailable	bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^function! SyntaxCheckers_racket_code_ayatollah_IsAvailable() dict$/;"	f
SyntaxCheckers_racket_racket_GetLocList	bundle/syntastic/syntax_checkers/racket/racket.vim	/^function! SyntaxCheckers_racket_racket_GetLocList() dict$/;"	f
SyntaxCheckers_rst_rst2pseudoxml_GetLocList	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^function! SyntaxCheckers_rst_rst2pseudoxml_GetLocList() dict$/;"	f
SyntaxCheckers_rst_rstcheck_GetLocList	bundle/syntastic/syntax_checkers/rst/rstcheck.vim	/^function! SyntaxCheckers_rst_rstcheck_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_jruby_GetLocList	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^function! SyntaxCheckers_ruby_jruby_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_macruby_GetLocList	bundle/syntastic/syntax_checkers/ruby/macruby.vim	/^function! SyntaxCheckers_ruby_macruby_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_mri_GetHighlightRegex	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_ruby_mri_GetLocList	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_rubocop_GetLocList	bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_rubocop_IsAvailable	bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_rubylint_GetLocList	bundle/syntastic/syntax_checkers/ruby/rubylint.vim	/^function! SyntaxCheckers_ruby_rubylint_GetLocList() dict$/;"	f
SyntaxCheckers_rust_rustc_GetLocList	bundle/syntastic/syntax_checkers/rust/rustc.vim	/^function! SyntaxCheckers_rust_rustc_GetLocList() dict$/;"	f
SyntaxCheckers_sass_sass_GetLocList	bundle/syntastic/syntax_checkers/sass/sass.vim	/^function! SyntaxCheckers_sass_sass_GetLocList() dict$/;"	f
SyntaxCheckers_scala_fsc_GetLocList	bundle/syntastic/syntax_checkers/scala/fsc.vim	/^function! SyntaxCheckers_scala_fsc_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalac_GetLocList	bundle/syntastic/syntax_checkers/scala/scalac.vim	/^function! SyntaxCheckers_scala_scalac_GetLocList() dict$/;"	f
SyntaxCheckers_scss_scss_lint_GetLocList	bundle/syntastic/syntax_checkers/scss/scss_lint.vim	/^function! SyntaxCheckers_scss_scss_lint_GetLocList() dict$/;"	f
SyntaxCheckers_sh_checkbashisms_GetLocList	bundle/syntastic/syntax_checkers/sh/checkbashisms.vim	/^function! SyntaxCheckers_sh_checkbashisms_GetLocList() dict$/;"	f
SyntaxCheckers_sh_sh_GetLocList	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_GetLocList() dict$/;"	f
SyntaxCheckers_sh_sh_IsAvailable	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_IsAvailable() dict$/;"	f
SyntaxCheckers_sh_shellcheck_GetLocList	bundle/syntastic/syntax_checkers/sh/shellcheck.vim	/^function! SyntaxCheckers_sh_shellcheck_GetLocList() dict$/;"	f
SyntaxCheckers_slim_slimrb_GetLocList	bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^function! SyntaxCheckers_slim_slimrb_GetLocList() dict$/;"	f
SyntaxCheckers_tcl_nagelfar_GetLocList	bundle/syntastic/syntax_checkers/tcl/nagelfar.vim	/^function! SyntaxCheckers_tcl_nagelfar_GetLocList() dict$/;"	f
SyntaxCheckers_tex_chktex_GetLocList	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^function! SyntaxCheckers_tex_chktex_GetLocList() dict$/;"	f
SyntaxCheckers_tex_lacheck_GetLocList	bundle/syntastic/syntax_checkers/tex/lacheck.vim	/^function! SyntaxCheckers_tex_lacheck_GetLocList() dict$/;"	f
SyntaxCheckers_texinfo_makeinfo_GetHighlightRegex	bundle/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^function! SyntaxCheckers_texinfo_makeinfo_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_texinfo_makeinfo_GetLocList	bundle/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^function! SyntaxCheckers_texinfo_makeinfo_GetLocList() dict$/;"	f
SyntaxCheckers_text_atdtool_GetHighlightRegex	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_text_atdtool_GetLocList	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetLocList() dict$/;"	f
SyntaxCheckers_text_language_check_GetLocList	bundle/syntastic/syntax_checkers/text/language_check.vim	/^function! SyntaxCheckers_text_language_check_GetLocList() dict$/;"	f
SyntaxCheckers_twig_twiglint_GetLocList	bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^function! SyntaxCheckers_twig_twiglint_GetLocList() dict$/;"	f
SyntaxCheckers_typescript_tsc_GetLocList	bundle/syntastic/syntax_checkers/typescript/tsc.vim	/^function! SyntaxCheckers_typescript_tsc_GetLocList() dict$/;"	f
SyntaxCheckers_vala_valac_GetHighlightRegex	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_GetHighlightRegex(pos)$/;"	f
SyntaxCheckers_vala_valac_GetLocList	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_GetLocList() dict$/;"	f
SyntaxCheckers_verilog_verilator_GetLocList	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^function! SyntaxCheckers_verilog_verilator_GetLocList() dict$/;"	f
SyntaxCheckers_verilog_verilator_IsAvailable	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^function! SyntaxCheckers_verilog_verilator_IsAvailable() dict$/;"	f
SyntaxCheckers_vhdl_ghdl_GetLocList	bundle/syntastic/syntax_checkers/vhdl/ghdl.vim	/^function! SyntaxCheckers_vhdl_ghdl_GetLocList() dict$/;"	f
SyntaxCheckers_vim_vimlint_GetHighlightRegex	bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_vim_vimlint_GetLocList	bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_GetLocList() dict$/;"	f
SyntaxCheckers_vim_vimlint_IsAvailable	bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_IsAvailable() dict$/;"	f
SyntaxCheckers_xhtml_tidy_GetLocList	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! SyntaxCheckers_xhtml_tidy_GetLocList() dict$/;"	f
SyntaxCheckers_xml_xmllint_GetLocList	bundle/syntastic/syntax_checkers/xml/xmllint.vim	/^function! SyntaxCheckers_xml_xmllint_GetLocList() dict$/;"	f
SyntaxCheckers_yacc_bison_GetLocList	bundle/syntastic/syntax_checkers/yacc/bison.vim	/^function! SyntaxCheckers_yacc_bison_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_jsyaml_GetLocList	bundle/syntastic/syntax_checkers/yaml/jsyaml.vim	/^function! SyntaxCheckers_yaml_jsyaml_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamlxs_GetLocList	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function! SyntaxCheckers_yaml_yamlxs_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamlxs_IsAvailable	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function! SyntaxCheckers_yaml_yamlxs_IsAvailable() dict$/;"	f
SyntaxCheckers_z80_z80syntaxchecker_GetLocList	bundle/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^function! SyntaxCheckers_z80_z80syntaxchecker_GetLocList() dict$/;"	f
SyntaxCheckers_zpt_zptlint_GetLocList	bundle/syntastic/syntax_checkers/zpt/zptlint.vim	/^function! SyntaxCheckers_zpt_zptlint_GetLocList() dict$/;"	f
SyntaxCheckers_zsh_zsh_GetLocList	bundle/syntastic/syntax_checkers/zsh/zsh.vim	/^function! SyntaxCheckers_zsh_zsh_GetLocList() dict$/;"	f
TBBlue	bundle/TxtBrowser/plugin/txtbrowser.vim	/^command! -nargs=? -bar TBBlue call s:TBBlue(<args>)$/;"	c
TBBlue	bundle/TxtBrowser/plugin/txtbrowser.vim	/^function! s:TBBlue (text)$/;"	f
TBBold	bundle/TxtBrowser/plugin/txtbrowser.vim	/^command! -nargs=? -bar TBBold call s:TBBold(<args>)$/;"	c
TBBold	bundle/TxtBrowser/plugin/txtbrowser.vim	/^function! s:TBBold (text)$/;"	f
TBEscape	bundle/TxtBrowser/plugin/txtbrowser.vim	/^function! s:TBEscape (text)$/;"	f
TBGreen	bundle/TxtBrowser/plugin/txtbrowser.vim	/^command! -nargs=? -bar TBGreen call s:TBGreen(<args>)$/;"	c
TBGreen	bundle/TxtBrowser/plugin/txtbrowser.vim	/^function! s:TBGreen (text)$/;"	f
TBItalic	bundle/TxtBrowser/plugin/txtbrowser.vim	/^command! -nargs=? -bar TBItalic call s:TBItalic(<args>)$/;"	c
TBItalic	bundle/TxtBrowser/plugin/txtbrowser.vim	/^function! s:TBItalic (text)$/;"	f
TBMatch	bundle/TxtBrowser/plugin/txtbrowser.vim	/^command! -nargs=? -bar TBMatch call s:TBMatch(<args>)$/;"	c
TBMatch	bundle/TxtBrowser/plugin/txtbrowser.vim	/^function! s:TBMatch (text)$/;"	f
TBRed	bundle/TxtBrowser/plugin/txtbrowser.vim	/^command! -nargs=? -bar TBRed call s:TBRed(<args>)$/;"	c
TBRed	bundle/TxtBrowser/plugin/txtbrowser.vim	/^function! s:TBRed (text)$/;"	f
TBrowser_Ctags_Cmd	bundle/TxtBrowser/ftplugin/txt.vim	/^	let TBrowser_Ctags_Cmd = Tlist_Ctags_Cmd$/;"	v
TFind	bundle/TxtBrowser/plugin/txtbrowser.vim	/^command! -nargs=? -bar TFind call s:TxtBrowserWord(<f-args>)$/;"	c
TGoto	bundle/TxtBrowser/plugin/txtbrowser.vim	/^command! -nargs=? -bar TGoto call s:TxtbrowserGoto(<f-args>)$/;"	c
TSearch	bundle/TxtBrowser/plugin/txtbrowser.vim	/^command! -nargs=? -bar TSearch call s:TxtBrowserSearch(<f-args>)$/;"	c
TabEnter	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:TabEnter()$/;"	f
TabSpace	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:TabSpace()$/;"	f
TabbedCol	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:TabbedCol(line, col)$/;"	f
TagList_IsValid	bundle/taglist.vim/plugin/taglist.vim	/^function! TagList_IsValid()$/;"	f
TagList_Start	bundle/taglist.vim/plugin/taglist.vim	/^function! TagList_Start()$/;"	f
TagList_WrapUp	bundle/taglist.vim/plugin/taglist.vim	/^function! TagList_WrapUp()$/;"	f
TagList_title	bundle/taglist.vim/plugin/taglist.vim	/^    let TagList_title = "__Tag_List__"$/;"	v
TagPopupList	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^function! s:TagPopupList(szTypeName, szBase)$/;"	f
TagTrace	bundle/ccvext.vim/plugin/ccvext.vim	/^function! TagTrace (tag_s)$/;"	f
Tagbar	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 Tagbar              call tagbar#ToggleWindow()$/;"	c
TagbarBalloonExpr	bundle/tagbar/autoload/tagbar.vim	/^function! TagbarBalloonExpr() abort$/;"	f
TagbarClose	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarClose         call tagbar#CloseWindow()$/;"	c
TagbarCurrentTag	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarCurrentTag    echo tagbar#currenttag('%s', 'No current tag', <f-args>)$/;"	c
TagbarDebug	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarDebug         call tagbar#StartDebug(<f-args>)$/;"	c
TagbarDebugEnd	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarDebugEnd      call tagbar#StopDebug()$/;"	c
TagbarGetTypeConfig	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=1 TagbarGetTypeConfig call tagbar#gettypeconfig(<f-args>)$/;"	c
TagbarOpen	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarOpen          call tagbar#OpenWindow(<f-args>)$/;"	c
TagbarOpenAutoClose	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarOpenAutoClose call tagbar#OpenWindow('fcj')$/;"	c
TagbarSession	bundle/tagbar/plugin/tagbar.vim	/^augroup TagbarSession$/;"	a
TagbarSetFoldlevel	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=1 -bang TagbarSetFoldlevel  call tagbar#SetFoldLevel(<args>, <bang>0)$/;"	c
TagbarShowTag	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarShowTag       call tagbar#highlighttag(1, 1)$/;"	c
TagbarToggle	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarToggle        call tagbar#ToggleWindow()$/;"	c
TagbarTogglePause	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarTogglePause   call tagbar#toggle_pause()$/;"	c
TemplateFileFunc_noext_makefile	plugin/templatefile.vim	/^fun! TemplateFileFunc_noext_makefile()$/;"	f
TemplateSystem	plugin/templatefile.vim	/^augroup TemplateSystem$/;"	a
TidyEncOptByFenc	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:TidyEncOptByFenc()$/;"	f
TidyEncOptByFenc	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:TidyEncOptByFenc()$/;"	f
Tlist	bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar Tlist TlistToggle$/;"	c
TlistAddFiles	bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=+ -complete=file TlistAddFiles$/;"	c
TlistAddFilesRecursive	bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=+ -complete=dir TlistAddFilesRecursive$/;"	c
TlistClose	bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistClose call s:Tlist_Window_Close()$/;"	c
TlistDebug	bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=? -complete=file -bar TlistDebug$/;"	c
TlistHighlightTag	bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistHighlightTag call s:Tlist_Window_Highlight_Tag($/;"	c
TlistLock	bundle/taglist.vim/plugin/taglist.vim	/^    command! -bar TlistLock let Tlist_Auto_Update=0$/;"	c
TlistMessages	bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistMessages call s:Tlist_Debug_Show()$/;"	c
TlistOpen	bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistOpen call s:Tlist_Window_Open()$/;"	c
TlistSessionLoad	bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionLoad$/;"	c
TlistSessionSave	bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionSave$/;"	c
TlistShowPrototype	bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowPrototype$/;"	c
TlistShowTag	bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowTag$/;"	c
TlistSync	bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistSync TlistHighlightTag$/;"	c
TlistToggle	bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistToggle call s:Tlist_Window_Toggle()$/;"	c
TlistUndebug	bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUndebug  call s:Tlist_Debug_Disable()$/;"	c
TlistUnlock	bundle/taglist.vim/plugin/taglist.vim	/^    command! -bar TlistUnlock let Tlist_Auto_Update=1$/;"	c
TlistUpdate	bundle/taglist.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUpdate call s:Tlist_Update_Current_File()$/;"	c
Tlist_Add_Files	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Add_Files(...)$/;"	f
Tlist_Add_Files_Recursive	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Add_Files_Recursive(dir, ...)$/;"	f
Tlist_Auto_Highlight_Tag	bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Auto_Highlight_Tag = 1$/;"	v
Tlist_Auto_Open	bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Auto_Open = 0$/;"	v
Tlist_Auto_Update	bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Auto_Update = 1$/;"	v
Tlist_Ballon_Expr	bundle/taglist.vim/plugin/taglist.vim	/^function! Tlist_Ballon_Expr()$/;"	f
Tlist_Buffer_Removed	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Buffer_Removed(filename)$/;"	f
Tlist_Change_Sort	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Change_Sort(caller, action, sort_type)$/;"	f
Tlist_Close_On_Select	bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Close_On_Select = 0$/;"	v
Tlist_Compact_Format	bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Compact_Format = 0$/;"	v
Tlist_Create_Folds_For_File	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Create_Folds_For_File(fidx)$/;"	f
Tlist_Ctags_Cmd	bundle/TxtBrowser/ftplugin/txt.vim	/^let Tlist_Ctags_Cmd = TBrowser_Ctags_Cmd . s:TBrowser_Config$/;"	v
Tlist_Ctags_Cmd	bundle/taglist.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags'$/;"	v
Tlist_Ctags_Cmd	bundle/taglist.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags.exe'$/;"	v
Tlist_Ctags_Cmd	bundle/taglist.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exctags'$/;"	v
Tlist_Ctags_Cmd	bundle/taglist.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exuberant-ctags'$/;"	v
Tlist_Ctags_Cmd	bundle/taglist.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'tags'$/;"	v
Tlist_Debug_Disable	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Debug_Disable(...)$/;"	f
Tlist_Debug_Enable	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Debug_Enable(...)$/;"	f
Tlist_Debug_Show	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Debug_Show()$/;"	f
Tlist_Detect_Filetype	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Detect_Filetype(fname)$/;"	f
Tlist_Discard_FileInfo	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Discard_FileInfo(fidx)$/;"	f
Tlist_Discard_TagInfo	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Discard_TagInfo(fidx)$/;"	f
Tlist_Display_Prototype	bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Display_Prototype = 0$/;"	v
Tlist_Display_Tag_Scope	bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Display_Tag_Scope = 1$/;"	v
Tlist_Enable_Fold_Column	bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Enable_Fold_Column = 1$/;"	v
Tlist_Enc_Patch	bundle/taglist.vim/plugin/taglist.vim	/^    let Tlist_Enc_Patch = 1$/;"	v
Tlist_Exe_Cmd_No_Acmds	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Exe_Cmd_No_Acmds(cmd)$/;"	f
Tlist_Exit_OnlyWindow	bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Exit_OnlyWindow = 0$/;"	v
Tlist_Extract_Tag_Scope	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Extract_Tag_Scope(tag_line)$/;"	f
Tlist_Extract_Tagtype	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Extract_Tagtype(tag_line)$/;"	f
Tlist_FileType_Init	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_FileType_Init(ftype)$/;"	f
Tlist_File_Fold_Auto_Close	bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_File_Fold_Auto_Close = 0$/;"	v
Tlist_Find_Nearest_Tag_Idx	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Find_Nearest_Tag_Idx(fidx, linenum)$/;"	f
Tlist_GainFocus_On_ToggleOpen	bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_GainFocus_On_ToggleOpen = 0$/;"	v
Tlist_Get_Buffer_Filetype	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Buffer_Filetype(bnum)$/;"	f
Tlist_Get_File_Index	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Get_File_Index(fname)$/;"	f
Tlist_Get_Filenames	bundle/taglist.vim/plugin/taglist.vim	/^function! Tlist_Get_Filenames()$/;"	f
Tlist_Get_Tag_Linenum	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Linenum(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Prototype(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype_By_Line	bundle/taglist.vim/plugin/taglist.vim	/^function! Tlist_Get_Tag_Prototype_By_Line(...)$/;"	f
Tlist_Get_Tag_Scope	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Scope(fidx, tidx)$/;"	f
Tlist_Get_Tag_SearchPat	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_SearchPat(fidx, tidx)$/;"	f
Tlist_Get_Tag_Type_By_Tag	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Type_By_Tag(fidx, tidx)$/;"	f
Tlist_Get_Tagname_By_Line	bundle/taglist.vim/plugin/taglist.vim	/^function! Tlist_Get_Tagname_By_Line(...)$/;"	f
Tlist_Highlight_Tag_On_BufEnter	bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Highlight_Tag_On_BufEnter = 1$/;"	v
Tlist_Inc_Winwidth	bundle/taglist.vim/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 0$/;"	v
Tlist_Inc_Winwidth	bundle/taglist.vim/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 1$/;"	v
Tlist_Init_File	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Init_File(filename, ftype)$/;"	f
Tlist_Log_Msg	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Log_Msg(msg)$/;"	f
Tlist_Max_Submenu_Items	bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Max_Submenu_Items = 20$/;"	v
Tlist_Max_Tag_Length	bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Max_Tag_Length = 10$/;"	v
Tlist_Menu_Add_Base_Menu	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Add_Base_Menu()$/;"	f
Tlist_Menu_File_Refresh	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_File_Refresh(fidx)$/;"	f
Tlist_Menu_Get_Tag_Type_Cmd	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Get_Tag_Type_Cmd(fidx, ftype, add_ttype_name, ttype_idx)$/;"	f
Tlist_Menu_Init	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Init()$/;"	f
Tlist_Menu_Jump_To_Tag	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Jump_To_Tag(tidx)$/;"	f
Tlist_Menu_Refresh	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Refresh()$/;"	f
Tlist_Menu_Remove_File	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Remove_File()$/;"	f
Tlist_Menu_Update_File	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Update_File(clear_menu)$/;"	f
Tlist_Parse_Tagline	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Parse_Tagline(tag_line)$/;"	f
Tlist_Post_Close_Cleanup	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Post_Close_Cleanup()$/;"	f
Tlist_Process_Dir	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Process_Dir(dir_name, pat)$/;"	f
Tlist_Process_File	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Process_File(filename, ftype)$/;"	f
Tlist_Process_File_Always	bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Process_File_Always = 0$/;"	v
Tlist_Process_Filelist	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Process_Filelist(file_names)$/;"	f
Tlist_Refresh	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Refresh()$/;"	f
Tlist_Refresh_Folds	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Refresh_Folds()$/;"	f
Tlist_Remove_File	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Remove_File(file_idx, user_request)$/;"	f
Tlist_Session_Load	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Session_Load(...)$/;"	f
Tlist_Session_Save	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Session_Save(...)$/;"	f
Tlist_Set_App	bundle/taglist.vim/plugin/taglist.vim	/^function! Tlist_Set_App(name)$/;"	f
Tlist_Show_Menu	bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Show_Menu = 0$/;"	v
Tlist_Show_One_File	bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Show_One_File = 0$/;"	v
Tlist_Skip_File	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Skip_File(filename, ftype)$/;"	f
Tlist_Sort_Type	bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Sort_Type = 'order'$/;"	v
Tlist_Update_Current_File	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Update_Current_File()$/;"	f
Tlist_Update_File	bundle/taglist.vim/plugin/taglist.vim	/^function! Tlist_Update_File(filename, ftype)$/;"	f
Tlist_Update_Remove_List	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Update_Remove_List(filename, add)$/;"	f
Tlist_Use_Horiz_Window	bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Use_Horiz_Window = 0$/;"	v
Tlist_Use_Right_Window	bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Use_Right_Window = 0$/;"	v
Tlist_Use_SingleClick	bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_Use_SingleClick = 0$/;"	v
Tlist_User_Removed_File	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_User_Removed_File(filename)$/;"	f
Tlist_Vim_Session_Load	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Vim_Session_Load()$/;"	f
Tlist_Warning_Msg	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Warning_Msg(msg)$/;"	f
Tlist_WinHeight	bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_WinHeight = 10$/;"	v
Tlist_WinWidth	bundle/taglist.vim/plugin/taglist.vim	/^        let Tlist_WinWidth = 30$/;"	v
Tlist_Window_Check_Auto_Open	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Auto_Open()$/;"	f
Tlist_Window_Check_Width	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Width()$/;"	f
Tlist_Window_Close	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Close()$/;"	f
Tlist_Window_Create	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Create()$/;"	f
Tlist_Window_Display_Help	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Display_Help()$/;"	f
Tlist_Window_Exit_Only_Window	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Exit_Only_Window()$/;"	f
Tlist_Window_Get_File_Index_By_Linenum	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Get_File_Index_By_Linenum(lnum)$/;"	f
Tlist_Window_Get_Tag_Index	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Index(fidx, lnum)$/;"	f
Tlist_Window_Get_Tag_Type_By_Linenum	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Type_By_Linenum(fidx, lnum)$/;"	f
Tlist_Window_Goto_Window	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Goto_Window()$/;"	f
Tlist_Window_Highlight_Line	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Line()$/;"	f
Tlist_Window_Highlight_Tag	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Tag(filename, cur_lnum, cntx, center)$/;"	f
Tlist_Window_Init	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Init()$/;"	f
Tlist_Window_Jump_To_Tag	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Jump_To_Tag(win_ctrl)$/;"	f
Tlist_Window_Mark_File_Window	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Mark_File_Window()$/;"	f
Tlist_Window_Move_To_File	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Move_To_File(dir)$/;"	f
Tlist_Window_Open	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Open()$/;"	f
Tlist_Window_Open_File	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File(win_ctrl, filename, tagpat)$/;"	f
Tlist_Window_Open_File_Fold	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File_Fold(acmd_bufnr)$/;"	f
Tlist_Window_Refresh	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh()$/;"	f
Tlist_Window_Refresh_File	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh_File(filename, ftype)$/;"	f
Tlist_Window_Remove_File_From_Display	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Remove_File_From_Display(fidx)$/;"	f
Tlist_Window_Show_Info	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Show_Info()$/;"	f
Tlist_Window_Toggle	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle()$/;"	f
Tlist_Window_Toggle_Help_Text	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle_Help_Text()$/;"	f
Tlist_Window_Update_File	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Update_File()$/;"	f
Tlist_Window_Update_Line_Offsets	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Update_Line_Offsets(start_idx, increment, offset)$/;"	f
Tlist_Window_Zoom	bundle/taglist.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Zoom()$/;"	f
ToggleFindActive	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:ToggleFindActive()$/;"	f
ToggleFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleFold() abort$/;"	f
ToggleHelp	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:ToggleHelp()$/;"	f
ToggleHelp	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleHelp() abort$/;"	f
ToggleMode	bundle/syntastic/plugin/syntastic.vim	/^function! s:ToggleMode()$/;"	f
ToggleOnlyOneTab	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:ToggleOnlyOneTab()$/;"	f
ToggleShowRelativePath	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:ToggleShowRelativePath()$/;"	f
ToggleShowTabBuffer	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:ToggleShowTabBuffer()$/;"	f
ToggleShowUnlisted	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:ToggleShowUnlisted()$/;"	f
ToggleSort	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleSort() abort$/;"	f
ToggleSplitOutPathName	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:ToggleSplitOutPathName()$/;"	f
ToggleWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleWindow() abort$/;"	f
TokensToString	bundle/OmniCppComplete/autoload/omni/cpp/items.vim	/^function! s:TokensToString(tokens)$/;"	f
Tpl	plugin/load_template.vim	/^command! -nargs=? Tpl call LoadTemplate(<f-args>)$/;"	c
TransformUserTypeDef	bundle/tagbar/autoload/tagbar.vim	/^function! s:TransformUserTypeDef(def) abort$/;"	f
TranslateAlpha	bundle/lookupfile1_8/plugin/lookupfile.vim	/^function! s:TranslateAlpha(pat)$/;"	f
TranslateFileRegex	bundle/lookupfile1_8/plugin/lookupfile.vim	/^function! s:TranslateFileRegex(filePat)$/;"	f
TranslateFileWild	bundle/lookupfile1_8/plugin/lookupfile.vim	/^function! s:TranslateFileWild(fileWild)$/;"	f
TreeDirNode.AbsoluteTreeRoot	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path)$/;"	f
TreeDirNode._initChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openInNewTab	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
TreeDirNode._openRecursively2	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openRecursively2(forceOpen)$/;"	f
TreeDirNode.activate	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
TreeDirNode.addChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.findNode	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getVisibleChildCount	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.open	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
TreeDirNode.openAlong	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
TreeDirNode.openExplorer	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.removeChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path)$/;"	f
TreeDirNode.sortChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
TreeDirNode.transplantChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetRootLineNum	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootLineNum()$/;"	f
TreeFileNode.GetSelected	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path)$/;"	f
TreeFileNode._renderToString	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText, vertMap, isLastChild)$/;"	f
TreeFileNode.activate	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
TreeFileNode.bookmark	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBookmarks	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
TreeFileNode.copy	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findOpenDirSiblingWithVisibleChildren	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	f
TreeFileNode.findSibling	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getLineNum	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getLineNum()$/;"	f
TreeFileNode.isRoot	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.makeRoot	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.makeRoot()$/;"	f
TreeFileNode.open	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
TreeFileNode.openInNewTab	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.rename	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
TriggerSnippet	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! TriggerSnippet()$/;"	f
Trim	bundle/Mark--Karkat/autoload/mark.vim	/^	function! s:Trim( message )$/;"	f
TxtBrowserSearch	bundle/TxtBrowser/plugin/txtbrowser.vim	/^function! s:TxtBrowserSearch (...) range$/;"	f
TxtBrowserToggleFt	bundle/TxtBrowser/plugin/txtbrowser.vim	/^function! s:TxtBrowserToggleFt ()$/;"	f
TxtBrowserWord	bundle/TxtBrowser/plugin/txtbrowser.vim	/^function! s:TxtBrowserWord (...) range$/;"	f
TxtBrowser_Dict_Url	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    let TxtBrowser_Dict_Url = 'http:\/\/www.google.com\/dictionary?aq=f&langpair=en|zh-CN&q=text&hl=zh-CN'$/;"	v
TxtBrowser_Title_Level	bundle/TxtBrowser/ftplugin/txt.vim	/^	let TxtBrowser_Title_Level = 3$/;"	v
TxtbrowserGoto	bundle/TxtBrowser/plugin/txtbrowser.vim	/^function! s:TxtbrowserGoto(...)$/;"	f
TxtbrowserOpenUrl	bundle/TxtBrowser/plugin/txtbrowser.vim	/^function! s:TxtbrowserOpenUrl (url)$/;"	f
Txtbrowser_Search_Engine	bundle/TxtBrowser/plugin/txtbrowser.vim	/^    let Txtbrowser_Search_Engine = 'http:\/\/www.google.com\/search?hl=zh-CN&source=hp&q=text&btnG=Google+%E6%90%9C%E7%B4%A2&lr=&aq=f&oq='$/;"	v
TypeInfo.New	bundle/tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.New(...) abort dict$/;"	f
TypeInfo.createKinddict	bundle/tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.createKinddict() abort dict$/;"	f
TypeInfo.getKind	bundle/tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.getKind(kind) abort dict$/;"	f
U	bundle/repeat.vim/autoload/repeat.vim	/^    nnoremap <silent> U     :<C-U>call repeat#wrap('U',v:count)<CR>$/;"	m
UnEsc	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UnEsc(str, escChar)$/;"	f
UncommentLineNormal	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLineNormal(line)$/;"	f
UncommentLines	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLines(topLine, bottomLine)$/;"	f
UncommentLinesNormal	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLinesNormal(topline, bottomline)$/;"	f
UncommentLinesSexy	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLinesSexy(topline, bottomline)$/;"	f
UnmarkWindow	bundle/ccvext.vim/plugin/ccvext.vim	/^function! UnmarkWindow ()$/;"	f
UntabbedCol	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UntabbedCol(line, col)$/;"	f
UpdateChangedSnip	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:UpdateChangedSnip(entering)$/;"	f
UpdateErrors	bundle/syntastic/plugin/syntastic.vim	/^function! s:UpdateErrors(auto_invoked, ...)$/;"	f
UpdateFileDesc	plugin/cao_yj4java.vim	/^function! UpdateFileDesc()$/;"	f
UpdateHelpStatus	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:UpdateHelpStatus()$/;"	f
UpdatePlaceholderTabStops	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:UpdatePlaceholderTabStops()$/;"	f
UpdateRemark	templates/env.vim	/^let UpdateRemark='暂无备注'$/;"	v
UpdateTabStops	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:UpdateTabStops()$/;"	f
UpdateUser	templates/env.vim	/^let UpdateUser='cao_yj'$/;"	v
UpdateVars	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:UpdateVars()$/;"	f
VIM_PLUGIN_DIR	plugin/Makefile	/^VIM_PLUGIN_DIR = $$HOME\/.vim\/plugin$/;"	m
VimDirListing	bundle/project/plugin/project.vim	/^    function! s:VimDirListing(filter, padding, separator, filevariable, filecount, dirvariable, dircount)$/;"	f
WLR	bundle/Align/plugin/cecutil.vim	/^com! -bar -nargs=1 WLR	call s:WinLineRestore(<q-args>)$/;"	c
Warning	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^function! s:Warning(msg)$/;"	f
WarningMsg	bundle/Mark--Karkat/autoload/mark.vim	/^function! s:WarningMsg( text )$/;"	f
WidthToSize	plugin/cao_yj4java.vim	/^func! WidthToSize(width)$/;"	f
WinLineRestore	bundle/Align/plugin/cecutil.vim	/^fun! s:WinLineRestore(swwline)$/;"	f
WipeAll	bundle/project/plugin/project.vim	/^    function! s:WipeAll(recurse, line)$/;"	f
WrapMessage	bundle/Mark--Karkat/autoload/mark.vim	/^	function! s:WrapMessage( searchType, searchPattern, isBackward )$/;"	f
WriteConfig	bundle/ccvext.vim/plugin/ccvext.vim	/^function! WriteConfig (env_f, newline)$/;"	f
X	colors/Tomorrow-Night-Bright.vim	/^	fun <SID>X(group, fg, bg, attr)$/;"	f
X	colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>X(group, fg, bg, attr)$/;"	f
X	colors/Tomorrow-Night.vim	/^	fun <SID>X(group, fg, bg, attr)$/;"	f
ZoomWin	bundle/ZoomWin/plugin/ZoomWinPlugin.vim	/^com! ZoomWin :set lz|sil call ZoomWin#ZoomWin()|set nolz$/;"	c
ZoomWin	bundle/ZoomWin/plugin/ZoomWinPlugin.vim	/^fun! ZoomWin()$/;"	f
ZoomWin#CleanupSessionFile	bundle/ZoomWin/autoload/ZoomWin.vim	/^fun! ZoomWin#CleanupSessionFile()$/;"	f
ZoomWin#ZoomWin	bundle/ZoomWin/autoload/ZoomWin.vim	/^fun! ZoomWin#ZoomWin()$/;"	f
ZoomWinPreserve	bundle/ZoomWin/autoload/ZoomWin.vim	/^fun! s:ZoomWinPreserve(open)$/;"	f
ZoomWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:ZoomWindow() abort$/;"	f
_build_module	bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^function! s:_build_module(sid)$/;"	f
_compare	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:_compare(a, b)$/;"	f
_create_hash	bundle/neocomplcache.vim/autoload/vital/_13055f8/System/Cache.vim	/^function! s:_create_hash(dir, str)$/;"	f
_encode_name	bundle/neocomplcache.vim/autoload/vital/_13055f8/System/Cache.vim	/^function! s:_encode_name(cache_dir, filename)$/;"	f
_get_module_path	bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^function! s:_get_module_path(name)$/;"	f
_import	bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^function! s:_import(name, scripts)$/;"	f
_is_absolute_path	bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^  function! s:_is_absolute_path(path)$/;"	f
_makeArgumentList	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:_makeArgumentList()$/;"	f
_makeArgumentString	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:_makeArgumentString()$/;"	f
_redir	bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^function! s:_redir(cmd)$/;"	f
_replace	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:_replace(str, from, to, flags)$/;"	f
_scripts	bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^function! s:_scripts()$/;"	f
_split_by_wcswidth	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:_split_by_wcswidth(body, x)$/;"	f
_split_by_wcswidth_once	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x)$/;"	f
_unify_path	bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^  function! s:_unify_path(path)$/;"	f
_vital_depends	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:_vital_depends()$/;"	f
_vital_loaded	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:_vital_loaded(V)$/;"	f
_wcwidth	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^  function! s:_wcwidth(ucs)$/;"	f
activateAll	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:activateAll()$/;"	f
activateBookmark	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:activateBookmark(bm)$/;"	f
activateDirNode	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:activateDirNode(node)$/;"	f
activateFileNode	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:activateFileNode(node)$/;"	f
align_matrix	bundle/vim-powerline/fontpatcher/fontpatcher	/^			align_matrix = psMat.translate(0, 0)$/;"	v
align_matrix	bundle/vim-powerline/fontpatcher/fontpatcher	/^			align_matrix = psMat.translate(font_dim['width'] - sym_dim['width'], 0)$/;"	v
align_matrix	bundle/vim-powerline/fontpatcher/fontpatcher	/^			align_matrix = psMat.translate(font_dim['width'] \/ 2 - sym_dim['width'] \/ 2 , 0)$/;"	v
all	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:all(f, xs)$/;"	f
alternateExtensionsDict	bundle/a.vim/plugin/a.vim	/^let alternateExtensionsDict = {}$/;"	v
analyze_dictionary_variable_line	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:analyze_dictionary_variable_line(line, keyword_dict, var_name) "{{{$/;"	f
analyze_function_line	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:analyze_function_line(line, keyword_dict, prototype) "{{{$/;"	f
analyze_variable_line	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:analyze_variable_line(line, keyword_dict) "{{{$/;"	f
and	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:and(xs)$/;"	f
any	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:any(f, xs)$/;"	f
appendClass	plugin/libvim_javaimports.c	/^void appendClass(const char* class){$/;"	f
args	bundle/vim-powerline/fontpatcher/fontpatcher	/^args = parser.parse_args()$/;"	v
async_load	bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! s:async_load(argv, cache_dir, filename) "{{{$/;"	f
b:c_minlines	bundle/std_c.zip/syntax/c.vim	/^  let b:c_minlines = 15$/;"	v
b:c_minlines	bundle/std_c.zip/syntax/c.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:current_syntax	bundle/TxtBrowser/syntax/txt.vim	/^let b:current_syntax = 'txt'$/;"	v
b:current_syntax	bundle/cSyntaxAfter/after/syntax/html.vim	/^let b:current_syntax = "html"$/;"	v
b:current_syntax	bundle/cSyntaxAfter/after/syntax/java.vim	/^let b:current_syntax = "java"$/;"	v
b:current_syntax	bundle/cSyntaxAfter/after/syntax/javacc.vim	/^let b:current_syntax = "javacc"$/;"	v
b:current_syntax	bundle/std_c.zip/syntax/c.vim	/^let b:current_syntax = "c"$/;"	v
b:current_syntax	bundle/tagbar/syntax/tagbar.vim	/^let b:current_syntax = "tagbar"$/;"	v
b:current_syntax	syntax/html.vim	/^let b:current_syntax = "html"$/;"	v
b:current_syntax	syntax/java.vim	/^let b:current_syntax = "java"$/;"	v
b:current_syntax	syntax/javacc.vim	/^let b:current_syntax = "javacc"$/;"	v
b:escape_spaces	bundle/project/plugin/project.vim	/^                let b:escape_spaces=1$/;"	v
b:spell_options	bundle/cSyntaxAfter/after/syntax/java.vim	/^let b:spell_options="contained"$/;"	v
b:spell_options	syntax/java.vim	/^let b:spell_options="contained"$/;"	v
beep	bundle/vim-surround/plugin/surround.vim	/^function! s:beep()$/;"	f
break	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:break(f, xs)$/;"	f
bufname	bundle/project/plugin/project.vim	/^        let bufname=escape(substitute(expand('%:p', 0), '\\\\', '\/', 'g'), ' ')$/;"	v
bundle.path	bundle/vundle/autoload/vundle/config.vim	/^func! s:bundle.path()$/;"	f
c_C94	bundle/std_c.zip/syntax/c.vim	/^  let c_C94 = 1$/;"	v
c_C99	bundle/std_c.zip/syntax/c.vim	/^    let c_C99 = 1$/;"	v
c_C99	bundle/std_c.zip/syntax/c.vim	/^  let c_C99 = 1$/;"	v
c_cpp_comments	bundle/std_c.zip/syntax/c.vim	/^    let c_cpp_comments = 1$/;"	v
c_d	bundle/project/plugin/project.vim	/^                let c_d=s:GetCd(info, '')$/;"	v
c_math	bundle/std_c.zip/syntax/c.vim	/^  let c_math = 1$/;"	v
c_no_names	bundle/std_c.zip/syntax/c.vim	/^  let c_no_names = 1$/;"	v
c_posix	bundle/std_c.zip/syntax/c.vim	/^  let c_posix = 1$/;"	v
c_warn_digraph	bundle/std_c.zip/syntax/c.vim	/^  let c_warn_digraph = 1$/;"	v
caching	bundle/neocomplcache.vim/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:caching() "{{{$/;"	f
caching	bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:caching() "{{{$/;"	f
caching_completion_from_dict	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:caching_completion_from_dict(dict_name) "{{{$/;"	f
caching_current_buffer	bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:caching_current_buffer(start, end) "{{{$/;"	f
caching_current_buffer	bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^function! s:caching_current_buffer(start, end) "{{{$/;"	f
caching_current_files	bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:caching_current_files() "{{{$/;"	f
caching_dictionary	bundle/neocomplcache.vim/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:caching_dictionary(filetype)$/;"	f
caching_from_dict	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:caching_from_dict(dict_name, kind) "{{{$/;"	f
caching_from_syn	bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:caching_from_syn(filetype) "{{{$/;"	f
caching_prototype_from_dict	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:caching_prototype_from_dict(dict_name) "{{{$/;"	f
chCwd	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:chCwd(node)$/;"	f
chRoot	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:chRoot(node)$/;"	f
changesurround	bundle/vim-surround/plugin/surround.vim	/^function! s:changesurround() " {{{1$/;"	f
char_range	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:char_range(from, to)$/;"	f
check_buffer	bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! s:check_buffer(bufnumber, is_force) "{{{$/;"	f
check_cache	bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:check_cache() "{{{$/;"	f
check_cache	bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! s:check_cache() "{{{$/;"	f
check_changed_buffer	bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:check_changed_buffer(bufnumber) "{{{$/;"	f
check_in_do_auto_complete	bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^function! s:check_in_do_auto_complete() "{{{$/;"	f
check_old_cache	bundle/neocomplcache.vim/autoload/vital/_13055f8/System/Cache.vim	/^function! s:check_old_cache(cache_dir, filename)$/;"	f
check_recache	bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:check_recache() "{{{$/;"	f
check_source	bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:check_source() "{{{$/;"	f
chomp	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:chomp(str) "{{{$/;"	f
chop	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:chop(str) "{{{$/;"	f
classes	plugin/libvim_javaimports.c	/^const char* classes[] = {$/;"	v
clear	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:clear(list)$/;"	f
closeChildren	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:closeChildren(node)$/;"	f
closeCurrentDir	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:closeCurrentDir(node)$/;"	f
closeTreeWindow	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:closeTreeWindow()$/;"	f
close_preview_window	bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^function! s:close_preview_window() "{{{$/;"	f
closematch	bundle/vim-surround/plugin/surround.vim	/^function! s:closematch(str) " {{{1$/;"	f
colors_name	colors/ansi_blows.vim	/^let colors_name = "ansi_blows"$/;"	v
colors_name	colors/xterm16.vim	/^let colors_name = 'xterm16'$/;"	v
colour	colors/Tomorrow-Night-Bright.vim	/^	fun <SID>colour(r, g, b)$/;"	f
colour	colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>colour(r, g, b)$/;"	f
colour	colors/Tomorrow-Night.vim	/^	fun <SID>colour(r, g, b)$/;"	f
command	bundle/project/plugin/project.vim	/^                let command=substitute(command, '%F', escape(fnames, '\\'), 'g')$/;"	v
command	bundle/project/plugin/project.vim	/^                let command=substitute(command, '%d', escape(c_d, '\\'), 'g')$/;"	v
command	bundle/project/plugin/project.vim	/^                let command=substitute(command, '%h', escape(home, '\\'), 'g')$/;"	v
command	bundle/project/plugin/project.vim	/^                let command=substitute(command, '%s', escape(fnames, '\\'), 'g')$/;"	v
command	bundle/project/plugin/project.vim	/^                let command=substitute(g:proj_run_fold{a:number}, '%f', substitute(escape(fnames, '\\'), '\\\\ ', ' ', 'g'), 'g')$/;"	v
common_head	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:common_head(strs)$/;"	f
compare	bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_length.vim	/^function! s:compare(i1, i2)$/;"	f
compare	bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_rank.vim	/^function! s:compare(i1, i2)$/;"	f
compareErrorItems	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! s:compareErrorItems(a, b)$/;"	f
compare_pos	bundle/neocomplcache.vim/autoload/neocomplcache/context_filetype.vim	/^function! s:compare_pos(i1, i2)$/;"	f
compare_source_rank	bundle/neocomplcache.vim/autoload/neocomplcache/complete.vim	/^function! s:compare_source_rank(i1, i2)$/;"	f
compile	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^compile(FileName, LibDirs) ->$/;"	f
concat	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:concat(list)$/;"	f
conj	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:conj(xs, x)$/;"	f
cons	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:cons(x, xs)$/;"	f
converter.filter	bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_abbr.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_case.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_delimiter.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_nothing.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_remove_next_keyword.vim	/^function! s:converter.filter(context) "{{{$/;"	f
counter	plugin/libvim_javaimports.c	/^int counter = 0;$/;"	v
create_changelog	bundle/vundle/autoload/vundle/scripts.vim	/^func! s:create_changelog() abort$/;"	f
cs	bundle/vim-surround/plugin/surround.vim	/^  nmap cs  <Plug>Csurround$/;"	m
delete	bundle/neocomplcache.vim/autoload/vital/_13055f8/System/Cache.vim	/^function! s:delete(cache_dir, filename)$/;"	f
deleteBookmark	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:deleteBookmark(bm)$/;"	f
deletefile	bundle/neocomplcache.vim/autoload/vital/_13055f8/System/Cache.vim	/^function! s:deletefile(cache_dir, filename)$/;"	f
did_css_syn_inits	bundle/cSyntaxAfter/after/syntax/javacc.vim	/^    let did_css_syn_inits = 1$/;"	v
did_css_syn_inits	syntax/javacc.vim	/^    let did_css_syn_inits = 1$/;"	v
did_html_syn_inits	bundle/cSyntaxAfter/after/syntax/html.vim	/^    let did_html_syn_inits = 1$/;"	v
did_html_syn_inits	syntax/html.vim	/^    let did_html_syn_inits = 1$/;"	v
did_java_syn_inits	bundle/cSyntaxAfter/after/syntax/java.vim	/^    let did_java_syn_inits = 1$/;"	v
did_java_syn_inits	syntax/java.vim	/^    let did_java_syn_inits = 1$/;"	v
diffidx	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:diffidx(a, b)$/;"	f
displayHelp	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:displayHelp()$/;"	f
display_neco	bundle/neocomplcache.vim/autoload/neocomplcache/commands.vim	/^function! s:display_neco(number) "{{{$/;"	f
doc_dict.search	bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! s:doc_dict.search(cur_text) "{{{$/;"	f
doc_dict.search	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:doc_dict.search(cur_text) "{{{$/;"	f
dosurround	bundle/vim-surround/plugin/surround.vim	/^function! s:dosurround(...) " {{{1$/;"	f
ds	bundle/vim-surround/plugin/surround.vim	/^  nmap ds  <Plug>Dsurround$/;"	m
dstring	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:dstring(expr)$/;"	f
echo	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echo(msg)$/;"	f
echoWarning	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echoWarning(msg)$/;"	f
escape	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! s:escape(path)"{{{$/;"	f
escape_file_searching	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:escape_file_searching(buffer_name)$/;"	f
escape_pattern	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:escape_pattern(str)$/;"	f
exists_current_source	bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:exists_current_source() "{{{$/;"	f
expand_path	bundle/vundle/autoload/vundle/config.vim	/^func! s:expand_path(path) abort$/;"	f
extension	bundle/vim-powerline/fontpatcher/fontpatcher	/^		extension = 'otf'$/;"	v
extractafter	bundle/vim-surround/plugin/surround.vim	/^function! s:extractafter(str)$/;"	f
extractbefore	bundle/vim-surround/plugin/surround.vim	/^function! s:extractbefore(str)$/;"	f
fetch_scripts	bundle/vundle/autoload/vundle/scripts.vim	/^func! s:fetch_scripts(to)$/;"	f
filereadable	bundle/neocomplcache.vim/autoload/vital/_13055f8/System/Cache.vim	/^function! s:filereadable(cache_dir, filename)$/;"	f
find	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:find(list, default, f)$/;"	f
fixindent	bundle/vim-surround/plugin/surround.vim	/^function! s:fixindent(str,spc)$/;"	f
flatten	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:flatten(list, ...)$/;"	f
fnames	bundle/project/plugin/project.vim	/^                let fnames=Project_GetAllFnames(a:recurse, line('.'), ' ')$/;"	v
foldl	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:foldl(f, init, xs)$/;"	f
foldl1	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:foldl1(f, xs)$/;"	f
foldr	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:foldr(f, init, xs)$/;"	f
foldr1	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:foldr1(f, xs)$/;"	f
font	bundle/vim-powerline/fontpatcher/fontpatcher	/^		font = fontforge.open(font_path)$/;"	v
font_dim	bundle/vim-powerline/fontpatcher/fontpatcher	/^	font_dim = {$/;"	v
font_ycenter	bundle/vim-powerline/fontpatcher/fontpatcher	/^		font_ycenter = font_dim['height'] \/ 2$/;"	v
formatVariable	bundle/syntastic/autoload/syntastic/log.vim	/^function! s:formatVariable(name)$/;"	f
functions._command	bundle/ccvext.vim/plugin/ccvext.vim	/^function! s:functions._command['unix'] (dir) dict$/;"	f
functions._command	bundle/ccvext.vim/plugin/ccvext.vim	/^function! s:functions._command['win32'] (dir) dict$/;"	f
g:Align_xstrlen	bundle/Align/autoload/Align.vim	/^  let g:Align_xstrlen= 0$/;"	v
g:Align_xstrlen	bundle/Align/autoload/Align.vim	/^  let g:Align_xstrlen= 1$/;"	v
g:Align_xstrlen	bundle/Align/autoload/Align.vim	/^  let g:Align_xstrlen= g:drawit_xstrlen$/;"	v
g:Align_xstrlen	bundle/Align/autoload/Align.vim	/^  let g:Align_xstrlen= g:netrw_xstrlen$/;"	v
g:AutoPairs	bundle/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairs = {'(':')', '[':']', '{':'}',"'":"'",'"':'"', '`':'`'}$/;"	v
g:AutoPairsCenterLine	bundle/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsCenterLine = 1$/;"	v
g:AutoPairsClosedPairs	bundle/auto-pairs/plugin/auto-pairs.vim	/^let g:AutoPairsClosedPairs = {}$/;"	v
g:AutoPairsFlyMode	bundle/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsFlyMode = 0$/;"	v
g:AutoPairsLoaded	bundle/auto-pairs/plugin/auto-pairs.vim	/^let g:AutoPairsLoaded = 1$/;"	v
g:AutoPairsMapBS	bundle/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapBS = 1$/;"	v
g:AutoPairsMapCR	bundle/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapCR = 1$/;"	v
g:AutoPairsMapSpace	bundle/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapSpace = 1$/;"	v
g:AutoPairsParens	bundle/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsParens = {'(':')', '[':']', '{':'}'}$/;"	v
g:AutoPairsShortcutBackInsert	bundle/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutBackInsert = '<M-b>'$/;"	v
g:AutoPairsShortcutFastWrap	bundle/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutFastWrap = '<M-e>'$/;"	v
g:AutoPairsShortcutJump	bundle/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutJump = '<M-n>'$/;"	v
g:AutoPairsShortcutToggle	bundle/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutToggle = '<M-p>'$/;"	v
g:AutoPairsSmartQuotes	bundle/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsSmartQuotes = 1$/;"	v
g:BufExplorer_title	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^let g:BufExplorer_title = "\\[Buf\\ List\\]"$/;"	v
g:DrChipTopLvlMenu	bundle/Align/plugin/AlignMapsPlugin.vim	/^  let g:DrChipTopLvlMenu= "DrChip."$/;"	v
g:LookupFile_AllowNewFiles	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  let g:LookupFile_AllowNewFiles = 1$/;"	v
g:LookupFile_AlwaysAcceptFirst	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  let g:LookupFile_AlwaysAcceptFirst = 0$/;"	v
g:LookupFile_Bufs_BufListExpr	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  let g:LookupFile_Bufs_BufListExpr = ''$/;"	v
g:LookupFile_Bufs_LikeBufCmd	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  let g:LookupFile_Bufs_LikeBufCmd = 1$/;"	v
g:LookupFile_Bufs_SkipUnlisted	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  let g:LookupFile_Bufs_SkipUnlisted = 1$/;"	v
g:LookupFile_DefaultCmd	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  let g:LookupFile_DefaultCmd = ':LUTags'$/;"	v
g:LookupFile_DisableDefaultMap	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  let g:LookupFile_DisableDefaultMap = 0$/;"	v
g:LookupFile_EnableRemapCmd	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  let g:LookupFile_EnableRemapCmd = 1$/;"	v
g:LookupFile_EscCancelsPopup	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  let g:LookupFile_EscCancelsPopup = 1$/;"	v
g:LookupFile_FileFilter	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  let g:LookupFile_FileFilter = ''$/;"	v
g:LookupFile_LookupAcceptFunc	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  let g:LookupFile_LookupAcceptFunc = ''$/;"	v
g:LookupFile_LookupFunc	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  let g:LookupFile_LookupFunc = ''$/;"	v
g:LookupFile_LookupNotifyFunc	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  let g:LookupFile_LookupNotifyFunc = ''$/;"	v
g:LookupFile_MinPatLength	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  let g:LookupFile_MinPatLength = 4$/;"	v
g:LookupFile_OnCursorMovedI	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  let g:LookupFile_OnCursorMovedI = 0$/;"	v
g:LookupFile_PreserveLastPattern	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  let g:LookupFile_PreserveLastPattern = 1$/;"	v
g:LookupFile_PreservePatternHistory	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  let g:LookupFile_PreservePatternHistory = 1$/;"	v
g:LookupFile_RecentFileListSize	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  let g:LookupFile_RecentFileListSize = 20$/;"	v
g:LookupFile_SearchForBufsInTabs	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  let g:LookupFile_SearchForBufsInTabs = 1$/;"	v
g:LookupFile_ShowFiller	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  let g:LookupFile_ShowFiller = 1$/;"	v
g:LookupFile_SortMethod	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  let g:LookupFile_SortMethod = 'alpha'$/;"	v
g:LookupFile_TagExpr	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  let g:LookupFile_TagExpr = '&tags'$/;"	v
g:LookupFile_TagExpr	plugin/cao_yj4java.vim	/^    let g:LookupFile_TagExpr = '"F:\/platform\/lookup.files"'$/;"	v
g:LookupFile_TagExpr	plugin/cao_yj4java.vim	/^    let g:LookupFile_TagExpr = g:basePath . "\/lookup.files"$/;"	v
g:LookupFile_TagsExpandCamelCase	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  let g:LookupFile_TagsExpandCamelCase = 1$/;"	v
g:LookupFile_UpdateTime	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  let g:LookupFile_UpdateTime = 300$/;"	v
g:LookupFile_UsingSpecializedTags	bundle/lookupfile1_8/plugin/lookupfile.vim	/^  let g:LookupFile_UsingSpecializedTags = 0$/;"	v
g:NERDTreeAutoDeleteBuffer	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeCreator	bundle/nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirNode	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeFileNode	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeIgnore	bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreeKeyMap	bundle/nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMenuController	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuItem	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeOpener	bundle/nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	bundle/nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreeSortOrder	bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}"$/;"	v
g:Pl#HL	bundle/vim-powerline/autoload/Pl.vim	/^	let g:Pl#HL = []$/;"	v
g:Pl#OLD_STL	bundle/vim-powerline/autoload/Pl.vim	/^	let g:Pl#OLD_STL = ''$/;"	v
g:Pl#Parser#Symbols	bundle/vim-powerline/autoload/Pl/Parser.vim	/^	let g:Pl#Parser#Symbols[g:Powerline_symbols].dividers = g:Powerline_dividers_override$/;"	v
g:Pl#Parser#Symbols	bundle/vim-powerline/autoload/Pl/Parser.vim	/^	let g:Pl#Parser#Symbols[g:Powerline_symbols].symbols[s:key] = s:value$/;"	v
g:Pl#Parser#Symbols	bundle/vim-powerline/autoload/Pl/Parser.vim	/^let g:Pl#Parser#Symbols = {$/;"	v
g:Pl#THEME	bundle/vim-powerline/autoload/Pl.vim	/^	let g:Pl#THEME = []$/;"	v
g:Pl#THEME_CALLBACKS	bundle/vim-powerline/autoload/Pl.vim	/^	let g:Pl#THEME_CALLBACKS = []$/;"	v
g:Powerline#Colorschemes#default#colorscheme	bundle/vim-powerline/autoload/Powerline/Colorschemes/default.vim	/^let g:Powerline#Colorschemes#default#colorscheme = Pl#Colorscheme#Init([$/;"	v
g:Powerline#Colorschemes#solarized#colorscheme	bundle/vim-powerline/autoload/Powerline/Colorschemes/solarized.vim	/^let g:Powerline#Colorschemes#solarized#colorscheme = Pl#Colorscheme#Init([$/;"	v
g:Powerline#Colorschemes#solarized16#colorscheme	bundle/vim-powerline/autoload/Powerline/Colorschemes/solarized16.vim	/^let g:Powerline#Colorschemes#solarized16#colorscheme= Pl#Colorscheme#Init([$/;"	v
g:Powerline#Colorschemes#solarized256#colorscheme	bundle/vim-powerline/autoload/Powerline/Colorschemes/solarized256.vim	/^let g:Powerline#Colorschemes#solarized256#colorscheme = Pl#Colorscheme#Init([$/;"	v
g:Powerline#Matches#matches	bundle/vim-powerline/autoload/Powerline/Matches.vim	/^let g:Powerline#Matches#matches = {$/;"	v
g:Powerline#Segments#ctrlp#segments	bundle/vim-powerline/autoload/Powerline/Segments/ctrlp.vim	/^let g:Powerline#Segments#ctrlp#segments = Pl#Segment#Init(['ctrlp'$/;"	v
g:Powerline#Segments#ctrlp#segments#focus	bundle/vim-powerline/autoload/Powerline/Segments/ctrlp.vim	/^	let g:Powerline#Segments#ctrlp#segments#focus = '%{"%0"}'$/;"	v
g:Powerline#Segments#ctrlp#segments#next	bundle/vim-powerline/autoload/Powerline/Segments/ctrlp.vim	/^	let g:Powerline#Segments#ctrlp#segments#next = '%-3{"%5"}'$/;"	v
g:Powerline#Segments#ctrlp#segments#prev	bundle/vim-powerline/autoload/Powerline/Segments/ctrlp.vim	/^	let g:Powerline#Segments#ctrlp#segments#prev = '%-3{"%3"}'$/;"	v
g:Powerline#Segments#ft_man#segments	bundle/vim-powerline/autoload/Powerline/Segments/ft_man.vim	/^let g:Powerline#Segments#ft_man#segments = Pl#Segment#Init(['ft_man',$/;"	v
g:Powerline#Segments#fugitive#segments	bundle/vim-powerline/autoload/Powerline/Segments/fugitive.vim	/^let g:Powerline#Segments#fugitive#segments = Pl#Segment#Init(['fugitive',$/;"	v
g:Powerline#Segments#hgrev#segments	bundle/vim-powerline/autoload/Powerline/Segments/hgrev.vim	/^let g:Powerline#Segments#hgrev#segments = Pl#Segment#Init(['hgrev',$/;"	v
g:Powerline#Segments#rvm#segments	bundle/vim-powerline/autoload/Powerline/Segments/rvm.vim	/^let g:Powerline#Segments#rvm#segments = Pl#Segment#Init(['rvm',$/;"	v
g:Powerline#Segments#segments	bundle/vim-powerline/autoload/Powerline/Segments.vim	/^let g:Powerline#Segments#segments = Pl#Segment#Init([$/;"	v
g:Powerline#Segments#syntastic#segments	bundle/vim-powerline/autoload/Powerline/Segments/syntastic.vim	/^let g:Powerline#Segments#syntastic#segments = Pl#Segment#Init(['syntastic',$/;"	v
g:Powerline#Segments#tagbar#segments	bundle/vim-powerline/autoload/Powerline/Segments/tagbar.vim	/^let g:Powerline#Segments#tagbar#segments = Pl#Segment#Init(['tagbar',$/;"	v
g:Powerline#Segments#virtualenv#segments	bundle/vim-powerline/autoload/Powerline/Segments/virtualenv.vim	/^let g:Powerline#Segments#virtualenv#segments = Pl#Segment#Init(['virtualenv',$/;"	v
g:Powerline#Themes#default#theme	bundle/vim-powerline/autoload/Powerline/Themes/default.vim	/^let g:Powerline#Themes#default#theme = Pl#Theme#Create($/;"	v
g:Powerline#Themes#solarized16#theme	bundle/vim-powerline/autoload/Powerline/Themes/solarized16.vim	/^let g:Powerline#Themes#solarized16#theme = Pl#Theme#Create($/;"	v
g:Powerline#Themes#solarized256#theme	bundle/vim-powerline/autoload/Powerline/Themes/solarized256.vim	/^let g:Powerline#Themes#solarized256#theme = Pl#Theme#Create($/;"	v
g:Powerline_cache_dir	bundle/vim-powerline/plugin/Powerline.vim	/^		let g:Powerline_cache_dir = simplify(expand('<sfile>:p:h') .'\/..')$/;"	v
g:Powerline_loaded	bundle/vim-powerline/plugin/Powerline.vim	/^	let g:Powerline_loaded = 1$/;"	v
g:ST_WIN_CMD	bundle/genutils-2.5/autoload/genutils.vim	/^let g:ST_WIN_CMD = 0 | let g:ST_WIN_SH = 1 | let g:ST_UNIX = 2$/;"	v
g:SrcExpl_gobackKey	bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_gobackKey = '<SPACE>'$/;"	v
g:SrcExpl_isUpdateTags	bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_isUpdateTags = 1$/;"	v
g:SrcExpl_jumpKey	bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_jumpKey = '<CR>'$/;"	v
g:SrcExpl_markList	bundle/SrcExpl/plugin/srcexpl.vim	/^let g:SrcExpl_markList = []$/;"	v
g:SrcExpl_nextDefKey	bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_nextDefKey = ''$/;"	v
g:SrcExpl_pluginList	bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_pluginList = [$/;"	v
g:SrcExpl_prevDefKey	bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_prevDefKey = ''$/;"	v
g:SrcExpl_refreshTime	bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_refreshTime = 100$/;"	v
g:SrcExpl_searchLocalDef	bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_searchLocalDef = 1$/;"	v
g:SrcExpl_updateTagsCmd	bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_updateTagsCmd = 'ctags --sort=foldcase -R .'$/;"	v
g:SrcExpl_updateTagsKey	bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_updateTagsKey = ''$/;"	v
g:SrcExpl_winHeight	bundle/SrcExpl/plugin/srcexpl.vim	/^    let g:SrcExpl_winHeight = 8$/;"	v
g:SyntasticAutoloclistNotifier	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^let g:SyntasticAutoloclistNotifier = {}$/;"	v
g:SyntasticBalloonsNotifier	bundle/syntastic/plugin/syntastic/balloons.vim	/^let g:SyntasticBalloonsNotifier = {}$/;"	v
g:SyntasticChecker	bundle/syntastic/plugin/syntastic/checker.vim	/^let g:SyntasticChecker = {}$/;"	v
g:SyntasticCursorNotifier	bundle/syntastic/plugin/syntastic/cursor.vim	/^let g:SyntasticCursorNotifier = {}$/;"	v
g:SyntasticDebugAutocommands	bundle/syntastic/plugin/syntastic.vim	/^let g:SyntasticDebugAutocommands  = 8$/;"	v
g:SyntasticDebugLoclist	bundle/syntastic/plugin/syntastic.vim	/^let g:SyntasticDebugLoclist       = 2$/;"	v
g:SyntasticDebugNotifications	bundle/syntastic/plugin/syntastic.vim	/^let g:SyntasticDebugNotifications = 4$/;"	v
g:SyntasticDebugTrace	bundle/syntastic/plugin/syntastic.vim	/^let g:SyntasticDebugTrace         = 1$/;"	v
g:SyntasticDebugVariables	bundle/syntastic/plugin/syntastic.vim	/^let g:SyntasticDebugVariables     = 16$/;"	v
g:SyntasticHighlightingNotifier	bundle/syntastic/plugin/syntastic/highlighting.vim	/^let g:SyntasticHighlightingNotifier = {}$/;"	v
g:SyntasticLoclist	bundle/syntastic/plugin/syntastic/loclist.vim	/^let g:SyntasticLoclist = {}$/;"	v
g:SyntasticModeMap	bundle/syntastic/plugin/syntastic/modemap.vim	/^let g:SyntasticModeMap = {}$/;"	v
g:SyntasticNotifiers	bundle/syntastic/plugin/syntastic/notifiers.vim	/^let g:SyntasticNotifiers = {}$/;"	v
g:SyntasticRegistry	bundle/syntastic/plugin/syntastic/registry.vim	/^let g:SyntasticRegistry = {}$/;"	v
g:SyntasticSignsNotifier	bundle/syntastic/plugin/syntastic/signs.vim	/^let g:SyntasticSignsNotifier = {}$/;"	v
g:alternateNoDefaultAlternate	bundle/a.vim/plugin/a.vim	/^   let g:alternateNoDefaultAlternate = 0$/;"	v
g:alternateRelativeFiles	bundle/a.vim/plugin/a.vim	/^   let g:alternateRelativeFiles = 0$/;"	v
g:alternateSearchPath	bundle/a.vim/plugin/a.vim	/^  let g:alternateSearchPath = 'sfr:..\/source,sfr:..\/src,sfr:..\/include,sfr:..\/inc'$/;"	v
g:basePath	plugin/cao_yj4java.vim	/^let g:basePath = "\/home\/hisun"$/;"	v
g:bufexplorer_version	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^let g:bufexplorer_version = "7.4.2"$/;"	v
g:ccvext_version	bundle/ccvext.vim/plugin/ccvext.vim	/^let g:ccvext_version = "4.7.0"$/;"	v
g:colors_name	colors/Tomorrow-Night-Bright.vim	/^let g:colors_name = "Tomorrow-Night-Bright"$/;"	v
g:colors_name	colors/Tomorrow-Night-Eighties.vim	/^let g:colors_name = "Tomorrow-Night-Eighties"$/;"	v
g:colors_name	colors/Tomorrow-Night.vim	/^let g:colors_name = "Tomorrow-Night"$/;"	v
g:colors_name	colors/darkburn.vim	/^let g:colors_name="darkburn"$/;"	v
g:colors_name	colors/desert_terminal.vim	/^let g:colors_name="desert_terminal"$/;"	v
g:darkburn_alternate_Error	colors/darkburn.vim	/^      let g:darkburn_alternate_Error = 1$/;"	v
g:darkburn_alternate_Include	colors/darkburn.vim	/^      let g:darkburn_alternate_Include = 1$/;"	v
g:darkburn_force_dark_Background	colors/darkburn.vim	/^      let g:darkburn_force_dark_Background = 1$/;"	v
g:darkburn_high_Contrast	colors/darkburn.vim	/^     let g:darkburn_high_Contrast = 1$/;"	v
g:did_ft	bundle/snipmate.vim/plugin/snipMate.vim	/^let g:did_ft = {}$/;"	v
g:indentLine_bufNameExclude	bundle/indentLine/after/plugin/indentLine.vim	/^    let g:indentLine_bufNameExclude = []$/;"	v
g:indentLine_char	bundle/indentLine/after/plugin/indentLine.vim	/^        let g:indentLine_char = "|"$/;"	v
g:indentLine_char	bundle/indentLine/after/plugin/indentLine.vim	/^        let g:indentLine_char = "¦"$/;"	v
g:indentLine_enabled	bundle/indentLine/after/plugin/indentLine.vim	/^    let g:indentLine_enabled = 1$/;"	v
g:indentLine_faster	bundle/indentLine/after/plugin/indentLine.vim	/^    let g:indentLine_faster = 0$/;"	v
g:indentLine_fileType	bundle/indentLine/after/plugin/indentLine.vim	/^    let g:indentLine_fileType = []$/;"	v
g:indentLine_fileTypeExclude	bundle/indentLine/after/plugin/indentLine.vim	/^    let g:indentLine_fileTypeExclude = []$/;"	v
g:indentLine_first_char	bundle/indentLine/after/plugin/indentLine.vim	/^        let g:indentLine_first_char = "|"$/;"	v
g:indentLine_first_char	bundle/indentLine/after/plugin/indentLine.vim	/^        let g:indentLine_first_char = "¦"$/;"	v
g:indentLine_indentLevel	bundle/indentLine/after/plugin/indentLine.vim	/^    let g:indentLine_indentLevel = 10$/;"	v
g:indentLine_loaded	bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_loaded = 1$/;"	v
g:indentLine_maxLines	bundle/indentLine/after/plugin/indentLine.vim	/^    let g:indentLine_maxLines = 3000$/;"	v
g:indentLine_setColors	bundle/indentLine/after/plugin/indentLine.vim	/^    let g:indentLine_setColors = 1$/;"	v
g:indentLine_showFirstIndentLevel	bundle/indentLine/after/plugin/indentLine.vim	/^    let g:indentLine_showFirstIndentLevel = 0$/;"	v
g:libChange	plugin/cao_yj4java.vim	/^    let g:libChange = 1$/;"	v
g:loaded_Align	bundle/Align/autoload/Align.vim	/^let g:loaded_Align = "v37"$/;"	v
g:loaded_AlignMaps	bundle/Align/autoload/AlignMaps.vim	/^let g:loaded_AlignMaps= "v43"$/;"	v
g:loaded_AlignMapsPlugin	bundle/Align/plugin/AlignMapsPlugin.vim	/^let g:loaded_AlignMapsPlugin = "v43"$/;"	v
g:loaded_AlignPlugin	bundle/Align/plugin/AlignPlugin.vim	/^let g:loaded_AlignPlugin = "v37"$/;"	v
g:loaded_ZoomWin	bundle/ZoomWin/autoload/ZoomWin.vim	/^let g:loaded_ZoomWin = "v25j"$/;"	v
g:loaded_ZoomWinPlugin	bundle/ZoomWin/plugin/ZoomWinPlugin.vim	/^let g:loaded_ZoomWinPlugin = "v25j"$/;"	v
g:loaded_cecutil	bundle/Align/plugin/cecutil.vim	/^let g:loaded_cecutil = "v18h"$/;"	v
g:loaded_lookupfile	bundle/lookupfile1_8/plugin/lookupfile.vim	/^let g:loaded_lookupfile = 108$/;"	v
g:loaded_mark	bundle/Mark--Karkat/plugin/mark.vim	/^let g:loaded_mark = 1$/;"	v
g:loaded_neocomplcache	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:loaded_neocomplcache = 1$/;"	v
g:loaded_neocomplcache_buffer_complete	bundle/neocomplcache.vim/plugin/neocomplcache/buffer_complete.vim	/^let g:loaded_neocomplcache_buffer_complete = 1$/;"	v
g:loaded_neocomplcache_dictionary_complete	bundle/neocomplcache.vim/plugin/neocomplcache/dictionary_complete.vim	/^let g:loaded_neocomplcache_dictionary_complete = 1$/;"	v
g:loaded_neocomplcache_include_complete	bundle/neocomplcache.vim/plugin/neocomplcache/include_complete.vim	/^let g:loaded_neocomplcache_include_complete = 1$/;"	v
g:loaded_neocomplcache_syntax_complete	bundle/neocomplcache.vim/plugin/neocomplcache/syntax_complete.vim	/^let g:loaded_neocomplcache_syntax_complete = 1$/;"	v
g:loaded_neocomplcache_tags_complete	bundle/neocomplcache.vim/plugin/neocomplcache/tags_complete.vim	/^let g:loaded_neocomplcache_tags_complete = 1$/;"	v
g:loaded_nerdtree_autoload	bundle/nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_repeat	bundle/repeat.vim/autoload/repeat.vim	/^let g:loaded_repeat = 1$/;"	v
g:loaded_surround	bundle/vim-surround/plugin/surround.vim	/^let g:loaded_surround = 1$/;"	v
g:loaded_syntastic_actionscript_mxmlc_checker	bundle/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^let g:loaded_syntastic_actionscript_mxmlc_checker = 1$/;"	v
g:loaded_syntastic_ada_gcc_checker	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^let g:loaded_syntastic_ada_gcc_checker = 1$/;"	v
g:loaded_syntastic_applescript_osacompile_checker	bundle/syntastic/syntax_checkers/applescript/osacompile.vim	/^let g:loaded_syntastic_applescript_osacompile_checker = 1$/;"	v
g:loaded_syntastic_asciidoc_asciidoc_checker	bundle/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^let g:loaded_syntastic_asciidoc_asciidoc_checker = 1$/;"	v
g:loaded_syntastic_bemhtml_bemhtmllint_checker	bundle/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^let g:loaded_syntastic_bemhtml_bemhtmllint_checker = 1$/;"	v
g:loaded_syntastic_c_autoload	bundle/syntastic/autoload/syntastic/c.vim	/^let g:loaded_syntastic_c_autoload = 1$/;"	v
g:loaded_syntastic_c_checkpatch_checker	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^let g:loaded_syntastic_c_checkpatch_checker = 1$/;"	v
g:loaded_syntastic_c_cppcheck_checker	bundle/syntastic/syntax_checkers/c/cppcheck.vim	/^let g:loaded_syntastic_c_cppcheck_checker = 1$/;"	v
g:loaded_syntastic_c_gcc_checker	bundle/syntastic/syntax_checkers/c/gcc.vim	/^let g:loaded_syntastic_c_gcc_checker = 1$/;"	v
g:loaded_syntastic_c_make_checker	bundle/syntastic/syntax_checkers/c/make.vim	/^let g:loaded_syntastic_c_make_checker = 1$/;"	v
g:loaded_syntastic_c_oclint_checker	bundle/syntastic/syntax_checkers/c/oclint.vim	/^let g:loaded_syntastic_c_oclint_checker = 1$/;"	v
g:loaded_syntastic_c_sparse_checker	bundle/syntastic/syntax_checkers/c/sparse.vim	/^let g:loaded_syntastic_c_sparse_checker = 1$/;"	v
g:loaded_syntastic_c_splint_checker	bundle/syntastic/syntax_checkers/c/splint.vim	/^let g:loaded_syntastic_c_splint_checker = 1$/;"	v
g:loaded_syntastic_checker	bundle/syntastic/plugin/syntastic/checker.vim	/^let g:loaded_syntastic_checker = 1$/;"	v
g:loaded_syntastic_chef_foodcritic_checker	bundle/syntastic/syntax_checkers/chef/foodcritic.vim	/^let g:loaded_syntastic_chef_foodcritic_checker = 1$/;"	v
g:loaded_syntastic_co_coco_checker	bundle/syntastic/syntax_checkers/co/coco.vim	/^let g:loaded_syntastic_co_coco_checker = 1$/;"	v
g:loaded_syntastic_cobol_cobc_checker	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^let g:loaded_syntastic_cobol_cobc_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffee_checker	bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^let g:loaded_syntastic_coffee_coffee_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffeelint_checker	bundle/syntastic/syntax_checkers/coffee/coffeelint.vim	/^let g:loaded_syntastic_coffee_coffeelint_checker = 1$/;"	v
g:loaded_syntastic_coq_coqtop_checker	bundle/syntastic/syntax_checkers/coq/coqtop.vim	/^let g:loaded_syntastic_coq_coqtop_checker = 1$/;"	v
g:loaded_syntastic_cpp_cppcheck_checker	bundle/syntastic/syntax_checkers/cpp/cppcheck.vim	/^let g:loaded_syntastic_cpp_cppcheck_checker = 1$/;"	v
g:loaded_syntastic_cpp_cpplint_checker	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^let g:loaded_syntastic_cpp_cpplint_checker = 1$/;"	v
g:loaded_syntastic_cpp_gcc_checker	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^let g:loaded_syntastic_cpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_cpp_oclint_checker	bundle/syntastic/syntax_checkers/cpp/oclint.vim	/^let g:loaded_syntastic_cpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_cs_mcs_checker	bundle/syntastic/syntax_checkers/cs/mcs.vim	/^let g:loaded_syntastic_cs_mcs_checker = 1$/;"	v
g:loaded_syntastic_css_csslint_checker	bundle/syntastic/syntax_checkers/css/csslint.vim	/^let g:loaded_syntastic_css_csslint_checker = 1$/;"	v
g:loaded_syntastic_css_phpcs_checker	bundle/syntastic/syntax_checkers/css/phpcs.vim	/^let g:loaded_syntastic_css_phpcs_checker = 1$/;"	v
g:loaded_syntastic_css_prettycss_checker	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^let g:loaded_syntastic_css_prettycss_checker = 1$/;"	v
g:loaded_syntastic_cucumber_cucumber_checker	bundle/syntastic/syntax_checkers/cucumber/cucumber.vim	/^let g:loaded_syntastic_cucumber_cucumber_checker = 1$/;"	v
g:loaded_syntastic_cuda_nvcc_checker	bundle/syntastic/syntax_checkers/cuda/nvcc.vim	/^let g:loaded_syntastic_cuda_nvcc_checker = 1$/;"	v
g:loaded_syntastic_d_dmd_checker	bundle/syntastic/syntax_checkers/d/dmd.vim	/^let g:loaded_syntastic_d_dmd_checker = 1$/;"	v
g:loaded_syntastic_dart_dartanalyzer_checker	bundle/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^let g:loaded_syntastic_dart_dartanalyzer_checker = 1$/;"	v
g:loaded_syntastic_docbk_xmllint_checker	bundle/syntastic/syntax_checkers/docbk/xmllint.vim	/^let g:loaded_syntastic_docbk_xmllint_checker = 1$/;"	v
g:loaded_syntastic_dustjs_swiffer_checker	bundle/syntastic/syntax_checkers/dustjs/swiffer.vim	/^let g:loaded_syntastic_dustjs_swiffer_checker = 1$/;"	v
g:loaded_syntastic_elixir_elixir_checker	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^let g:loaded_syntastic_elixir_elixir_checker = 1$/;"	v
g:loaded_syntastic_erlang_erlang_checker	bundle/syntastic/syntax_checkers/erlang/escript.vim	/^let g:loaded_syntastic_erlang_erlang_checker = 1$/;"	v
g:loaded_syntastic_eruby_ruby_checker	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^let g:loaded_syntastic_eruby_ruby_checker = 1$/;"	v
g:loaded_syntastic_fortran_gfortran_checker	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^let g:loaded_syntastic_fortran_gfortran_checker=1$/;"	v
g:loaded_syntastic_glsl_cgc_checker	bundle/syntastic/syntax_checkers/glsl/cgc.vim	/^let g:loaded_syntastic_glsl_cgc_checker = 1$/;"	v
g:loaded_syntastic_go_go_checker	bundle/syntastic/syntax_checkers/go/go.vim	/^let g:loaded_syntastic_go_go_checker = 1$/;"	v
g:loaded_syntastic_go_gofmt_checker	bundle/syntastic/syntax_checkers/go/gofmt.vim	/^let g:loaded_syntastic_go_gofmt_checker = 1$/;"	v
g:loaded_syntastic_go_golint_checker	bundle/syntastic/syntax_checkers/go/golint.vim	/^let g:loaded_syntastic_go_golint_checker = 1$/;"	v
g:loaded_syntastic_go_gotype_checker	bundle/syntastic/syntax_checkers/go/gotype.vim	/^let g:loaded_syntastic_go_gotype_checker = 1$/;"	v
g:loaded_syntastic_go_govet_checker	bundle/syntastic/syntax_checkers/go/govet.vim	/^let g:loaded_syntastic_go_govet_checker = 1$/;"	v
g:loaded_syntastic_haml_haml_checker	bundle/syntastic/syntax_checkers/haml/haml.vim	/^let g:loaded_syntastic_haml_haml_checker = 1$/;"	v
g:loaded_syntastic_haml_haml_lint_checker	bundle/syntastic/syntax_checkers/haml/haml_lint.vim	/^let g:loaded_syntastic_haml_haml_lint_checker = 1$/;"	v
g:loaded_syntastic_handlebars_handlebars_checker	bundle/syntastic/syntax_checkers/handlebars/handlebars.vim	/^let g:loaded_syntastic_handlebars_handlebars_checker = 1$/;"	v
g:loaded_syntastic_haskell_ghc_mod_checker	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^let g:loaded_syntastic_haskell_ghc_mod_checker = 1$/;"	v
g:loaded_syntastic_haskell_hdevtools_checker	bundle/syntastic/syntax_checkers/haskell/hdevtools.vim	/^let g:loaded_syntastic_haskell_hdevtools_checker = 1$/;"	v
g:loaded_syntastic_haskell_hlint_checker	bundle/syntastic/syntax_checkers/haskell/hlint.vim	/^let g:loaded_syntastic_haskell_hlint_checker = 1$/;"	v
g:loaded_syntastic_haxe_haxe_checker	bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^let g:loaded_syntastic_haxe_haxe_checker = 1$/;"	v
g:loaded_syntastic_hss_hss_checker	bundle/syntastic/syntax_checkers/hss/hss.vim	/^let g:loaded_syntastic_hss_hss_checker = 1$/;"	v
g:loaded_syntastic_html_jshint_checker	bundle/syntastic/syntax_checkers/html/jshint.vim	/^let g:loaded_syntastic_html_jshint_checker = 1$/;"	v
g:loaded_syntastic_html_tidy_checker	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let g:loaded_syntastic_html_tidy_checker = 1$/;"	v
g:loaded_syntastic_html_validator_checker	bundle/syntastic/syntax_checkers/html/validator.vim	/^let g:loaded_syntastic_html_validator_checker=1$/;"	v
g:loaded_syntastic_html_w3_checker	bundle/syntastic/syntax_checkers/html/w3.vim	/^let g:loaded_syntastic_html_w3_checker = 1$/;"	v
g:loaded_syntastic_java_checkstyle_checker	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^let g:loaded_syntastic_java_checkstyle_checker = 1$/;"	v
g:loaded_syntastic_java_javac_checker	bundle/syntastic/syntax_checkers/java/javac.vim	/^let g:loaded_syntastic_java_javac_checker = 1$/;"	v
g:loaded_syntastic_javascript_closurecompiler_checker	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^let g:loaded_syntastic_javascript_closurecompiler_checker = 1$/;"	v
g:loaded_syntastic_javascript_eslint_checker	bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^let g:loaded_syntastic_javascript_eslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_gjslint_checker	bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^let g:loaded_syntastic_javascript_gjslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jscs_checker	bundle/syntastic/syntax_checkers/javascript/jscs.vim	/^let g:loaded_syntastic_javascript_jscs_checker = 1$/;"	v
g:loaded_syntastic_javascript_jshint_checker	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^let g:loaded_syntastic_javascript_jshint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jsl_checker	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^let g:loaded_syntastic_javascript_jsl_checker = 1$/;"	v
g:loaded_syntastic_javascript_jslint_checker	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^let g:loaded_syntastic_javascript_jslint_checker = 1$/;"	v
g:loaded_syntastic_json_jsonlint_checker	bundle/syntastic/syntax_checkers/json/jsonlint.vim	/^let g:loaded_syntastic_json_jsonlint_checker = 1$/;"	v
g:loaded_syntastic_json_jsonval_checker	bundle/syntastic/syntax_checkers/json/jsonval.vim	/^let g:loaded_syntastic_json_jsonval_checker = 1$/;"	v
g:loaded_syntastic_less_lessc_checker	bundle/syntastic/syntax_checkers/less/lessc.vim	/^let g:loaded_syntastic_less_lessc_checker = 1$/;"	v
g:loaded_syntastic_lex_flex_checker	bundle/syntastic/syntax_checkers/lex/flex.vim	/^let g:loaded_syntastic_lex_flex_checker = 1$/;"	v
g:loaded_syntastic_limbo_limbo_checker	bundle/syntastic/syntax_checkers/limbo/limbo.vim	/^let g:loaded_syntastic_limbo_limbo_checker = 1$/;"	v
g:loaded_syntastic_lisp_clisp_checker	bundle/syntastic/syntax_checkers/lisp/clisp.vim	/^let g:loaded_syntastic_lisp_clisp_checker = 1$/;"	v
g:loaded_syntastic_llvm_llvm_checker	bundle/syntastic/syntax_checkers/llvm/llvm.vim	/^let g:loaded_syntastic_llvm_llvm_checker = 1$/;"	v
g:loaded_syntastic_loclist	bundle/syntastic/plugin/syntastic/loclist.vim	/^let g:loaded_syntastic_loclist = 1$/;"	v
g:loaded_syntastic_log_autoload	bundle/syntastic/autoload/syntastic/log.vim	/^let g:loaded_syntastic_log_autoload = 1$/;"	v
g:loaded_syntastic_lua_luac_checker	bundle/syntastic/syntax_checkers/lua/luac.vim	/^let g:loaded_syntastic_lua_luac_checker = 1$/;"	v
g:loaded_syntastic_matlab_mlint_checker	bundle/syntastic/syntax_checkers/matlab/mlint.vim	/^let g:loaded_syntastic_matlab_mlint_checker = 1$/;"	v
g:loaded_syntastic_modemap	bundle/syntastic/plugin/syntastic/modemap.vim	/^let g:loaded_syntastic_modemap = 1$/;"	v
g:loaded_syntastic_nasm_nasm_checker	bundle/syntastic/syntax_checkers/nasm/nasm.vim	/^let g:loaded_syntastic_nasm_nasm_checker = 1$/;"	v
g:loaded_syntastic_notifier_autoloclist	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^let g:loaded_syntastic_notifier_autoloclist = 1$/;"	v
g:loaded_syntastic_notifier_balloons	bundle/syntastic/plugin/syntastic/balloons.vim	/^let g:loaded_syntastic_notifier_balloons = 1$/;"	v
g:loaded_syntastic_notifier_cursor	bundle/syntastic/plugin/syntastic/cursor.vim	/^let g:loaded_syntastic_notifier_cursor = 1$/;"	v
g:loaded_syntastic_notifier_highlighting	bundle/syntastic/plugin/syntastic/highlighting.vim	/^let g:loaded_syntastic_notifier_highlighting = 1$/;"	v
g:loaded_syntastic_notifier_signs	bundle/syntastic/plugin/syntastic/signs.vim	/^let g:loaded_syntastic_notifier_signs = 1$/;"	v
g:loaded_syntastic_notifiers	bundle/syntastic/plugin/syntastic/notifiers.vim	/^let g:loaded_syntastic_notifiers = 1$/;"	v
g:loaded_syntastic_nroff_mandoc_checker	bundle/syntastic/syntax_checkers/nroff/mandoc.vim	/^let g:loaded_syntastic_nroff_mandoc_checker = 1$/;"	v
g:loaded_syntastic_objc_gcc_checker	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^let g:loaded_syntastic_objc_gcc_checker = 1$/;"	v
g:loaded_syntastic_objc_oclint_checker	bundle/syntastic/syntax_checkers/objc/oclint.vim	/^let g:loaded_syntastic_objc_oclint_checker = 1$/;"	v
g:loaded_syntastic_objcpp_gcc_checker	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^let g:loaded_syntastic_objcpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_objcpp_oclint_checker	bundle/syntastic/syntax_checkers/objcpp/oclint.vim	/^let g:loaded_syntastic_objcpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_ocaml_camlp4o_checker	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^let g:loaded_syntastic_ocaml_camlp4o_checker = 1$/;"	v
g:loaded_syntastic_perl_perl_checker	bundle/syntastic/syntax_checkers/perl/perl.vim	/^let g:loaded_syntastic_perl_perl_checker=1$/;"	v
g:loaded_syntastic_perl_perlcritic_checker	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^let g:loaded_syntastic_perl_perlcritic_checker = 1$/;"	v
g:loaded_syntastic_perl_podchecker_checker	bundle/syntastic/syntax_checkers/perl/podchecker.vim	/^let g:loaded_syntastic_perl_podchecker_checker = 1$/;"	v
g:loaded_syntastic_php_php_checker	bundle/syntastic/syntax_checkers/php/php.vim	/^let g:loaded_syntastic_php_php_checker = 1$/;"	v
g:loaded_syntastic_php_phpcs_checker	bundle/syntastic/syntax_checkers/php/phpcs.vim	/^let g:loaded_syntastic_php_phpcs_checker = 1$/;"	v
g:loaded_syntastic_php_phpmd_checker	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^let g:loaded_syntastic_php_phpmd_checker = 1$/;"	v
g:loaded_syntastic_plugin	bundle/syntastic/plugin/syntastic.vim	/^let g:loaded_syntastic_plugin = 1$/;"	v
g:loaded_syntastic_po_msgfmt_checker	bundle/syntastic/syntax_checkers/po/msgfmt.vim	/^let g:loaded_syntastic_po_msgfmt_checker = 1$/;"	v
g:loaded_syntastic_pod_podchecker_checker	bundle/syntastic/syntax_checkers/pod/podchecker.vim	/^let g:loaded_syntastic_pod_podchecker_checker = 1$/;"	v
g:loaded_syntastic_postprocess_autoload	bundle/syntastic/autoload/syntastic/postprocess.vim	/^let g:loaded_syntastic_postprocess_autoload = 1$/;"	v
g:loaded_syntastic_puppet_puppet_checker	bundle/syntastic/syntax_checkers/puppet/puppet.vim	/^let g:loaded_syntastic_puppet_puppet_checker = 1$/;"	v
g:loaded_syntastic_puppet_puppetlint_checker	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^let g:loaded_syntastic_puppet_puppetlint_checker = 1$/;"	v
g:loaded_syntastic_python_flake8_checker	bundle/syntastic/syntax_checkers/python/flake8.vim	/^let g:loaded_syntastic_python_flake8_checker = 1$/;"	v
g:loaded_syntastic_python_frosted_checker	bundle/syntastic/syntax_checkers/python/frosted.vim	/^let g:loaded_syntastic_python_frosted_checker = 1$/;"	v
g:loaded_syntastic_python_pep257_checker	bundle/syntastic/syntax_checkers/python/pep257.vim	/^let g:loaded_syntastic_python_pep257_checker = 1$/;"	v
g:loaded_syntastic_python_pep8_checker	bundle/syntastic/syntax_checkers/python/pep8.vim	/^let g:loaded_syntastic_python_pep8_checker = 1$/;"	v
g:loaded_syntastic_python_py3kwarn_checker	bundle/syntastic/syntax_checkers/python/py3kwarn.vim	/^let g:loaded_syntastic_python_py3kwarn_checker = 1$/;"	v
g:loaded_syntastic_python_pyflakes_checker	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^let g:loaded_syntastic_python_pyflakes_checker = 1$/;"	v
g:loaded_syntastic_python_pylama_checker	bundle/syntastic/syntax_checkers/python/pylama.vim	/^let g:loaded_syntastic_python_pylama_checker = 1$/;"	v
g:loaded_syntastic_python_pylint_checker	bundle/syntastic/syntax_checkers/python/pylint.vim	/^let g:loaded_syntastic_python_pylint_checker = 1$/;"	v
g:loaded_syntastic_python_python_checker	bundle/syntastic/syntax_checkers/python/python.vim	/^let g:loaded_syntastic_python_python_checker = 1$/;"	v
g:loaded_syntastic_racket_code_ayatollah_checker	bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^let g:loaded_syntastic_racket_code_ayatollah_checker = 1$/;"	v
g:loaded_syntastic_racket_racket_checker	bundle/syntastic/syntax_checkers/racket/racket.vim	/^let g:loaded_syntastic_racket_racket_checker=1$/;"	v
g:loaded_syntastic_registry	bundle/syntastic/plugin/syntastic/registry.vim	/^let g:loaded_syntastic_registry = 1$/;"	v
g:loaded_syntastic_rst_rst2pseudoxml_checker	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let g:loaded_syntastic_rst_rst2pseudoxml_checker = 1$/;"	v
g:loaded_syntastic_rst_rstcheck_checker	bundle/syntastic/syntax_checkers/rst/rstcheck.vim	/^let g:loaded_syntastic_rst_rstcheck_checker = 1$/;"	v
g:loaded_syntastic_ruby_jruby_checker	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^let g:loaded_syntastic_ruby_jruby_checker = 1$/;"	v
g:loaded_syntastic_ruby_macruby_checker	bundle/syntastic/syntax_checkers/ruby/macruby.vim	/^let g:loaded_syntastic_ruby_macruby_checker = 1$/;"	v
g:loaded_syntastic_ruby_mri_checker	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^let g:loaded_syntastic_ruby_mri_checker = 1$/;"	v
g:loaded_syntastic_ruby_rubocop_checker	bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^let g:loaded_syntastic_ruby_rubocop_checker = 1$/;"	v
g:loaded_syntastic_ruby_rubylint_checker	bundle/syntastic/syntax_checkers/ruby/rubylint.vim	/^let g:loaded_syntastic_ruby_rubylint_checker = 1$/;"	v
g:loaded_syntastic_rust_rustc_checker	bundle/syntastic/syntax_checkers/rust/rustc.vim	/^let g:loaded_syntastic_rust_rustc_checker = 1$/;"	v
g:loaded_syntastic_sass_sass_checker	bundle/syntastic/syntax_checkers/sass/sass.vim	/^let g:loaded_syntastic_sass_sass_checker = 1$/;"	v
g:loaded_syntastic_scala_fsc_checker	bundle/syntastic/syntax_checkers/scala/fsc.vim	/^let g:loaded_syntastic_scala_fsc_checker = 1$/;"	v
g:loaded_syntastic_scala_scalac_checker	bundle/syntastic/syntax_checkers/scala/scalac.vim	/^let g:loaded_syntastic_scala_scalac_checker = 1$/;"	v
g:loaded_syntastic_scss_sass_checker	bundle/syntastic/syntax_checkers/scss/sass.vim	/^let g:loaded_syntastic_scss_sass_checker = 1$/;"	v
g:loaded_syntastic_scss_scss_lint_checker	bundle/syntastic/syntax_checkers/scss/scss_lint.vim	/^let g:loaded_syntastic_scss_scss_lint_checker = 1$/;"	v
g:loaded_syntastic_sh_checkbashisms_checker	bundle/syntastic/syntax_checkers/sh/checkbashisms.vim	/^let g:loaded_syntastic_sh_checkbashisms_checker = 1$/;"	v
g:loaded_syntastic_sh_sh_checker	bundle/syntastic/syntax_checkers/sh/sh.vim	/^let g:loaded_syntastic_sh_sh_checker = 1$/;"	v
g:loaded_syntastic_sh_shellcheck_checker	bundle/syntastic/syntax_checkers/sh/shellcheck.vim	/^let g:loaded_syntastic_sh_shellcheck_checker = 1$/;"	v
g:loaded_syntastic_slim_slimrb_checker	bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^let g:loaded_syntastic_slim_slimrb_checker = 1$/;"	v
g:loaded_syntastic_tcl_nagelfar_checker	bundle/syntastic/syntax_checkers/tcl/nagelfar.vim	/^let g:loaded_syntastic_tcl_nagelfar_checker = 1$/;"	v
g:loaded_syntastic_tex_chktex_checker	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^let g:loaded_syntastic_tex_chktex_checker = 1$/;"	v
g:loaded_syntastic_tex_lacheck_checker	bundle/syntastic/syntax_checkers/tex/lacheck.vim	/^let g:loaded_syntastic_tex_lacheck_checker = 1$/;"	v
g:loaded_syntastic_texinfo_makeinfo_checker	bundle/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^let g:loaded_syntastic_texinfo_makeinfo_checker = 1$/;"	v
g:loaded_syntastic_text_atdtool_checker	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^let g:loaded_syntastic_text_atdtool_checker = 1$/;"	v
g:loaded_syntastic_text_language_check_checker	bundle/syntastic/syntax_checkers/text/language_check.vim	/^let g:loaded_syntastic_text_language_check_checker = 1$/;"	v
g:loaded_syntastic_twig_twiglint_checker	bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^let g:loaded_syntastic_twig_twiglint_checker = 1$/;"	v
g:loaded_syntastic_typescript_tsc_checker	bundle/syntastic/syntax_checkers/typescript/tsc.vim	/^let g:loaded_syntastic_typescript_tsc_checker = 1$/;"	v
g:loaded_syntastic_util_autoload	bundle/syntastic/autoload/syntastic/util.vim	/^let g:loaded_syntastic_util_autoload = 1$/;"	v
g:loaded_syntastic_vala_valac_checker	bundle/syntastic/syntax_checkers/vala/valac.vim	/^let g:loaded_syntastic_vala_valac_checker = 1$/;"	v
g:loaded_syntastic_verilog_verilator_checker	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^let g:loaded_syntastic_verilog_verilator_checker = 1$/;"	v
g:loaded_syntastic_vhdl_ghdl_checker	bundle/syntastic/syntax_checkers/vhdl/ghdl.vim	/^let g:loaded_syntastic_vhdl_ghdl_checker = 1$/;"	v
g:loaded_syntastic_vim_vimlint_checker	bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^let g:loaded_syntastic_vim_vimlint_checker = 1$/;"	v
g:loaded_syntastic_xhtml_jshint_checker	bundle/syntastic/syntax_checkers/xhtml/jshint.vim	/^let g:loaded_syntastic_xhtml_jshint_checker = 1$/;"	v
g:loaded_syntastic_xhtml_tidy_checker	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^let g:loaded_syntastic_xhtml_tidy_checker = 1$/;"	v
g:loaded_syntastic_xml_xmllint_checker	bundle/syntastic/syntax_checkers/xml/xmllint.vim	/^let g:loaded_syntastic_xml_xmllint_checker = 1$/;"	v
g:loaded_syntastic_xslt_xmllint_checker	bundle/syntastic/syntax_checkers/xslt/xmllint.vim	/^let g:loaded_syntastic_xslt_xmllint_checker = 1$/;"	v
g:loaded_syntastic_yacc_bison_checker	bundle/syntastic/syntax_checkers/yacc/bison.vim	/^let g:loaded_syntastic_yacc_bison_checker = 1$/;"	v
g:loaded_syntastic_yaml_jsyaml_checker	bundle/syntastic/syntax_checkers/yaml/jsyaml.vim	/^let g:loaded_syntastic_yaml_jsyaml_checker = 1$/;"	v
g:loaded_syntastic_yaml_yamlxs_checker	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^let g:loaded_syntastic_yaml_yamlxs_checker = 1$/;"	v
g:loaded_syntastic_z80_z80syntaxchecker_checker	bundle/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^let g:loaded_syntastic_z80_z80syntaxchecker_checker = 1$/;"	v
g:loaded_syntastic_zpt_zptlint_checker	bundle/syntastic/syntax_checkers/zpt/zptlint.vim	/^let g:loaded_syntastic_zpt_zptlint_checker = 1$/;"	v
g:loaded_syntastic_zsh_zsh_checker	bundle/syntastic/syntax_checkers/zsh/zsh.vim	/^let g:loaded_syntastic_zsh_zsh_checker = 1$/;"	v
g:loaded_tagbar	bundle/tagbar/autoload/tagbar.vim	/^let g:loaded_tagbar = 1$/;"	v
g:loaded_vimcdoc	plugin/vimcdoc.vim	/^let g:loaded_vimcdoc = 1$/;"	v
g:lookupfile#lastPattern	bundle/lookupfile1_8/autoload/lookupfile.vim	/^let g:lookupfile#lastPattern = ""$/;"	v
g:lookupfile#lastResults	bundle/lookupfile1_8/autoload/lookupfile.vim	/^let g:lookupfile#lastResults = []$/;"	v
g:lookupfile#lastStatsMsg	bundle/lookupfile1_8/autoload/lookupfile.vim	/^let g:lookupfile#lastStatsMsg = []$/;"	v
g:lookupfile#recentFiles	bundle/lookupfile1_8/autoload/lookupfile.vim	/^let g:lookupfile#recentFiles = []$/;"	v
g:makeArgumentList	bundle/genutils-2.5/autoload/genutils.vim	/^let g:makeArgumentList = 'exec genutils#MakeArgumentList()'$/;"	v
g:makeArgumentString	bundle/genutils-2.5/autoload/genutils.vim	/^let g:makeArgumentString = 'exec genutils#MakeArgumentString()'$/;"	v
g:mwAutoLoadMarks	bundle/Mark--Karkat/plugin/mark.vim	/^	let g:mwAutoLoadMarks = 0$/;"	v
g:mwAutoSaveMarks	bundle/Mark--Karkat/plugin/mark.vim	/^	let g:mwAutoSaveMarks = 1$/;"	v
g:mwDefaultHighlightingNum	bundle/Mark--Karkat/plugin/mark.vim	/^	let g:mwDefaultHighlightingNum = -1$/;"	v
g:mwDefaultHighlightingPalette	bundle/Mark--Karkat/plugin/mark.vim	/^	let g:mwDefaultHighlightingPalette = 'original'$/;"	v
g:mwDirectGroupJumpMappingNum	bundle/Mark--Karkat/plugin/mark.vim	/^	let g:mwDirectGroupJumpMappingNum = 9$/;"	v
g:mwHistAdd	bundle/Mark--Karkat/plugin/mark.vim	/^	let g:mwHistAdd = '\/@'$/;"	v
g:mwPalettes	bundle/Mark--Karkat/plugin/mark.vim	/^	let g:mwPalettes = {$/;"	v
g:neocomplcache_auto_completion_start_length	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_auto_completion_start_length =$/;"	v
g:neocomplcache_caching_limit_file_size	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_caching_limit_file_size =$/;"	v
g:neocomplcache_ctags_program	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_ctags_program =$/;"	v
g:neocomplcache_cursor_hold_i_time	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_cursor_hold_i_time =$/;"	v
g:neocomplcache_disable_auto_complete	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_disable_auto_complete =$/;"	v
g:neocomplcache_disable_caching_file_path_pattern	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_disable_caching_file_path_pattern =$/;"	v
g:neocomplcache_disabled_sources_list	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^  let g:neocomplcache_disabled_sources_list._ =$/;"	v
g:neocomplcache_disabled_sources_list	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_disabled_sources_list =$/;"	v
g:neocomplcache_enable_auto_close_preview	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_auto_close_preview =$/;"	v
g:neocomplcache_enable_auto_delimiter	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_auto_delimiter =$/;"	v
g:neocomplcache_enable_auto_select	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_auto_select =$/;"	v
g:neocomplcache_enable_caching_message	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_caching_message =$/;"	v
g:neocomplcache_enable_camel_case_completion	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_camel_case_completion =$/;"	v
g:neocomplcache_enable_cursor_hold_i	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_cursor_hold_i =$/;"	v
g:neocomplcache_enable_debug	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_debug =$/;"	v
g:neocomplcache_enable_fuzzy_completion	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_fuzzy_completion =$/;"	v
g:neocomplcache_enable_ignore_case	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_ignore_case =$/;"	v
g:neocomplcache_enable_insert_char_pre	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_insert_char_pre =$/;"	v
g:neocomplcache_enable_prefetch	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_prefetch =$/;"	v
g:neocomplcache_enable_smart_case	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_smart_case =$/;"	v
g:neocomplcache_enable_underbar_completion	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_underbar_completion =$/;"	v
g:neocomplcache_enable_wildcard	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_wildcard =$/;"	v
g:neocomplcache_force_overwrite_completefunc	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_force_overwrite_completefunc =$/;"	v
g:neocomplcache_fuzzy_completion_start_length	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_fuzzy_completion_start_length =$/;"	v
g:neocomplcache_include_exprs	bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^  let g:neocomplcache_include_exprs = {}$/;"	v
g:neocomplcache_include_paths	bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^  let g:neocomplcache_include_paths = {}$/;"	v
g:neocomplcache_include_patterns	bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^  let g:neocomplcache_include_patterns = {}$/;"	v
g:neocomplcache_include_suffixes	bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^  let g:neocomplcache_include_suffixes = {}$/;"	v
g:neocomplcache_lock_buffer_name_pattern	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_lock_buffer_name_pattern =$/;"	v
g:neocomplcache_lock_iminsert	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_lock_iminsert =$/;"	v
g:neocomplcache_manual_completion_start_length	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_manual_completion_start_length =$/;"	v
g:neocomplcache_max_keyword_width	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_max_keyword_width =$/;"	v
g:neocomplcache_max_list	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_max_list =$/;"	v
g:neocomplcache_max_menu_width	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_max_menu_width =$/;"	v
g:neocomplcache_min_keyword_length	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_min_keyword_length =$/;"	v
g:neocomplcache_min_syntax_length	bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^  let g:neocomplcache_min_syntax_length = 4$/;"	v
g:neocomplcache_release_cache_time	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_release_cache_time =$/;"	v
g:neocomplcache_skip_auto_completion_time	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_skip_auto_completion_time =$/;"	v
g:neocomplcache_source_completion_length	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^  let g:neocomplcache_source_completion_length =$/;"	v
g:neocomplcache_source_completion_length	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_source_completion_length =$/;"	v
g:neocomplcache_source_rank	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^  let g:neocomplcache_source_rank = g:neocomplcache_plugin_rank$/;"	v
g:neocomplcache_source_rank	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_source_rank =$/;"	v
g:neocomplcache_sources_list	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_sources_list =$/;"	v
g:neocomplcache_temporary_dir	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_temporary_dir =$/;"	v
g:neocomplcache_wildcard_characters	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let g:neocomplcache_wildcard_characters =$/;"	v
g:omni#cpp#includes#CACHE_FILE_TIME	bundle/OmniCppComplete/autoload/omni/cpp/includes.vim	/^let g:omni#cpp#includes#CACHE_FILE_TIME = {}$/;"	v
g:omni#cpp#includes#CACHE_INCLUDES	bundle/OmniCppComplete/autoload/omni/cpp/includes.vim	/^let g:omni#cpp#includes#CACHE_INCLUDES = {}$/;"	v
g:omni#cpp#namespaces#CacheResolve	bundle/OmniCppComplete/autoload/omni/cpp/namespaces.vim	/^let g:omni#cpp#namespaces#CacheResolve = {}$/;"	v
g:omni#cpp#namespaces#CacheUsing	bundle/OmniCppComplete/autoload/omni/cpp/namespaces.vim	/^let g:omni#cpp#namespaces#CacheUsing = {}$/;"	v
g:omni#cpp#utils#CACHE_TAG_INHERITS	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^let g:omni#cpp#utils#CACHE_TAG_INHERITS = {}$/;"	v
g:omni#cpp#utils#szFilterGlobalScope	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^let g:omni#cpp#utils#szFilterGlobalScope .= "&& (!has_key(v:val, 'enum') || (has_key(v:val, 'enum') && v:val.enum =~ '^\\\\w\\\\+$')))"$/;"	v
g:omni#cpp#utils#szFilterGlobalScope	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^let g:omni#cpp#utils#szFilterGlobalScope = "(!has_key(v:val, 'class') && !has_key(v:val, 'struct') && !has_key(v:val, 'union') && !has_key(v:val, 'namespace')"$/;"	v
g:proj_running	bundle/project/plugin/project.vim	/^        let g:proj_running = bufnr(bufname.'\\>')$/;"	v
g:project_cscope_file	plugin/cao_yj4java.vim	/^    let g:project_cscope_file = "F:\/platform\/cscope.files"$/;"	v
g:project_cscope_file	plugin/cao_yj4java.vim	/^    let g:project_cscope_file = g:basePath . "\/cscope.files"$/;"	v
g:project_find_param	plugin/cao_yj4java.vim	/^    let g:project_find_param = ""$/;"	v
g:project_find_param	plugin/cao_yj4java.vim	/^    let g:project_find_param = "*.java"$/;"	v
g:project_find_program	plugin/cao_yj4java.vim	/^    let g:project_find_program = "dir \/NERDTreeBookmarksFileB \/S \/A-D \/ON"$/;"	v
g:project_lookup_file	plugin/cao_yj4java.vim	/^    let g:project_lookup_file = "F:\/platform\/lookup.files"$/;"	v
g:project_lookup_file	plugin/cao_yj4java.vim	/^    let g:project_lookup_file = g:basePath . "\/lookup.files"$/;"	v
g:project_tags_dir_list	plugin/cao_yj4java.vim	/^    let g:project_tags_dir_list = ["F:\/platform\/lib"]$/;"	v
g:project_tags_dir_list	plugin/cao_yj4java.vim	/^    let g:project_tags_dir_list = [g:basePath . "\/lib"]$/;"	v
g:repeat_reg	bundle/repeat.vim/autoload/repeat.vim	/^let g:repeat_reg = ['', '']$/;"	v
g:repeat_tick	bundle/repeat.vim/autoload/repeat.vim	/^let g:repeat_tick = -1$/;"	v
g:syntastic_actionscript_mxmlc_conf	bundle/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^    let g:syntastic_actionscript_mxmlc_conf = ''$/;"	v
g:syntastic_ada_compiler	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^    let g:syntastic_ada_compiler = 'gcc'$/;"	v
g:syntastic_ada_compiler_options	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^    let g:syntastic_ada_compiler_options = ''$/;"	v
g:syntastic_aggregate_errors	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_aggregate_errors = 0$/;"	v
g:syntastic_always_populate_loc_list	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_always_populate_loc_list = 0$/;"	v
g:syntastic_auto_jump	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_auto_jump = 0$/;"	v
g:syntastic_auto_loc_list	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^    let g:syntastic_auto_loc_list = 2$/;"	v
g:syntastic_c_checker_checkpatch_location	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^    let g:syntastic_c_checker_checkpatch_location = '.\/scripts\/checkpatch.pl'$/;"	v
g:syntastic_c_checker_checkpatch_location	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^    let g:syntastic_c_checker_checkpatch_location = 'checkpatch.pl'$/;"	v
g:syntastic_c_compiler	bundle/syntastic/syntax_checkers/c/gcc.vim	/^    let g:syntastic_c_compiler = executable('gcc') ? 'gcc' : 'clang'$/;"	v
g:syntastic_c_compiler_options	bundle/syntastic/syntax_checkers/c/gcc.vim	/^    let g:syntastic_c_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_check_on_open	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_check_on_open = 0$/;"	v
g:syntastic_check_on_wq	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_check_on_wq = 1$/;"	v
g:syntastic_cobol_compiler	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^    let g:syntastic_cobol_compiler = 'cobc'$/;"	v
g:syntastic_cobol_compiler_options	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^    let g:syntastic_cobol_compiler_options = ''$/;"	v
g:syntastic_cpp_compiler	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^    let g:syntastic_cpp_compiler = executable('g++') ? 'g++' : 'clang++'$/;"	v
g:syntastic_cpp_compiler_options	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^    let g:syntastic_cpp_compiler_options = ''$/;"	v
g:syntastic_cpp_cpplint_thres	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^    let g:syntastic_cpp_cpplint_thres = 5$/;"	v
g:syntastic_cppcheck_config_file	bundle/syntastic/syntax_checkers/c/cppcheck.vim	/^    let g:syntastic_cppcheck_config_file = '.syntastic_cppcheck_config'$/;"	v
g:syntastic_cppcheck_config_file	bundle/syntastic/syntax_checkers/cpp/cppcheck.vim	/^    let g:syntastic_cppcheck_config_file = '.syntastic_cppcheck_config'$/;"	v
g:syntastic_csslint_options	bundle/syntastic/syntax_checkers/css/csslint.vim	/^    let g:syntastic_csslint_options = ''$/;"	v
g:syntastic_d_compiler	bundle/syntastic/syntax_checkers/d/dmd.vim	/^    let g:syntastic_d_compiler = 'dmd'$/;"	v
g:syntastic_d_compiler_options	bundle/syntastic/syntax_checkers/d/dmd.vim	/^    let g:syntastic_d_compiler_options = ''$/;"	v
g:syntastic_debug	bundle/syntastic/autoload/syntastic/log.vim	/^    let g:syntastic_debug = 0$/;"	v
g:syntastic_echo_current_error	bundle/syntastic/plugin/syntastic/cursor.vim	/^    let g:syntastic_echo_current_error = 1$/;"	v
g:syntastic_enable_balloons	bundle/syntastic/plugin/syntastic/balloons.vim	/^    let g:syntastic_enable_balloons = 0$/;"	v
g:syntastic_enable_balloons	bundle/syntastic/plugin/syntastic/balloons.vim	/^    let g:syntastic_enable_balloons = 1$/;"	v
g:syntastic_enable_highlighting	bundle/syntastic/plugin/syntastic/highlighting.vim	/^    let g:syntastic_enable_highlighting = 1$/;"	v
g:syntastic_enable_signs	bundle/syntastic/plugin/syntastic/signs.vim	/^    let g:syntastic_enable_signs = 1$/;"	v
g:syntastic_erlc_include_path	bundle/syntastic/syntax_checkers/erlang/escript.vim	/^    let g:syntastic_erlc_include_path = ''$/;"	v
g:syntastic_error_symbol	bundle/syntastic/plugin/syntastic/signs.vim	/^    let g:syntastic_error_symbol = '>>'$/;"	v
g:syntastic_filetype_map	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_filetype_map = {}$/;"	v
g:syntastic_fortran_compiler	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^    let g:syntastic_fortran_compiler = 'gfortran'$/;"	v
g:syntastic_fortran_compiler_options	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^    let g:syntastic_fortran_compiler_options = ''$/;"	v
g:syntastic_full_redraws	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_full_redraws = !(has('gui_running') || has('gui_macvim'))$/;"	v
g:syntastic_haml_interpreter	bundle/syntastic/syntax_checkers/haml/haml.vim	/^    let g:syntastic_haml_interpreter = 'haml'$/;"	v
g:syntastic_html_jshint_conf	bundle/syntastic/syntax_checkers/html/jshint.vim	/^    let g:syntastic_html_jshint_conf = ''$/;"	v
g:syntastic_html_tidy_blocklevel_tags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_blocklevel_tags = []$/;"	v
g:syntastic_html_tidy_empty_tags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_empty_tags = []$/;"	v
g:syntastic_html_tidy_ignore_errors	bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_ignore_errors = []$/;"	v
g:syntastic_html_tidy_inline_tags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_inline_tags = []$/;"	v
g:syntastic_html_validator_api	bundle/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_api = 'http:\/\/validator.nu\/'$/;"	v
g:syntastic_html_validator_nsfilter	bundle/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_nsfilter = ''$/;"	v
g:syntastic_html_validator_parser	bundle/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_parser = ''$/;"	v
g:syntastic_html_w3_api	bundle/syntastic/syntax_checkers/html/w3.vim	/^    let g:syntastic_html_w3_api = 'http:\/\/validator.w3.org\/check'$/;"	v
g:syntastic_id_checkers	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_id_checkers = 1$/;"	v
g:syntastic_ignore_files	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_ignore_files = []$/;"	v
g:syntastic_java_checkstyle_classpath	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_classpath = 'checkstyle-5.5-all.jar'$/;"	v
g:syntastic_java_checkstyle_conf_file	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_conf_file = 'sun_checks.xml'$/;"	v
g:syntastic_java_javac_autoload_maven_classpath	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_autoload_maven_classpath = 1$/;"	v
g:syntastic_java_javac_classpath	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_classpath = ''$/;"	v
g:syntastic_java_javac_config_file	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file = '.syntastic_javac_config'$/;"	v
g:syntastic_java_javac_config_file_enabled	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file_enabled = 0$/;"	v
g:syntastic_java_javac_custom_classpath_command	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_custom_classpath_command = ''$/;"	v
g:syntastic_java_javac_delete_output	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_delete_output = 1$/;"	v
g:syntastic_java_javac_executable	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_executable = 'javac'$/;"	v
g:syntastic_java_javac_maven_pom_classpath	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_classpath = {}$/;"	v
g:syntastic_java_javac_maven_pom_ftime	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_ftime = {}$/;"	v
g:syntastic_java_javac_maven_pom_properties	bundle/syntastic/syntax_checkers/java/javac.vim	/^let g:syntastic_java_javac_maven_pom_properties = {}$/;"	v
g:syntastic_java_javac_maven_pom_tags	bundle/syntastic/syntax_checkers/java/javac.vim	/^let g:syntastic_java_javac_maven_pom_tags = ["build", "properties"]$/;"	v
g:syntastic_java_javac_options	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_options = '-Xlint'$/;"	v
g:syntastic_java_javac_temp_dir	bundle/syntastic/syntax_checkers/java/javac.vim	/^        let g:syntastic_java_javac_temp_dir = $TEMP."\\\\vim-syntastic-javac"$/;"	v
g:syntastic_java_javac_temp_dir	bundle/syntastic/syntax_checkers/java/javac.vim	/^        let g:syntastic_java_javac_temp_dir = '\/tmp\/vim-syntastic-javac'$/;"	v
g:syntastic_java_javac_temp_dir	bundle/syntastic/syntax_checkers/java/javac.vim	/^        let g:syntastic_java_javac_temp_dir = s:CygwinPath('\/tmp\/vim-syntastic-javac')$/;"	v
g:syntastic_java_maven_executable	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_maven_executable = 'mvn'$/;"	v
g:syntastic_javascript_closure_compiler_options	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^    let g:syntastic_javascript_closure_compiler_options = ""$/;"	v
g:syntastic_javascript_eslint_conf	bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^    let g:syntastic_javascript_eslint_conf = ''$/;"	v
g:syntastic_javascript_gjslint_conf	bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^    let g:syntastic_javascript_gjslint_conf = ""$/;"	v
g:syntastic_javascript_jshint_conf	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^    let g:syntastic_javascript_jshint_conf = ''$/;"	v
g:syntastic_javascript_jsl_conf	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^    let g:syntastic_javascript_jsl_conf = ""$/;"	v
g:syntastic_jshint_exec	bundle/syntastic/syntax_checkers/html/jshint.vim	/^    let g:syntastic_jshint_exec = 'jshint'$/;"	v
g:syntastic_jshint_exec	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^    let g:syntastic_jshint_exec = 'jshint'$/;"	v
g:syntastic_less_options	bundle/syntastic/syntax_checkers/less/lessc.vim	/^    let g:syntastic_less_options = ""$/;"	v
g:syntastic_less_use_less_lint	bundle/syntastic/syntax_checkers/less/lessc.vim	/^    let g:syntastic_less_use_less_lint = 0$/;"	v
g:syntastic_loc_list_height	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_loc_list_height = 10$/;"	v
g:syntastic_objc_compiler	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^    let g:syntastic_objc_compiler = executable('gcc') ? 'gcc' : 'clang'$/;"	v
g:syntastic_objc_compiler_options	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^    let g:syntastic_objc_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_objcpp_compiler	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^    let g:syntastic_objcpp_compiler = executable('gcc') ? 'gcc' : 'clang'$/;"	v
g:syntastic_objcpp_compiler_options	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^    let g:syntastic_objcpp_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_ocaml_use_ocamlbuild	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlbuild = 0$/;"	v
g:syntastic_ocaml_use_ocamlc	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlc = 0$/;"	v
g:syntastic_oclint_config_file	bundle/syntastic/syntax_checkers/c/oclint.vim	/^    let g:syntastic_oclint_config_file = '.syntastic_oclint_config'$/;"	v
g:syntastic_perl_interpreter	bundle/syntastic/syntax_checkers/perl/perl.vim	/^    let g:syntastic_perl_interpreter = 'perl'$/;"	v
g:syntastic_perl_interpreter	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^    let g:syntastic_perl_interpreter = 'perl'$/;"	v
g:syntastic_perl_lib_path	bundle/syntastic/syntax_checkers/perl/perl.vim	/^    let g:syntastic_perl_lib_path = []$/;"	v
g:syntastic_perl_lib_path	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^    let g:syntastic_perl_lib_path = []$/;"	v
g:syntastic_perl_perlcritic_thres	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^    let g:syntastic_perl_perlcritic_thres = 5$/;"	v
g:syntastic_puppet_puppetlint_args	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^    let g:syntastic_puppet_puppetlint_args = g:syntastic_puppet_lint_arguments$/;"	v
g:syntastic_quiet_messages	bundle/syntastic/plugin/syntastic.vim	/^        let g:syntastic_quiet_messages['type'] = s:quiet_warnings$/;"	v
g:syntastic_quiet_messages	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_quiet_messages = {}$/;"	v
g:syntastic_racket_code_ayatollah_script	bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^    let g:syntastic_racket_code_ayatollah_script = 'code-ayatollah.rkt'$/;"	v
g:syntastic_reuse_loc_lists	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_reuse_loc_lists = (v:version >= 704)$/;"	v
g:syntastic_ruby_exec	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^    let g:syntastic_ruby_exec = "ruby"$/;"	v
g:syntastic_ruby_exec	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^    let g:syntastic_ruby_exec = "ruby"$/;"	v
g:syntastic_sass_check_partials	bundle/syntastic/syntax_checkers/sass/sass.vim	/^    let g:syntastic_sass_check_partials = 0$/;"	v
g:syntastic_scala_options	bundle/syntastic/syntax_checkers/scala/fsc.vim	/^    let g:syntastic_scala_options = ''$/;"	v
g:syntastic_scala_options	bundle/syntastic/syntax_checkers/scala/scalac.vim	/^    let g:syntastic_scala_options = ''$/;"	v
g:syntastic_sparse_config_file	bundle/syntastic/syntax_checkers/c/sparse.vim	/^    let g:syntastic_sparse_config_file = '.syntastic_sparse_config'$/;"	v
g:syntastic_splint_config_file	bundle/syntastic/syntax_checkers/c/splint.vim	/^    let g:syntastic_splint_config_file = '.syntastic_splint_config'$/;"	v
g:syntastic_start	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_start = reltime()$/;"	v
g:syntastic_stl_format	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_stl_format = '[Syntax: line:%F (%t)]'$/;"	v
g:syntastic_style_error_symbol	bundle/syntastic/plugin/syntastic/signs.vim	/^    let g:syntastic_style_error_symbol = 'S>'$/;"	v
g:syntastic_style_warning_symbol	bundle/syntastic/plugin/syntastic/signs.vim	/^    let g:syntastic_style_warning_symbol = 'S>'$/;"	v
g:syntastic_tex_chktex_showmsgs	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^    let g:syntastic_tex_chktex_showmsgs = 1$/;"	v
g:syntastic_verilog_compiler	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^    let g:syntastic_verilog_compiler = 'verilator'$/;"	v
g:syntastic_verilog_compiler_options	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^    let g:syntastic_verilog_compiler_options = '-Wall'$/;"	v
g:syntastic_warning_symbol	bundle/syntastic/plugin/syntastic/signs.vim	/^    let g:syntastic_warning_symbol = '>>'$/;"	v
g:syntastic_xhtml_tidy_ignore_errors	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^    let g:syntastic_xhtml_tidy_ignore_errors = []$/;"	v
g:tagbar_iconchars	bundle/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['+', '-']$/;"	v
g:tagbar_iconchars	bundle/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['▶', '▼']$/;"	v
g:template_path	plugin/load_template.vim	/^		let g:template_path=$VIM.'\\vimfiles\\template\\'$/;"	v
g:template_path	plugin/load_template.vim	/^		let g:template_path='\/root\/.vim\/templates\/'$/;"	v
g:this_project_base_dir	plugin/cao_yj4java.vim	/^    let g:this_project_base_dir = "F:\/platform\/app\/cgb"$/;"	v
g:this_project_base_dir	plugin/cao_yj4java.vim	/^    let g:this_project_base_dir = g:basePath . "\/app\/cgb"$/;"	v
g:txtbrowser_version	bundle/TxtBrowser/plugin/txtbrowser.vim	/^let g:txtbrowser_version = "1.3.4"$/;"	v
g:vimrc_iswindows	plugin/load_template.vim	/^		let g:vimrc_iswindows=0$/;"	v
g:vimrc_iswindows	plugin/load_template.vim	/^		let g:vimrc_iswindows=1$/;"	v
g:vimrc_splitstr	plugin/load_template.vim	/^		let g:vimrc_splitstr='\/'$/;"	v
g:vimrc_splitstr	plugin/load_template.vim	/^		let g:vimrc_splitstr='\\'$/;"	v
genutils#AddNotifyWindowClose	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#AddNotifyWindowClose(windowTitle, functionName)$/;"	f
genutils#AddToFCShellPre	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#AddToFCShellPre(funcName)$/;"	f
genutils#AlignWordWithWordInPreviousLine	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#AlignWordWithWordInPreviousLine()$/;"	f
genutils#ArrayVarExists	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#ArrayVarExists(varName, index)$/;"	f
genutils#BinInsertSort	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#BinInsertSort(cmp, direction) range$/;"	f
genutils#BinInsertSort2	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#BinInsertSort2(start, end, cmp, direction, accessor, mover, context)$/;"	f
genutils#BinSearchForInsert	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#BinSearchForInsert(start, end, line, cmp, direction)$/;"	f
genutils#BinSearchForInsert2	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#BinSearchForInsert2(start, end, line, cmp, direction,$/;"	f
genutils#BinSearchList	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#BinSearchList(list, start, end, item, cmp)$/;"	f
genutils#CenterWordInSpace	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CenterWordInSpace()$/;"	f
genutils#CheckWindowClose	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CheckWindowClose()$/;"	f
genutils#CleanDiffOptions	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CleanDiffOptions()$/;"	f
genutils#CleanupFileName	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CleanupFileName(fileName)$/;"	f
genutils#CleanupFileName2	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CleanupFileName2(fileName, win32ProtectedChars)$/;"	f
genutils#ClearAllSigns	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#ClearAllSigns()$/;"	f
genutils#CloseWinNoEa	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CloseWinNoEa(winnr, force)$/;"	f
genutils#CloseWindow	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CloseWindow(win, force)$/;"	f
genutils#CmpByLength	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CmpByLength(line1, line2, ...)$/;"	f
genutils#CmpByLineLengthNname	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CmpByLineLengthNname(line1, line2, ...)$/;"	f
genutils#CmpByNumber	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CmpByNumber(line1, line2, ...)$/;"	f
genutils#CmpByString	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CmpByString(line1, line2, ...)$/;"	f
genutils#CmpByStringIgnoreCase	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CmpByStringIgnoreCase(line1, line2, ...)$/;"	f
genutils#CmpJavaImports	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CmpJavaImports(line1, line2, ...)$/;"	f
genutils#CommonPath	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CommonPath(path1, path2, ...)$/;"	f
genutils#CommonString	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CommonString(str1, str2)$/;"	f
genutils#CrUnProtectedCharsPattern	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CrUnProtectedCharsPattern(chars, ...)$/;"	f
genutils#CreateArgString	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CreateArgString(argList, sep, ...)$/;"	f
genutils#CurLineHasSign	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CurLineHasSign()$/;"	f
genutils#DeEscape	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#DeEscape(str)$/;"	f
genutils#DebugShowArgs	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#DebugShowArgs(...)$/;"	f
genutils#DefFCShellInstall	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#DefFCShellInstall()$/;"	f
genutils#DefFCShellUninstall	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#DefFCShellUninstall()$/;"	f
genutils#DefFileChangedShell	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#DefFileChangedShell()$/;"	f
genutils#EatChar	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#EatChar(pat)$/;"	f
genutils#Escape	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#Escape(str, chars)$/;"	f
genutils#EscapeCommand	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#EscapeCommand(cmd, args, pipe)$/;"	f
genutils#ExpandStr	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#ExpandStr(str)$/;"	f
genutils#ExtractFuncListing	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#ExtractFuncListing(funcName, hLines, tLines)$/;"	f
genutils#FindBufferForName	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#FindBufferForName(fileName)$/;"	f
genutils#FindWindowForBuffer	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#FindWindowForBuffer(bufferName, checkUnlisted)$/;"	f
genutils#GetBufNameForAu	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#GetBufNameForAu(bufName)$/;"	f
genutils#GetColPosition	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#GetColPosition(id)$/;"	f
genutils#GetLastWinnrInStack	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#GetLastWinnrInStack(dir)$/;"	f
genutils#GetLinePosition	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#GetLinePosition(id)$/;"	f
genutils#GetNextWinnrInStack	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#GetNextWinnrInStack(dir)$/;"	f
genutils#GetPersistentVar	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#GetPersistentVar(pluginName, persistentVar, default)$/;"	f
genutils#GetPreviewWinnr	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#GetPreviewWinnr()$/;"	f
genutils#GetSelectedIndex	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#GetSelectedIndex()$/;"	f
genutils#GetShellEnvType	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#GetShellEnvType()$/;"	f
genutils#GetSpacer	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#GetSpacer(width)$/;"	f
genutils#GetVimCmdOutput	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#GetVimCmdOutput(cmd)$/;"	f
genutils#IsOnlyHorizontalWindow	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#IsOnlyHorizontalWindow()$/;"	f
genutils#IsOnlyVerticalWindow	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#IsOnlyVerticalWindow()$/;"	f
genutils#IsPositionSet	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#IsPositionSet(id)$/;"	f
genutils#MakeArgumentList	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#MakeArgumentList(...)$/;"	f
genutils#MakeArgumentString	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#MakeArgumentString(...)$/;"	f
genutils#MapAppendCascaded	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#MapAppendCascaded(lhs, rhs, mapMode)$/;"	f
genutils#MarkActiveWindow	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#MarkActiveWindow()$/;"	f
genutils#MoveCurLineToWinLine	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#MoveCurLineToWinLine(n)$/;"	f
genutils#MoveCursorToLastInWinStack	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#MoveCursorToLastInWinStack(dir)$/;"	f
genutils#MoveCursorToNextInWinStack	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#MoveCursorToNextInWinStack(dir)$/;"	f
genutils#MoveCursorToWindow	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#MoveCursorToWindow(winno)$/;"	f
genutils#NumberOfWindows	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#NumberOfWindows()$/;"	f
genutils#OnMS	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#OnMS()$/;"	f
genutils#OpenWinNoEa	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#OpenWinNoEa(winOpenCmd)$/;"	f
genutils#OptClearBuffer	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#OptClearBuffer()$/;"	f
genutils#PathIsAbsolute	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#PathIsAbsolute(path)$/;"	f
genutils#PathIsFileNameOnly	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#PathIsFileNameOnly(path)$/;"	f
genutils#PromptForElement	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#PromptForElement(array, default, msg, skip, useDialog,$/;"	f
genutils#PutPersistentVar	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#PutPersistentVar(pluginName, persistentVar, value)$/;"	f
genutils#QSort	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#QSort(cmp, direction) range$/;"	f
genutils#QSort2	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#QSort2(start, end, cmp, direction, accessor, swapper, context)$/;"	f
genutils#QuoteStr	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#QuoteStr(str)$/;"	f
genutils#RelPathFromDir	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#RelPathFromDir(srcDir, tgtFile)$/;"	f
genutils#RelPathFromFile	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#RelPathFromFile(srcFile, tgtFile)$/;"	f
genutils#RemoveFromFCShellPre	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#RemoveFromFCShellPre(funcName)$/;"	f
genutils#RemoveNotifyWindowClose	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#RemoveNotifyWindowClose(windowTitle)$/;"	f
genutils#ResetHardPosition	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#ResetHardPosition(id)$/;"	f
genutils#ResetHardPositionWithContext	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#ResetHardPositionWithContext(id)$/;"	f
genutils#ResetSoftPosition	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#ResetSoftPosition(id)$/;"	f
genutils#ResetWindowSettings	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#ResetWindowSettings()$/;"	f
genutils#ResetWindowSettings2	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#ResetWindowSettings2(id)$/;"	f
genutils#RestoreActiveWindow	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#RestoreActiveWindow()$/;"	f
genutils#RestoreHardPosition	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#RestoreHardPosition(id)$/;"	f
genutils#RestoreHardPositionWithContext	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#RestoreHardPositionWithContext(id)$/;"	f
genutils#RestoreSoftPosition	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#RestoreSoftPosition(id)$/;"	f
genutils#RestoreVisualSelection	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#RestoreVisualSelection(id)$/;"	f
genutils#RestoreWindowSettings	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#RestoreWindowSettings()$/;"	f
genutils#RestoreWindowSettings2	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#RestoreWindowSettings2(id)$/;"	f
genutils#Roman2Decimal	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#Roman2Decimal(str)$/;"	f
genutils#SaveHardPosition	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#SaveHardPosition(id)$/;"	f
genutils#SaveHardPositionWithContext	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#SaveHardPositionWithContext(id)$/;"	f
genutils#SaveSoftPosition	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#SaveSoftPosition(id)$/;"	f
genutils#SaveVisualSelection	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#SaveVisualSelection(id)$/;"	f
genutils#SaveWindowSettings	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#SaveWindowSettings()$/;"	f
genutils#SaveWindowSettings2	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#SaveWindowSettings2(id, overwrite)$/;"	f
genutils#SetupScratchBuffer	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#SetupScratchBuffer()$/;"	f
genutils#ShiftWordInSpace	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#ShiftWordInSpace(dir)$/;"	f
genutils#ShowLinesWithSyntax	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#ShowLinesWithSyntax() range$/;"	f
genutils#SilentDelete	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#SilentDelete(arg1, ...)$/;"	f
genutils#SilentSubstitute	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#SilentSubstitute(pat, cmd)$/;"	f
genutils#UnEscape	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#UnEscape(str, chars)$/;"	f
genutils#UserDirComplete2	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#UserDirComplete2(ArgLead, CmdLine, CursorPos, ...)$/;"	f
genutils#UserFileComplete	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#UserFileComplete(ArgLead, CmdLine, CursorPos, smartSlash,$/;"	f
genutils#UserFileComplete2	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#UserFileComplete2(ArgLead, CmdLine, CursorPos, ...)$/;"	f
genutils#UserFileExpand	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#UserFileExpand(fileArgs)$/;"	f
getImportedClasses	plugin/libvim_javaimports.c	/^char* getImportedClasses(const char* source){$/;"	f
get_augrouplist	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_augrouplist() "{{{$/;"	f
get_buffer_include_files	bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! s:get_buffer_include_files(bufnumber) "{{{$/;"	f
get_cached_script_candidates	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_cached_script_candidates() "{{{$/;"	f
get_candidates	bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:get_candidates(complete_results, complete_pos, complete_str) "{{{$/;"	f
get_cmdlist	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_cmdlist() "{{{$/;"	f
get_complete_pos	bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:get_complete_pos(complete_results) "{{{$/;"	f
get_default_include_files	bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^function! s:get_default_include_files(filetype) "{{{$/;"	f
get_dim	bundle/vim-powerline/fontpatcher/fontpatcher	/^	def get_dim(glyph):$/;"	f
get_envlist	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_envlist() "{{{$/;"	f
get_functionlist	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_functionlist() "{{{$/;"	f
get_glob_files	bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:get_glob_files(complete_str, path) "{{{$/;"	f
get_include_files	bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^function! s:get_include_files(complete_str) "{{{$/;"	f
get_include_files	bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! s:get_include_files(nestlevel, lines, filetype, pattern, path, expr) "{{{$/;"	f
get_last_status	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:get_last_status()$/;"	f
get_local_variables	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_local_variables() "{{{$/;"	f
get_map_str	bundle/tagbar/autoload/tagbar.vim	/^function! s:get_map_str(map) abort$/;"	f
get_mappinglist	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_mappinglist() "{{{$/;"	f
get_member_list	bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^function! s:get_member_list(cur_text, var_name) "{{{$/;"	f
get_member_pattern	bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^function! s:get_member_pattern(filetype) "{{{$/;"	f
get_omni_funcs	bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:get_omni_funcs(filetype) "{{{$/;"	f
get_omni_list	bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:get_omni_list(list) "{{{$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(Dir) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["src" | Tail], _Path) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["test" | Tail], _Path) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([], Path) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([_ | Tail], Path) ->$/;"	f
get_script_candidates	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_script_candidates(bufnumber) "{{{$/;"	f
get_sources_list	bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:get_sources_list() "{{{$/;"	f
get_sources_list	bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^function! s:get_sources_list() "{{{$/;"	f
get_variable_type	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_variable_type(expression) "{{{$/;"	f
get_variablelist	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_variablelist(dict, prefix) "{{{$/;"	f
getchar	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:getchar(...)$/;"	f
getchar	bundle/vim-surround/plugin/surround.vim	/^function! s:getchar()$/;"	f
getchar_safe	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:getchar_safe(...)$/;"	f
getfilename	bundle/neocomplcache.vim/autoload/vital/_13055f8/System/Cache.vim	/^function! s:getfilename(cache_dir, filename)$/;"	f
glob	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^  function! s:glob(expr)$/;"	f
globpath	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:globpath(path, expr)$/;"	f
gnp	plugin/cao_yj4java.vim	/^map gnp :%s\/_filename_\/\\=bufname("%")\/<CR>:%s\/_datetime_\/\\=strftime("%c")\/<CR>:%s\/_classname_\/\\=split(bufname("%"),'.java')[0]\/<CR>:%s\/_package_\/\\='org.hisun.test'\/<CR> $/;"	m
goto_markedwin	bundle/tagbar/autoload/tagbar.vim	/^function! s:goto_markedwin() abort$/;"	f
goto_tagbar	bundle/tagbar/autoload/tagbar.vim	/^function! s:goto_tagbar(...) abort$/;"	f
goto_win	bundle/tagbar/autoload/tagbar.vim	/^function! s:goto_win(winnr, ...) abort$/;"	f
grey_colour	colors/Tomorrow-Night-Bright.vim	/^	fun <SID>grey_colour(n)$/;"	f
grey_colour	colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>grey_colour(n)$/;"	f
grey_colour	colors/Tomorrow-Night.vim	/^	fun <SID>grey_colour(n)$/;"	f
grey_level	colors/Tomorrow-Night-Bright.vim	/^	fun <SID>grey_level(n)$/;"	f
grey_level	colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>grey_level(n)$/;"	f
grey_level	colors/Tomorrow-Night.vim	/^	fun <SID>grey_level(n)$/;"	f
grey_number	colors/Tomorrow-Night-Bright.vim	/^	fun <SID>grey_number(x)$/;"	f
grey_number	colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>grey_number(x)$/;"	f
grey_number	colors/Tomorrow-Night.vim	/^	fun <SID>grey_number(x)$/;"	f
gsg	plugin/cao_yj4java.vim	/^map gsg 0f;dw"ad0wwviw"bxwviw"cx0da "apapublic void set"cpb3~$a(final "bpa "cpa) { this."cpa = "cpa; }public "bpa get"cpb3~$a() { return "cpa; }0 $/;"	m
handleLeftClick	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:handleLeftClick()$/;"	f
handleMiddleMouse	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:handleMiddleMouse()$/;"	f
has	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:has(list, value)$/;"	f
has_common_items	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:has_common_items(list1, list2)$/;"	f
has_doc	bundle/vundle/autoload/vundle/installer.vim	/^func! s:has_doc(rtp) abort$/;"	f
has_index	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:has_index(list, index)$/;"	f
has_vimproc	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:has_vimproc()$/;"	f
head_filter	bundle/neocomplcache.vim/autoload/neocomplcache/filters.vim	/^function! s:head_filter(list, complete_str) "{{{$/;"	f
help	bundle/project/plugin/project.vim	/^        cnoremap <buffer> help let g:proj_doinghelp = 1<CR>:help$/;"	m
helptags	bundle/vundle/autoload/vundle/installer.vim	/^func! s:helptags(rtp) abort$/;"	f
home	bundle/project/plugin/project.vim	/^                let home=s:GetHome(info, '')$/;"	v
iconv	bundle/neocomplcache.vim/autoload/neocomplcache/async_cache.vim	/^function! s:iconv(expr, from, to)$/;"	f
iconv	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:iconv(expr, from, to)$/;"	f
import	bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^function! s:import(name, ...)$/;"	f
info	bundle/project/plugin/project.vim	/^                let info=s:RecursivelyConstructDirectives(line('.'))$/;"	v
init	bundle/vundle/test/files/test.erl	/^init(_) ->$/;"	f	module:mmc_logmon_sup
initVariable	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
init_var	bundle/tagbar/plugin/tagbar.vim	/^function! s:init_var(var, value) abort$/;"	f
initialize_include	bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! s:initialize_include(filename, filetype) "{{{$/;"	f
initialize_source	bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:initialize_source(srcname) "{{{$/;"	f
initialize_source	bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^function! s:initialize_source(srcname) "{{{$/;"	f
initialize_tags	bundle/neocomplcache.vim/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:initialize_tags(filename) "{{{$/;"	f
initialize_variables	bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! s:initialize_variables() "{{{$/;"	f
input_helper	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:input_helper(funcname, args)$/;"	f
input_safe	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:input_safe(...)$/;"	f
inputreplacement	bundle/vim-surround/plugin/surround.vim	/^function! s:inputreplacement()$/;"	f
inputtarget	bundle/vim-surround/plugin/surround.vim	/^function! s:inputtarget()$/;"	f
insert	bundle/vim-surround/plugin/surround.vim	/^function! s:insert(...) " {{{1$/;"	f
isDebugEnabled_dumb	bundle/syntastic/autoload/syntastic/log.vim	/^function! s:isDebugEnabled_dumb(level)$/;"	f
isDebugEnabled_smart	bundle/syntastic/autoload/syntastic/log.vim	/^function! s:isDebugEnabled_smart(level)$/;"	f
is_cygwin	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_cygwin()$/;"	f
is_dict	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_dict(Value)$/;"	f
is_float	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_float(Value)$/;"	f
is_funcref	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_funcref(Value)$/;"	f
is_integer	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_integer(Value)$/;"	f
is_list	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_list(Value)$/;"	f
is_mac	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_mac()$/;"	f
is_number	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_number(Value)$/;"	f
is_numeric	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_numeric(Value)$/;"	f
is_skip_auto_complete	bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^function! s:is_skip_auto_complete(cur_text) "{{{$/;"	f
is_string	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_string(Value)$/;"	f
is_unix	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_unix()$/;"	f
is_windows	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_windows()$/;"	f
java_highlight_all	bundle/cSyntaxAfter/after/syntax/java.vim	/^  let java_highlight_all=1$/;"	v
java_highlight_all	syntax/java.vim	/^  let java_highlight_all=1$/;"	v
java_minlines	bundle/cSyntaxAfter/after/syntax/java.vim	/^  let java_minlines = 10$/;"	v
java_minlines	syntax/java.vim	/^  let java_minlines = 10$/;"	v
jumpToFirstChild	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:jumpToFirstChild(node)$/;"	f
jumpToLastChild	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:jumpToLastChild(node)$/;"	f
jumpToNextSibling	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:jumpToNextSibling(node)$/;"	f
jumpToParent	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:jumpToParent(node)$/;"	f
jumpToPrevSibling	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:jumpToPrevSibling(node)$/;"	f
jumpToRoot	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:jumpToRoot()$/;"	f
k	bundle/project/plugin/project.vim	/^            let k=k+1$/;"	v
k	bundle/project/plugin/project.vim	/^        let k=1$/;"	v
keyword_escape	bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! s:keyword_escape(complete_str) "{{{$/;"	f
known_files.get	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.get(fname) abort dict$/;"	f
known_files.getCurrent	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.getCurrent(forcecurrent) abort dict$/;"	f
known_files.has	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.has(fname) abort dict$/;"	f
known_files.put	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.put(fileinfo, ...) abort dict$/;"	f
known_files.rm	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.rm(fname) abort dict$/;"	f
known_files.setCurrent	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.setCurrent(fileinfo) abort dict$/;"	f
known_files.setPaused	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.setPaused() abort dict$/;"	f
load	bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^function! s:load(...) dict$/;"	f
load_from_file	bundle/neocomplcache.vim/autoload/neocomplcache/async_cache.vim	/^function! s:load_from_file(filename, pattern_file_name, mark, minlen, maxfilename, fileencoding, is_string) "{{{$/;"	f
load_from_tags	bundle/neocomplcache.vim/autoload/neocomplcache/async_cache.vim	/^function! s:load_from_tags(filename, pattern_file_name, mark, minlen, maxfilename, fileencoding) "{{{$/;"	f
load_scripts	bundle/vundle/autoload/vundle/scripts.vim	/^func! s:load_scripts(bang)$/;"	f
loaded_alternateFile	bundle/a.vim/plugin/a.vim	/^let loaded_alternateFile = 1$/;"	v
loaded_genutils	bundle/genutils-2.5/plugin/genutils.vim	/^let loaded_genutils = 205$/;"	v
loaded_nerd_comments	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^let loaded_nerd_comments = 1$/;"	v
loaded_nerd_tree	bundle/nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loaded_project	bundle/project/plugin/project.vim	/^let loaded_project=1$/;"	v
loaded_snips	bundle/snipmate.vim/plugin/snipMate.vim	/^let loaded_snips = 1$/;"	v
loaded_srcexpl	bundle/SrcExpl/plugin/srcexpl.vim	/^let loaded_srcexpl = 1$/;"	v
loaded_taglist	bundle/TxtBrowser/ftplugin/txt.vim	/^	let loaded_taglist = 'no'$/;"	v
loaded_taglist	bundle/taglist.vim/plugin/taglist.vim	/^            let loaded_taglist = 'no'$/;"	v
loaded_taglist	bundle/taglist.vim/plugin/taglist.vim	/^        let loaded_taglist = 'no'$/;"	v
loaded_taglist	bundle/taglist.vim/plugin/taglist.vim	/^    let loaded_taglist = 'fast_load_done'$/;"	v
loaded_taglist	bundle/taglist.vim/plugin/taglist.vim	/^let loaded_taglist = 'available'$/;"	v
log	bundle/vundle/autoload/vundle/installer.vim	/^func! s:log(str) abort$/;"	f
logRedirect	bundle/syntastic/autoload/syntastic/log.vim	/^function! s:logRedirect(on)$/;"	f
logTimestamp_dumb	bundle/syntastic/autoload/syntastic/log.vim	/^function! s:logTimestamp_dumb()$/;"	f
logTimestamp_smart	bundle/syntastic/autoload/syntastic/log.vim	/^function! s:logTimestamp_smart()$/;"	f
lookupfile#AcceptFile	bundle/lookupfile1_8/autoload/lookupfile.vim	/^function! lookupfile#AcceptFile(splitWin, key)$/;"	f
lookupfile#ClearCache	bundle/lookupfile1_8/autoload/lookupfile.vim	/^function! lookupfile#ClearCache()$/;"	f
lookupfile#CloseWindow	bundle/lookupfile1_8/autoload/lookupfile.vim	/^function! lookupfile#CloseWindow()$/;"	f
lookupfile#Complete	bundle/lookupfile1_8/autoload/lookupfile.vim	/^function! lookupfile#Complete(findstart, base)$/;"	f
lookupfile#ExpandCamelCase	bundle/lookupfile1_8/autoload/lookupfile.vim	/^function! lookupfile#ExpandCamelCase(str)$/;"	f
lookupfile#IsPopupHidden	bundle/lookupfile1_8/autoload/lookupfile.vim	/^function! lookupfile#IsPopupHidden()$/;"	f
lookupfile#LookupFile	bundle/lookupfile1_8/autoload/lookupfile.vim	/^function! lookupfile#LookupFile(showingFiller, ...)$/;"	f
lookupfile#OpenWindow	bundle/lookupfile1_8/autoload/lookupfile.vim	/^function! lookupfile#OpenWindow(bang, initPat)$/;"	f
m_auto_ptr	templates/cpp/singleton.h	/^		static auto_ptr<CClass> m_auto_ptr;$/;"	m	class:CClass
m_ins	templates/cpp/singleton.h	/^		static CClass * m_ins;$/;"	m	class:CClass
main	bundle/neocomplcache.vim/autoload/neocomplcache/async_cache.vim	/^function! s:main(argv) "{{{$/;"	f
main	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main([FileName | LibDirs]) ->$/;"	f
main	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main([FileName | ["-rebar" | [Path | LibDirs]]]) ->$/;"	f
main	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main([FileName]) ->$/;"	f
main	templates/cpp/main.cpp	/^int main(int argc,char* argv[])$/;"	f
main_syntax	bundle/cSyntaxAfter/after/syntax/html.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	bundle/cSyntaxAfter/after/syntax/java.vim	/^  let main_syntax='java'$/;"	v
main_syntax	syntax/html.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	syntax/java.vim	/^  let main_syntax='java'$/;"	v
make_completion_list	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:make_completion_list(list, kind) "{{{$/;"	f
mark#ClearAll	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#ClearAll()$/;"	f
mark#Complete	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#Complete( ArgLead, CmdLine, CursorPos )$/;"	f
mark#CurrentMark	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#CurrentMark()$/;"	f
mark#DoMark	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#DoMark( groupNum, ...)$/;"	f
mark#DoMarkAndSetCurrent	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#DoMarkAndSetCurrent( groupNum, ... )$/;"	f
mark#GetGroupNum	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#GetGroupNum()$/;"	f
mark#GetNum	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#GetNum()$/;"	f
mark#GetPattern	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#GetPattern( ... )$/;"	f
mark#GetVisualSelection	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#GetVisualSelection()$/;"	f
mark#GetVisualSelectionAsLiteralPattern	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#GetVisualSelectionAsLiteralPattern()$/;"	f
mark#GetVisualSelectionAsRegexp	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#GetVisualSelectionAsRegexp()$/;"	f
mark#Init	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#Init()$/;"	f
mark#List	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#List()$/;"	f
mark#Load	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#Load( pattern, enabled )$/;"	f
mark#LoadCommand	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#LoadCommand( isShowMessages, ... )$/;"	f
mark#MarkCurrentWord	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#MarkCurrentWord( groupNum )$/;"	f
mark#MarkRegex	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#MarkRegex( groupNum, regexpPreset )$/;"	f
mark#MarksVariablesComplete	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#MarksVariablesComplete( ArgLead, CmdLine, CursorPos )$/;"	f
mark#QueryMarkGroupNum	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#QueryMarkGroupNum()$/;"	f
mark#ReInit	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#ReInit( newMarkNum )$/;"	f
mark#SaveCommand	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#SaveCommand( ... )$/;"	f
mark#SearchAnyMark	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#SearchAnyMark( isBackward )$/;"	f
mark#SearchCurrentMark	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#SearchCurrentMark( isBackward )$/;"	f
mark#SearchGroupMark	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#SearchGroupMark( groupNum, count, isBackward, isSetLastSearch )$/;"	f
mark#SearchNext	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#SearchNext( isBackward, ... )$/;"	f
mark#ToPatternList	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#ToPatternList()$/;"	f
mark#Toggle	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#Toggle()$/;"	f
mark#UpdateMark	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#UpdateMark()$/;"	f
mark#UpdateScope	bundle/Mark--Karkat/autoload/mark.vim	/^function! mark#UpdateScope()$/;"	f
mark#palettes#Extended	bundle/Mark--Karkat/autoload/mark/palettes.vim	/^function! mark#palettes#Extended()$/;"	f
mark#palettes#Maximum	bundle/Mark--Karkat/autoload/mark/palettes.vim	/^function! mark#palettes#Maximum()$/;"	f
mark_window	bundle/tagbar/autoload/tagbar.vim	/^function! s:mark_window() abort$/;"	f
match_pair	bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:match_pair(string, start_pattern, end_pattern, start_cnt) "{{{$/;"	f
match_wildcard	bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! s:match_wildcard(cur_text, pattern, complete_pos) "{{{$/;"	f
matcher.filter	bundle/neocomplcache.vim/autoload/neocomplcache/filters/matcher_fuzzy.vim	/^function! s:matcher.filter(context) "{{{$/;"	f
matcher.filter	bundle/neocomplcache.vim/autoload/neocomplcache/filters/matcher_head.vim	/^function! s:matcher.filter(context) "{{{$/;"	f
matcher.filter	bundle/neocomplcache.vim/autoload/neocomplcache/filters/matcher_old.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
max	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:max(list, expr)$/;"	f
max_by	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:max_by(list, expr)$/;"	f
min	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:min(list, expr)$/;"	f
min_by	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:min_by(list, expr)$/;"	f
mmc_logmon_sup	bundle/vundle/test/files/test.erl	/^-module(mmc_logmon_sup).$/;"	m
neocomplcache	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^  augroup neocomplcache$/;"	a
neocomplcache#add_dictionaries	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#add_dictionaries(dictionaries) "{{{$/;"	f
neocomplcache#async_cache#main	bundle/neocomplcache.vim/autoload/neocomplcache/async_cache.vim	/^  function! neocomplcache#async_cache#main(argv) "{{{$/;"	f
neocomplcache#available_sources	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#available_sources() "{{{$/;"	f
neocomplcache#cache#async_load_from_file	bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#async_load_from_file(cache_dir, filename, pattern, mark) "{{{$/;"	f
neocomplcache#cache#async_load_from_tags	bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#async_load_from_tags(cache_dir, filename, filetype, mark, is_create_tags) "{{{$/;"	f
neocomplcache#cache#check_cache	bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#check_cache(cache_dir, key, async_cache_dictionary, keyword_list_dictionary, ...) "{{{$/;"	f
neocomplcache#cache#check_cache_list	bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#check_cache_list(cache_dir, key, async_cache_dictionary, index_keyword_list, ...) "{{{$/;"	f
neocomplcache#cache#check_old_cache	bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#check_old_cache(cache_dir, filename) "{{{$/;"	f
neocomplcache#cache#encode_name	bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#encode_name(cache_dir, filename)$/;"	f
neocomplcache#cache#filereadable	bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#filereadable(cache_dir, filename) "{{{$/;"	f
neocomplcache#cache#getfilename	bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#getfilename(cache_dir, filename) "{{{$/;"	f
neocomplcache#cache#index_load_from_cache	bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#index_load_from_cache(cache_dir, filename, ...) "{{{$/;"	f
neocomplcache#cache#list2index	bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#list2index(list, dictionary, is_string) "{{{$/;"	f
neocomplcache#cache#load_from_cache	bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#load_from_cache(cache_dir, filename, ...) "{{{$/;"	f
neocomplcache#cache#readfile	bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#readfile(cache_dir, filename) "{{{$/;"	f
neocomplcache#cache#save_cache	bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#save_cache(cache_dir, filename, keyword_list) "{{{$/;"	f
neocomplcache#cache#save_cache_old	bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#save_cache_old(cache_dir, filename, keyword_list) "{{{$/;"	f
neocomplcache#cache#writefile	bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#writefile(cache_dir, filename, list) "{{{$/;"	f
neocomplcache#cancel_popup	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#cancel_popup()$/;"	f
neocomplcache#check_completion_length_match	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#check_completion_length_match(complete_str, completion_length) "{{{$/;"	f
neocomplcache#check_invalid_omnifunc	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#check_invalid_omnifunc(omnifunc) "{{{$/;"	f
neocomplcache#check_match_filter	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#check_match_filter(complete_str) "{{{$/;"	f
neocomplcache#close_popup	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#close_popup()$/;"	f
neocomplcache#commands#_clean	bundle/neocomplcache.vim/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_clean() "{{{$/;"	f
neocomplcache#commands#_initialize	bundle/neocomplcache.vim/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_initialize() "{{{$/;"	f
neocomplcache#commands#_lock	bundle/neocomplcache.vim/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_lock() "{{{$/;"	f
neocomplcache#commands#_lock_source	bundle/neocomplcache.vim/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_lock_source(source_name) "{{{$/;"	f
neocomplcache#commands#_set_file_type	bundle/neocomplcache.vim/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_set_file_type(filetype) "{{{$/;"	f
neocomplcache#commands#_toggle_lock	bundle/neocomplcache.vim/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_toggle_lock() "{{{$/;"	f
neocomplcache#commands#_unlock	bundle/neocomplcache.vim/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_unlock() "{{{$/;"	f
neocomplcache#commands#_unlock_source	bundle/neocomplcache.vim/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_unlock_source(source_name) "{{{$/;"	f
neocomplcache#complete#_get_complete_pos	bundle/neocomplcache.vim/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#_get_complete_pos(sources) "{{{$/;"	f
neocomplcache#complete#_get_results	bundle/neocomplcache.vim/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#_get_results(cur_text, ...) "{{{$/;"	f
neocomplcache#complete#_get_words	bundle/neocomplcache.vim/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#_get_words(sources, complete_pos, complete_str) "{{{$/;"	f
neocomplcache#complete#_set_results_pos	bundle/neocomplcache.vim/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#_set_results_pos(cur_text, ...) "{{{$/;"	f
neocomplcache#complete#_set_results_words	bundle/neocomplcache.vim/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#_set_results_words(sources) "{{{$/;"	f
neocomplcache#complete#auto_complete	bundle/neocomplcache.vim/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#auto_complete(findstart, base) "{{{$/;"	f
neocomplcache#complete#manual_complete	bundle/neocomplcache.vim/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#manual_complete(findstart, base) "{{{$/;"	f
neocomplcache#complete#sources_manual_complete	bundle/neocomplcache.vim/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#sources_manual_complete(findstart, base) "{{{$/;"	f
neocomplcache#complete#unite_complete	bundle/neocomplcache.vim/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#unite_complete(findstart, base) "{{{$/;"	f
neocomplcache#complete_check	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#complete_check() "{{{$/;"	f
neocomplcache#complete_common_string	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#complete_common_string()$/;"	f
neocomplcache#context_filetype#get	bundle/neocomplcache.vim/autoload/neocomplcache/context_filetype.vim	/^function! neocomplcache#context_filetype#get(filetype) "{{{$/;"	f
neocomplcache#context_filetype#initialize	bundle/neocomplcache.vim/autoload/neocomplcache/context_filetype.vim	/^function! neocomplcache#context_filetype#initialize() "{{{$/;"	f
neocomplcache#context_filetype#set	bundle/neocomplcache.vim/autoload/neocomplcache/context_filetype.vim	/^function! neocomplcache#context_filetype#set() "{{{$/;"	f
neocomplcache#custom_source	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#custom_source(source_name, option_name, value) "{{{$/;"	f
neocomplcache#define_filter	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#define_filter(filter) "{{{$/;"	f
neocomplcache#define_source	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#define_source(source) "{{{$/;"	f
neocomplcache#dictionary_filter	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#dictionary_filter(dictionary, complete_str) "{{{$/;"	f
neocomplcache#disable_default_dictionary	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#disable_default_dictionary(variable) "{{{$/;"	f
neocomplcache#dup_filter	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#dup_filter(list) "{{{$/;"	f
neocomplcache#escape_match	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#escape_match(str) "{{{$/;"	f
neocomplcache#exists_echodoc	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#exists_echodoc() "{{{$/;"	f
neocomplcache#filetype_complete	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#filetype_complete(arglead, cmdline, cursorpos) "{{{$/;"	f
neocomplcache#filters#converter_abbr#define	bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_abbr.vim	/^function! neocomplcache#filters#converter_abbr#define() "{{{$/;"	f
neocomplcache#filters#converter_case#define	bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_case.vim	/^function! neocomplcache#filters#converter_case#define() "{{{$/;"	f
neocomplcache#filters#converter_delimiter#define	bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_delimiter.vim	/^function! neocomplcache#filters#converter_delimiter#define() "{{{$/;"	f
neocomplcache#filters#converter_nothing#define	bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_nothing.vim	/^function! neocomplcache#filters#converter_nothing#define() "{{{$/;"	f
neocomplcache#filters#converter_remove_next_keyword#define	bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_remove_next_keyword.vim	/^function! neocomplcache#filters#converter_remove_next_keyword#define() "{{{$/;"	f
neocomplcache#filters#converter_remove_next_keyword#get_next_keyword	bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_remove_next_keyword.vim	/^function! neocomplcache#filters#converter_remove_next_keyword#get_next_keyword(source_name) "{{{$/;"	f
neocomplcache#filters#dictionary_filter	bundle/neocomplcache.vim/autoload/neocomplcache/filters.vim	/^function! neocomplcache#filters#dictionary_filter(dictionary, complete_str) "{{{$/;"	f
neocomplcache#filters#keyword_filter	bundle/neocomplcache.vim/autoload/neocomplcache/filters.vim	/^function! neocomplcache#filters#keyword_filter(list, complete_str) "{{{$/;"	f
neocomplcache#filters#matcher_fuzzy#define	bundle/neocomplcache.vim/autoload/neocomplcache/filters/matcher_fuzzy.vim	/^function! neocomplcache#filters#matcher_fuzzy#define() "{{{$/;"	f
neocomplcache#filters#matcher_head#define	bundle/neocomplcache.vim/autoload/neocomplcache/filters/matcher_head.vim	/^function! neocomplcache#filters#matcher_head#define() "{{{$/;"	f
neocomplcache#filters#matcher_old#define	bundle/neocomplcache.vim/autoload/neocomplcache/filters/matcher_old.vim	/^function! neocomplcache#filters#matcher_old#define() "{{{$/;"	f
neocomplcache#filters#sorter_length#define	bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_length.vim	/^function! neocomplcache#filters#sorter_length#define() "{{{$/;"	f
neocomplcache#filters#sorter_nothing#define	bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_nothing.vim	/^function! neocomplcache#filters#sorter_nothing#define() "{{{$/;"	f
neocomplcache#filters#sorter_rank#define	bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_rank.vim	/^function! neocomplcache#filters#sorter_rank#define() "{{{$/;"	f
neocomplcache#get_completion_length	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_completion_length(source_name) "{{{$/;"	f
neocomplcache#get_context	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_context() "{{{$/;"	f
neocomplcache#get_context_filetype	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_context_filetype(...) "{{{$/;"	f
neocomplcache#get_context_filetype_range	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_context_filetype_range(...) "{{{$/;"	f
neocomplcache#get_cur_text	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_cur_text(...) "{{{$/;"	f
neocomplcache#get_current_neocomplcache	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_current_neocomplcache() "{{{$/;"	f
neocomplcache#get_keyword_pattern	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_keyword_pattern(...) "{{{$/;"	f
neocomplcache#get_keyword_pattern_end	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_keyword_pattern_end(...) "{{{$/;"	f
neocomplcache#get_next_keyword	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_next_keyword() "{{{$/;"	f
neocomplcache#get_next_keyword_pattern	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_next_keyword_pattern(...) "{{{$/;"	f
neocomplcache#get_source_filetypes	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_source_filetypes(filetype) "{{{$/;"	f
neocomplcache#get_sources_list	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_sources_list(dictionary, filetype) "{{{$/;"	f
neocomplcache#get_temporary_directory	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#get_temporary_directory() "{{{$/;"	f
neocomplcache#handler#_change_update_time	bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_change_update_time() "{{{$/;"	f
neocomplcache#handler#_do_auto_complete	bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_do_auto_complete(event) "{{{$/;"	f
neocomplcache#handler#_on_complete_done	bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_on_complete_done() "{{{$/;"	f
neocomplcache#handler#_on_insert_enter	bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_on_insert_enter() "{{{$/;"	f
neocomplcache#handler#_on_insert_leave	bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_on_insert_leave() "{{{$/;"	f
neocomplcache#handler#_on_moved_i	bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_on_moved_i() "{{{$/;"	f
neocomplcache#handler#_on_write_post	bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_on_write_post() "{{{$/;"	f
neocomplcache#handler#_restore_update_time	bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_restore_update_time() "{{{$/;"	f
neocomplcache#has_vimproc	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#has_vimproc() "{{{$/;"	f
neocomplcache#head_match	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#head_match(checkstr, headstr) "{{{$/;"	f
neocomplcache#helper#call_filters	bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#call_filters(filters, source, context) "{{{$/;"	f
neocomplcache#helper#call_hook	bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#call_hook(sources, hook_name, context) "{{{$/;"	f
neocomplcache#helper#clear_result	bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#clear_result() "{{{$/;"	f
neocomplcache#helper#complete_check	bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#complete_check() "{{{$/;"	f
neocomplcache#helper#filetype_complete	bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#filetype_complete(arglead, cmdline, cursorpos) "{{{$/;"	f
neocomplcache#helper#ftdictionary2list	bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#ftdictionary2list(dictionary, filetype) "{{{$/;"	f
neocomplcache#helper#get_completion_length	bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#get_completion_length(plugin_name) "{{{$/;"	f
neocomplcache#helper#get_cur_text	bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#get_cur_text() "{{{$/;"	f
neocomplcache#helper#get_source_filetypes	bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#get_source_filetypes(filetype) "{{{$/;"	f
neocomplcache#helper#get_sources_list	bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#get_sources_list(...) "{{{$/;"	f
neocomplcache#helper#get_syn_name	bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#get_syn_name(is_trans) "{{{$/;"	f
neocomplcache#helper#is_enabled_source	bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#is_enabled_source(source_name) "{{{$/;"	f
neocomplcache#helper#is_omni_complete	bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#is_omni_complete(cur_text) "{{{$/;"	f
neocomplcache#helper#keyword_escape	bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#keyword_escape(complete_str) "{{{$/;"	f
neocomplcache#helper#match_word	bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#match_word(cur_text, ...) "{{{$/;"	f
neocomplcache#helper#unite_patterns	bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#unite_patterns(pattern_var, filetype) "{{{$/;"	f
neocomplcache#init#_autocmds	bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_autocmds() "{{{$/;"	f
neocomplcache#init#_current_neocomplcache	bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_current_neocomplcache() "{{{$/;"	f
neocomplcache#init#_filter	bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_filter(filter) "{{{$/;"	f
neocomplcache#init#_filters	bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_filters(names) "{{{$/;"	f
neocomplcache#init#_others	bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_others() "{{{$/;"	f
neocomplcache#init#_source	bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_source(source) "{{{$/;"	f
neocomplcache#init#_sources	bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_sources(names) "{{{$/;"	f
neocomplcache#init#_variables	bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_variables() "{{{$/;"	f
neocomplcache#init#disable	bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#disable() "{{{$/;"	f
neocomplcache#init#enable	bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#enable() "{{{$/;"	f
neocomplcache#init#is_enabled	bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#is_enabled() "{{{$/;"	f
neocomplcache#init#lazy	bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#lazy() "{{{$/;"	f
neocomplcache#initialize	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#initialize() "{{{$/;"	f
neocomplcache#is_auto_complete	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_auto_complete() "{{{$/;"	f
neocomplcache#is_auto_select	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_auto_select() "{{{$/;"	f
neocomplcache#is_disabled_source	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_disabled_source(source_name) "{{{$/;"	f
neocomplcache#is_enabled	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_enabled() "{{{$/;"	f
neocomplcache#is_enabled_source	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_enabled_source(source_name) "{{{$/;"	f
neocomplcache#is_eskk_convertion	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_eskk_convertion(cur_text) "{{{$/;"	f
neocomplcache#is_eskk_enabled	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_eskk_enabled() "{{{$/;"	f
neocomplcache#is_locked	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_locked(...) "{{{$/;"	f
neocomplcache#is_multibyte_input	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_multibyte_input(cur_text) "{{{$/;"	f
neocomplcache#is_plugin_locked	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_plugin_locked(source_name) "{{{$/;"	f
neocomplcache#is_prefetch	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_prefetch() "{{{$/;"	f
neocomplcache#is_sources_complete	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_sources_complete() "{{{$/;"	f
neocomplcache#is_text_mode	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_text_mode() "{{{$/;"	f
neocomplcache#is_win	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_win() "{{{$/;"	f
neocomplcache#is_windows	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#is_windows() "{{{$/;"	f
neocomplcache#keyword_escape	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#keyword_escape(complete_str) "{{{$/;"	f
neocomplcache#keyword_filter	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#keyword_filter(list, complete_str) "{{{$/;"	f
neocomplcache#mappings#cancel_popup	bundle/neocomplcache.vim/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#cancel_popup() "{{{$/;"	f
neocomplcache#mappings#close_popup	bundle/neocomplcache.vim/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#close_popup() "{{{$/;"	f
neocomplcache#mappings#complete_common_string	bundle/neocomplcache.vim/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#complete_common_string() "{{{$/;"	f
neocomplcache#mappings#define_default_mappings	bundle/neocomplcache.vim/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#define_default_mappings() "{{{$/;"	f
neocomplcache#mappings#popup_post	bundle/neocomplcache.vim/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#popup_post() "{{{$/;"	f
neocomplcache#mappings#smart_close_popup	bundle/neocomplcache.vim/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#smart_close_popup() "{{{$/;"	f
neocomplcache#mappings#start_manual_complete	bundle/neocomplcache.vim/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#start_manual_complete(...) "{{{$/;"	f
neocomplcache#mappings#start_manual_complete_list	bundle/neocomplcache.vim/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#start_manual_complete_list(complete_pos, complete_str, candidates) "{{{$/;"	f
neocomplcache#mappings#undo_completion	bundle/neocomplcache.vim/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#undo_completion() "{{{$/;"	f
neocomplcache#match_word	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#match_word(...) "{{{$/;"	f
neocomplcache#pack_dictionary	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#pack_dictionary(list) "{{{$/;"	f
neocomplcache#print_caching	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#print_caching(string) "{{{$/;"	f
neocomplcache#print_debug	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#print_debug(expr) "{{{$/;"	f
neocomplcache#print_error	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#print_error(string) "{{{$/;"	f
neocomplcache#print_warning	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#print_warning(string) "{{{$/;"	f
neocomplcache#set_completion_length	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#set_completion_length(source_name, length) "{{{$/;"	f
neocomplcache#set_dictionary_helper	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#set_dictionary_helper(variable, keys, value) "{{{$/;"	f
neocomplcache#skip_next_complete	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#skip_next_complete() "{{{$/;"	f
neocomplcache#smart_close_popup	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#smart_close_popup()$/;"	f
neocomplcache#sources#buffer_complete#caching_buffer	bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#caching_buffer(name) "{{{$/;"	f
neocomplcache#sources#buffer_complete#caching_current_block	bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#caching_current_block() "{{{$/;"	f
neocomplcache#sources#buffer_complete#caching_current_line	bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#caching_current_line() "{{{$/;"	f
neocomplcache#sources#buffer_complete#define	bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#define() "{{{$/;"	f
neocomplcache#sources#buffer_complete#disable_caching	bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#disable_caching(name) "{{{$/;"	f
neocomplcache#sources#buffer_complete#enable_caching	bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#enable_caching(name) "{{{$/;"	f
neocomplcache#sources#buffer_complete#get_frequencies	bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#get_frequencies() "{{{$/;"	f
neocomplcache#sources#buffer_complete#output_keyword	bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#output_keyword(name) "{{{$/;"	f
neocomplcache#sources#buffer_complete#print_source	bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#print_source(name) "{{{$/;"	f
neocomplcache#sources#dictionary_complete#define	bundle/neocomplcache.vim/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! neocomplcache#sources#dictionary_complete#define() "{{{$/;"	f
neocomplcache#sources#dictionary_complete#recaching	bundle/neocomplcache.vim/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! neocomplcache#sources#dictionary_complete#recaching(filetype) "{{{$/;"	f
neocomplcache#sources#filename_complete#define	bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_complete.vim	/^function! neocomplcache#sources#filename_complete#define() "{{{$/;"	f
neocomplcache#sources#filename_complete#get_complete_words	bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_complete.vim	/^function! neocomplcache#sources#filename_complete#get_complete_words(complete_str, path) "{{{$/;"	f
neocomplcache#sources#filename_include#define	bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^function! neocomplcache#sources#filename_include#define() "{{{$/;"	f
neocomplcache#sources#include_complete#analyze_ruby_include_files	bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#analyze_ruby_include_files(lines, path) "{{{$/;"	f
neocomplcache#sources#include_complete#analyze_vim_include_files	bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#analyze_vim_include_files(lines, path) "{{{$/;"	f
neocomplcache#sources#include_complete#caching_include	bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#caching_include(bufname) "{{{$/;"	f
neocomplcache#sources#include_complete#define	bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#define() "{{{$/;"	f
neocomplcache#sources#include_complete#get_current_include_files	bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#get_current_include_files() "{{{$/;"	f
neocomplcache#sources#include_complete#get_include_files	bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#get_include_files(bufnumber) "{{{$/;"	f
neocomplcache#sources#include_complete#get_include_tags	bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#get_include_tags(bufnumber) "{{{$/;"	f
neocomplcache#sources#member_complete#caching_current_buffer	bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^function! neocomplcache#sources#member_complete#caching_current_buffer() "{{{$/;"	f
neocomplcache#sources#member_complete#caching_current_line	bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^function! neocomplcache#sources#member_complete#caching_current_line() "{{{$/;"	f
neocomplcache#sources#member_complete#define	bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^function! neocomplcache#sources#member_complete#define() "{{{$/;"	f
neocomplcache#sources#omni_complete#define	bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^function! neocomplcache#sources#omni_complete#define() "{{{$/;"	f
neocomplcache#sources#syntax_complete#define	bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^function! neocomplcache#sources#syntax_complete#define() "{{{$/;"	f
neocomplcache#sources#syntax_complete#recaching	bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^function! neocomplcache#sources#syntax_complete#recaching(filetype) "{{{$/;"	f
neocomplcache#sources#tags_complete#caching_tags	bundle/neocomplcache.vim/autoload/neocomplcache/sources/tags_complete.vim	/^function! neocomplcache#sources#tags_complete#caching_tags(force) "{{{$/;"	f
neocomplcache#sources#tags_complete#define	bundle/neocomplcache.vim/autoload/neocomplcache/sources/tags_complete.vim	/^function! neocomplcache#sources#tags_complete#define() "{{{$/;"	f
neocomplcache#sources#vim_complete#define	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete.vim	/^function! neocomplcache#sources#vim_complete#define() "{{{$/;"	f
neocomplcache#sources#vim_complete#get_command	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete.vim	/^function! neocomplcache#sources#vim_complete#get_command(cur_text) "{{{$/;"	f
neocomplcache#sources#vim_complete#get_cur_text	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete.vim	/^function! neocomplcache#sources#vim_complete#get_cur_text() "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#augroup	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#augroup(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#autocmd_args	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#autocmd_args(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#buffer	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#buffer(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#colorscheme_args	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#colorscheme_args(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#command	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#command(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#command_args	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#command_args(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#custom	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#custom(command_name, cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#customlist	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#customlist(command_name, cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#dir	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#dir(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#environment	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#environment(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#event	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#event(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#execute	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#execute(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#expand	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#expand(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#expression	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#expression(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#feature	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#feature(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#file	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#file(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#filetype	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#filetype(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#function	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#function(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#get_command_completion	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#get_command_completion(command_name, cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#get_completion_name	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#get_completion_name(command_name) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#help	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#help(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#highlight	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#highlight(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#let	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#let(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#mapping	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#mapping(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#menu	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#menu(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#on_filetype	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#on_filetype() "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#option	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#option(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#recaching	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#recaching(bufname) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#shellcmd	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#shellcmd(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#tag	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#tag(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#tag_listfiles	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#tag_listfiles(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#var	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#var(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#var_dictionary	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#var_dictionary(cur_text, complete_str) "{{{$/;"	f
neocomplcache#start_manual_complete	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#start_manual_complete(...)$/;"	f
neocomplcache#system	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#system(...) "{{{$/;"	f
neocomplcache#undo_completion	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#undo_completion()$/;"	f
neocomplcache#unpack_dictionary	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#unpack_dictionary(dict) "{{{$/;"	f
neocomplcache#util#convert2list	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#convert2list(expr) "{{{$/;"	f
neocomplcache#util#disable_default_dictionary	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#disable_default_dictionary(variable) "{{{$/;"	f
neocomplcache#util#dup_filter	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#dup_filter(list) "{{{$/;"	f
neocomplcache#util#escape_pattern	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#escape_pattern(...) "{{{$/;"	f
neocomplcache#util#expand	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#expand(path) "{{{$/;"	f
neocomplcache#util#get_last_status	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#get_last_status(...) "{{{$/;"	f
neocomplcache#util#glob	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#glob(pattern, ...) "{{{$/;"	f
neocomplcache#util#has_lua	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#has_lua() "{{{$/;"	f
neocomplcache#util#has_vimproc	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#has_vimproc() "{{{$/;"	f
neocomplcache#util#has_vimproc	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#has_vimproc(...) "{{{$/;"	f
neocomplcache#util#iconv	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#iconv(...) "{{{$/;"	f
neocomplcache#util#is_mac	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#is_mac(...) "{{{$/;"	f
neocomplcache#util#is_sudo	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#is_sudo() "{{{$/;"	f
neocomplcache#util#is_windows	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#is_windows(...) "{{{$/;"	f
neocomplcache#util#join_rtp	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#join_rtp(list) "{{{$/;"	f
neocomplcache#util#mb_strlen	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#mb_strlen(...) "{{{$/;"	f
neocomplcache#util#set_default	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#set_default(var, val, ...)  "{{{$/;"	f
neocomplcache#util#set_default_dictionary	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#set_default_dictionary(variable, keys, value) "{{{$/;"	f
neocomplcache#util#set_dictionary_helper	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#set_dictionary_helper(...) "{{{$/;"	f
neocomplcache#util#sort_by	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#sort_by(...) "{{{$/;"	f
neocomplcache#util#split_rtp	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#split_rtp(...) "{{{$/;"	f
neocomplcache#util#strchars	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#strchars(...) "{{{$/;"	f
neocomplcache#util#strwidthpart	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#strwidthpart(...) "{{{$/;"	f
neocomplcache#util#strwidthpart_reverse	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#strwidthpart_reverse(...) "{{{$/;"	f
neocomplcache#util#substitute_path_separator	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#substitute_path_separator(...) "{{{$/;"	f
neocomplcache#util#system	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#system(...) "{{{$/;"	f
neocomplcache#util#truncate	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#truncate(...) "{{{$/;"	f
neocomplcache#util#truncate_smart	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#truncate_smart(...) "{{{$/;"	f
neocomplcache#util#uniq	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#uniq(...) "{{{$/;"	f
neocomplcache#util#uniq	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#uniq(list) "{{{$/;"	f
neocomplcache#util#wcswidth	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#wcswidth(...) "{{{$/;"	f
neocomplcache#variables#get_custom	bundle/neocomplcache.vim/autoload/neocomplcache/variables.vim	/^function! neocomplcache#variables#get_custom() "{{{$/;"	f
neocomplcache#variables#get_filters	bundle/neocomplcache.vim/autoload/neocomplcache/variables.vim	/^function! neocomplcache#variables#get_filters() "{{{$/;"	f
neocomplcache#variables#get_frequencies	bundle/neocomplcache.vim/autoload/neocomplcache/variables.vim	/^function! neocomplcache#variables#get_frequencies() "{{{$/;"	f
neocomplcache#variables#get_sources	bundle/neocomplcache.vim/autoload/neocomplcache/variables.vim	/^function! neocomplcache#variables#get_sources() "{{{$/;"	f
neocomplcache#within_comment	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^function! neocomplcache#within_comment() "{{{$/;"	f
neocomplcache_source.gather_candidates	bundle/neocomplcache.vim/autoload/unite/sources/neocomplcache.vim	/^function! s:neocomplcache_source.gather_candidates(args, context) "{{{$/;"	f
neocomplcache_source.hooks.on_init	bundle/neocomplcache.vim/autoload/unite/sources/neocomplcache.vim	/^function! s:neocomplcache_source.hooks.on_init(args, context) "{{{$/;"	f
nerdtree#bookmarkNode	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#bookmarkNode(...)$/;"	f
nerdtree#bufInWindows	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#bufInWindows(bnum)$/;"	f
nerdtree#centerView	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#centerView()$/;"	f
nerdtree#chRoot	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#chRoot(node)$/;"	f
nerdtree#chRootCwd	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#chRootCwd()$/;"	f
nerdtree#checkForBrowse	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir)$/;"	f
nerdtree#clearBookmarks	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#clearBookmarks(bookmarks)$/;"	f
nerdtree#closeTree	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTree()$/;"	f
nerdtree#closeTreeIfOpen	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTreeIfOpen()$/;"	f
nerdtree#closeTreeIfQuitOnOpen	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTreeIfQuitOnOpen()$/;"	f
nerdtree#compareBookmarks	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareBookmarks(first, second)$/;"	f
nerdtree#compareNodes	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2)$/;"	f
nerdtree#completeBookmarks	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P)$/;"	f
nerdtree#createDefaultBindings	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#createDefaultBindings()$/;"	f
nerdtree#deprecated	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...)$/;"	f
nerdtree#dumpHelp	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#dumpHelp()$/;"	f
nerdtree#echo	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg)$/;"	f
nerdtree#echoError	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg)$/;"	f
nerdtree#echoWarning	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg)$/;"	f
nerdtree#escChars	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#escChars()$/;"	f
nerdtree#exec	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd)$/;"	f
nerdtree#findAndRevealPath	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#findAndRevealPath()$/;"	f
nerdtree#firstUsableWindow	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#firstUsableWindow()$/;"	f
nerdtree#getPath	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#getPath(ln)$/;"	f
nerdtree#getTreeWinNum	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#getTreeWinNum()$/;"	f
nerdtree#has_opt	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name)$/;"	f
nerdtree#indentLevelFor	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#indentLevelFor(line)$/;"	f
nerdtree#invokeKeyMap	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#invokeKeyMap(key)$/;"	f
nerdtree#isTreeOpen	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#isTreeOpen()$/;"	f
nerdtree#isWindowUsable	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#isWindowUsable(winnumber)$/;"	f
nerdtree#jumpToChild	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#jumpToChild(currentNode, direction)$/;"	f
nerdtree#jumpToSibling	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#jumpToSibling(currentNode, forward)$/;"	f
nerdtree#loadClassFiles	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles()$/;"	f
nerdtree#openBookmark	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#openBookmark(name)$/;"	f
nerdtree#postSourceActions	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions()$/;"	f
nerdtree#promptToDelBuffer	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#promptToDelBuffer(bufnum, msg)$/;"	f
nerdtree#putCursorInTreeWin	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#putCursorInTreeWin()$/;"	f
nerdtree#putCursorOnBookmarkTable	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#putCursorOnBookmarkTable()$/;"	f
nerdtree#renderBookmarks	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderBookmarks()$/;"	f
nerdtree#renderView	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView()$/;"	f
nerdtree#renderViewSavingPosition	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderViewSavingPosition()$/;"	f
nerdtree#restoreScreenState	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#restoreScreenState()$/;"	f
nerdtree#revealBookmark	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#revealBookmark(name)$/;"	f
nerdtree#runningWindows	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows()$/;"	f
nerdtree#saveScreenState	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#saveScreenState()$/;"	f
nerdtree#stripMarkupFromLine	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#stripMarkupFromLine(line, removeLeadingSpaces)$/;"	f
nerdtree#tabpagevar	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#tabpagevar(tabnr, var)$/;"	f
nerdtree#treeExistsForBuf	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeExistsForBuf()$/;"	f
nerdtree#treeExistsForTab	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeExistsForTab()$/;"	f
nerdtree#treeMarkupReg	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeMarkupReg()$/;"	f
nerdtree#treeUpDirLine	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeUpDirLine()$/;"	f
nerdtree#treeWid	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeWid()$/;"	f
nerdtree#unique	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#unique(list)$/;"	f
nerdtree#upDir	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#upDir(keepState)$/;"	f
nerdtree#version	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version()$/;"	f
nr2byte	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:nr2byte(nr)$/;"	f
nr2enc_char	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:nr2enc_char(charcode)$/;"	f
nr2hex	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:nr2hex(nr)$/;"	f
nsplit	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:nsplit(expr, n, ...)$/;"	f
o	templates/javaHeader.vim	/^normal o$/;"	m
omni#common#debug#End	bundle/OmniCppComplete/autoload/omni/common/debug.vim	/^function! omni#common#debug#End()$/;"	f
omni#common#debug#Start	bundle/OmniCppComplete/autoload/omni/common/debug.vim	/^function! omni#common#debug#Start()$/;"	f
omni#common#debug#Trace	bundle/OmniCppComplete/autoload/omni/common/debug.vim	/^function! omni#common#debug#Trace(szFuncName, ...)$/;"	f
omni#common#utils#CompareNumber	bundle/OmniCppComplete/autoload/omni/common/utils.vim	/^function! omni#common#utils#CompareNumber(i1, i2)$/;"	f
omni#common#utils#GetWordUnderCursor	bundle/OmniCppComplete/autoload/omni/common/utils.vim	/^function! omni#common#utils#GetWordUnderCursor()$/;"	f
omni#common#utils#TagList	bundle/OmniCppComplete/autoload/omni/common/utils.vim	/^function! omni#common#utils#TagList(szTagQuery)$/;"	f
omni#common#utils#TagListNoThrow	bundle/OmniCppComplete/autoload/omni/common/utils.vim	/^function! omni#common#utils#TagListNoThrow(szTagQuery)$/;"	f
omni#cpp#complete#Init	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^function! omni#cpp#complete#Init()$/;"	f
omni#cpp#complete#Main	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^function! omni#cpp#complete#Main(findstart, base)$/;"	f
omni#cpp#includes#Display	bundle/OmniCppComplete/autoload/omni/cpp/includes.vim	/^function! omni#cpp#includes#Display()$/;"	f
omni#cpp#includes#GetList	bundle/OmniCppComplete/autoload/omni/cpp/includes.vim	/^function! omni#cpp#includes#GetList(...)$/;"	f
omni#cpp#items#Get	bundle/OmniCppComplete/autoload/omni/cpp/items.vim	/^function! omni#cpp#items#Get(tokens, ...)$/;"	f
omni#cpp#items#ResolveItemsTypeInfo	bundle/OmniCppComplete/autoload/omni/cpp/items.vim	/^function! omni#cpp#items#ResolveItemsTypeInfo(contextStack, items)$/;"	f
omni#cpp#maycomplete#Arrow	bundle/OmniCppComplete/autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Arrow()$/;"	f
omni#cpp#maycomplete#Complete	bundle/OmniCppComplete/autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Complete()$/;"	f
omni#cpp#maycomplete#Dot	bundle/OmniCppComplete/autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Dot()$/;"	f
omni#cpp#maycomplete#Scope	bundle/OmniCppComplete/autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Scope()$/;"	f
omni#cpp#namespaces#GetContexts	bundle/OmniCppComplete/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetContexts()$/;"	f
omni#cpp#namespaces#GetListFromCurrentBuffer	bundle/OmniCppComplete/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetListFromCurrentBuffer(...)$/;"	f
omni#cpp#namespaces#GetMapFromBuffer	bundle/OmniCppComplete/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetMapFromBuffer(szFilePath, ...)$/;"	f
omni#cpp#namespaces#GetMapFromCurrentBuffer	bundle/OmniCppComplete/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetMapFromCurrentBuffer()$/;"	f
omni#cpp#namespaces#GetUsingNamespaces	bundle/OmniCppComplete/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetUsingNamespaces()$/;"	f
omni#cpp#namespaces#ResolveAlias	bundle/OmniCppComplete/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#ResolveAlias(mapNamespaceAlias, szNamespace)$/;"	f
omni#cpp#namespaces#ResolveAll	bundle/OmniCppComplete/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#ResolveAll(namespacesUsed)$/;"	f
omni#cpp#settings#Init	bundle/OmniCppComplete/autoload/omni/cpp/settings.vim	/^function! omni#cpp#settings#Init()$/;"	f
omni#cpp#tokenizer#Tokenize	bundle/OmniCppComplete/autoload/omni/cpp/tokenizer.vim	/^function! omni#cpp#tokenizer#Tokenize(szCode)$/;"	f
omni#cpp#utils#BuildParenthesisGroups	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#BuildParenthesisGroups(tokens)$/;"	f
omni#cpp#utils#CreateTypeInfo	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#CreateTypeInfo(param)$/;"	f
omni#cpp#utils#ExtractCmdFromTagItem	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractCmdFromTagItem(tagItem)$/;"	f
omni#cpp#utils#ExtractScope	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractScope(tagItem)$/;"	f
omni#cpp#utils#ExtractTypeInfoFromTag	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractTypeInfoFromTag(tagItem)$/;"	f
omni#cpp#utils#ExtractTypeInfoFromTokens	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractTypeInfoFromTokens(tokens)$/;"	f
omni#cpp#utils#GetCastType	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetCastType(tokens)$/;"	f
omni#cpp#utils#GetClassInheritanceList	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetClassInheritanceList(namespaces, typeInfo)$/;"	f
omni#cpp#utils#GetCode	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetCode(posStart, posEnd)$/;"	f
omni#cpp#utils#GetCodeFromLine	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetCodeFromLine(szSingleLine)$/;"	f
omni#cpp#utils#GetPreviewWindowStringFromTagItem	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetPreviewWindowStringFromTagItem(tagItem)$/;"	f
omni#cpp#utils#GetResolvedTagItem	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetResolvedTagItem(namespaces, typeInfo)$/;"	f
omni#cpp#utils#GetResolvedTags	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetResolvedTags(namespaces, typeInfo)$/;"	f
omni#cpp#utils#GetTypeInfoString	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetTypeInfoString(typeInfo)$/;"	f
omni#cpp#utils#IsCursorInCommentOrString	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#IsCursorInCommentOrString()$/;"	f
omni#cpp#utils#IsTypeInfoValid	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#IsTypeInfoValid(typeInfo)$/;"	f
omni#cpp#utils#ResolveFilePath	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ResolveFilePath(szFile)$/;"	f
omni#cpp#utils#SimplifyParenthesis	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#SimplifyParenthesis(tokens)$/;"	f
omni#cpp#utils#SimplifyScope	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#SimplifyScope(szScope)$/;"	f
omni#cpp#utils#TokenizeCurrentInstruction	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#TokenizeCurrentInstruction(...)$/;"	f
omni#cpp#utils#TokenizeCurrentInstructionUntilWord	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#TokenizeCurrentInstructionUntilWord()$/;"	f
omni#cpp#utils#expIgnoreComments	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^let omni#cpp#utils#expIgnoreComments = 'getline(".") =~ g:omni#cpp#utils#reIgnoreComment'$/;"	v
omni#cpp#utils#reIgnoreComment	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^let omni#cpp#utils#reIgnoreComment = escape('\\\/\\\/\\|\\\/\\*\\|\\*\\\/', '*\/\\')$/;"	v
omni#cpp#utils#szEscapedCharacters	bundle/OmniCppComplete/autoload/omni/cpp/utils.vim	/^let omni#cpp#utils#szEscapedCharacters = ' %#'$/;"	v
onlybitmaps	bundle/vim-powerline/fontpatcher/fontpatcher	/^	onlybitmaps = font.onlybitmaps$/;"	v
openExplorer	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:openExplorer(node)$/;"	f
openHSplit	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:openHSplit(target)$/;"	f
openInNewTab	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:openInNewTab(target)$/;"	f
openInNewTabSilent	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:openInNewTabSilent(target)$/;"	f
openNodeRecursively	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:openNodeRecursively(node)$/;"	f
openVSplit	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:openVSplit(target)$/;"	f
opfunc	bundle/vim-surround/plugin/surround.vim	/^function! s:opfunc(type,...) " {{{1$/;"	f
opfunc2	bundle/vim-surround/plugin/surround.vim	/^function! s:opfunc2(arg)$/;"	f
or	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:or(xs)$/;"	f
overlap_width	bundle/vim-powerline/fontpatcher/fontpatcher	/^			overlap_width = font.em \/ 48$/;"	v
parse_name	bundle/vundle/autoload/vundle/config.vim	/^func! s:parse_name(arg)$/;"	f
parse_options	bundle/vundle/autoload/vundle/config.vim	/^func! s:parse_options(opts)$/;"	f
parser	bundle/vim-powerline/fontpatcher/fontpatcher	/^parser = argparse.ArgumentParser(description='Font patcher for Powerline. Creates dividers and symbols in FontForge-compatible font files. Requires FontForge with Python bindings. Stores glyphs in the U+2B80-U+2BFF range ("Miscellaneous symbols and arrows"). Stores the patched font as a new, renamed font file by default.')$/;"	v
partition	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:partition(f, xs)$/;"	f
path2directory	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:path2directory(path)$/;"	f
path2project_directory	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:path2project_directory(path, ...)$/;"	f
pop	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:pop(list)$/;"	f
previewNodeCurrent	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:previewNodeCurrent(node)$/;"	f
previewNodeHSplit	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:previewNodeHSplit(node)$/;"	f
previewNodeVSplit	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:previewNodeVSplit(node)$/;"	f
print_error	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:print_error(message)$/;"	f
print_snippets_complete_error	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^function! s:print_snippets_complete_error()$/;"	f
process	bundle/vim-surround/plugin/surround.vim	/^function! s:process(string)$/;"	f
process	bundle/vundle/autoload/vundle/installer.vim	/^func! s:process(bang, cmd)$/;"	f
promptToDelBuffer	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
promptToRenameBuffer	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToRenameBuffer(bufnum, msg, newFileName)$/;"	f
push	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:push(list, val)$/;"	f
rand	bundle/neocomplcache.vim/autoload/neocomplcache/commands.vim	/^function! s:rand(max) "{{{$/;"	f
readfile	bundle/neocomplcache.vim/autoload/vital/_13055f8/System/Cache.vim	/^function! s:readfile(cache_dir, filename)$/;"	f
redraw	bundle/vim-surround/plugin/surround.vim	/^function! s:redraw()$/;"	f
refreshCurrent	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:refreshCurrent(node)$/;"	f
refreshRoot	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:refreshRoot()$/;"	f
reindent	bundle/vim-surround/plugin/surround.vim	/^function! s:reindent() " {{{1$/;"	f
repeat#invalidate	bundle/repeat.vim/autoload/repeat.vim	/^function! repeat#invalidate()$/;"	f
repeat#run	bundle/repeat.vim/autoload/repeat.vim	/^function! repeat#run(count)$/;"	f
repeat#set	bundle/repeat.vim/autoload/repeat.vim	/^function! repeat#set(sequence,...)$/;"	f
repeat#setreg	bundle/repeat.vim/autoload/repeat.vim	/^function! repeat#setreg(sequence,register)$/;"	f
repeat#wrap	bundle/repeat.vim/autoload/repeat.vim	/^function! repeat#wrap(command,count)$/;"	f
repeatPlugin	bundle/repeat.vim/autoload/repeat.vim	/^augroup repeatPlugin$/;"	a
replace	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:replace(str, from, to)$/;"	f
replace_first	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:replace_first(str, from, to)$/;"	f
retval	bundle/project/plugin/project.vim	/^        let retval=b:fnamelist$/;"	v
reverse	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:reverse(str)$/;"	f
rfind	plugin/libvim_javaimports.c	/^const char* rfind(const char* haystack, char needl){$/;"	f
rgb	colors/Tomorrow-Night-Bright.vim	/^	fun <SID>rgb(rgb)$/;"	f
rgb	colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>rgb(rgb)$/;"	f
rgb	colors/Tomorrow-Night.vim	/^	fun <SID>rgb(rgb)$/;"	f
rgb_colour	colors/Tomorrow-Night-Bright.vim	/^	fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_colour	colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_colour	colors/Tomorrow-Night.vim	/^	fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_level	colors/Tomorrow-Night-Bright.vim	/^	fun <SID>rgb_level(n)$/;"	f
rgb_level	colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>rgb_level(n)$/;"	f
rgb_level	colors/Tomorrow-Night.vim	/^	fun <SID>rgb_level(n)$/;"	f
rgb_number	colors/Tomorrow-Night-Bright.vim	/^	fun <SID>rgb_number(x)$/;"	f
rgb_number	colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>rgb_number(x)$/;"	f
rgb_number	colors/Tomorrow-Night.vim	/^	fun <SID>rgb_number(x)$/;"	f
rtp_add	bundle/vundle/autoload/vundle/config.vim	/^func! s:rtp_add(dir) abort$/;"	f
rtp_add_a	bundle/vundle/autoload/vundle/config.vim	/^func! s:rtp_add_a()$/;"	f
rtp_rm	bundle/vundle/autoload/vundle/config.vim	/^func! s:rtp_rm(dir) abort$/;"	f
rtp_rm_a	bundle/vundle/autoload/vundle/config.vim	/^func! s:rtp_rm_a()$/;"	f
rtpath	bundle/vundle/autoload/vundle/config.vim	/^func! s:rtpath(opts)$/;"	f
s:BaseTag	bundle/tagbar/autoload/tagbar.vim	/^let s:BaseTag = {}$/;"	v
s:Bookmark	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:C	bundle/genutils-2.5/autoload/genutils.vim	/^let s:C = 100$/;"	v
s:CACHE_DEBUG_TRACE	bundle/OmniCppComplete/autoload/omni/common/debug.vim	/^let s:CACHE_DEBUG_TRACE = []$/;"	v
s:CACHE_OVERLOADED_FUNCTIONS	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^let s:CACHE_OVERLOADED_FUNCTIONS = {}$/;"	v
s:CACHE_REVISION	bundle/vim-powerline/autoload/Pl.vim	/^	let s:CACHE_REVISION = 7$/;"	v
s:CACHE_TAG_ENV	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^let s:CACHE_TAG_ENV = ''$/;"	v
s:CACHE_TAG_FILES	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^let s:CACHE_TAG_FILES = {}$/;"	v
s:CACHE_TAG_POPUP_ITEMS	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^let s:CACHE_TAG_POPUP_ITEMS = {}$/;"	v
s:Cache	bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^let s:Cache = vital#of('neocomplcache').import('System.Cache')$/;"	v
s:Creator	bundle/nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:D	bundle/genutils-2.5/autoload/genutils.vim	/^let s:D = 500$/;"	v
s:EMPTY_SEGMENT	bundle/vim-powerline/autoload/Pl/Parser.vim	/^let s:EMPTY_SEGMENT = { 'type': 'empty' }$/;"	v
s:FileInfo	bundle/tagbar/autoload/tagbar.vim	/^let s:FileInfo = {}$/;"	v
s:HARD_DIVIDER	bundle/vim-powerline/autoload/Pl/Parser.vim	/^let s:HARD_DIVIDER = 0$/;"	v
s:I	bundle/genutils-2.5/autoload/genutils.vim	/^let s:I = 1$/;"	v
s:KeyMap	bundle/nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:KindheaderTag	bundle/tagbar/autoload/tagbar.vim	/^let s:KindheaderTag = copy(s:BaseTag)$/;"	v
s:L	bundle/genutils-2.5/autoload/genutils.vim	/^let s:L = 50$/;"	v
s:LEFT_SIDE	bundle/vim-powerline/autoload/Pl/Parser.vim	/^let s:LEFT_SIDE = 0$/;"	v
s:List	bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^let s:List = vital#of('neocomplcache').import('Data.List')$/;"	v
s:List	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^let s:List = vital#of('neocomplcache').import('Data.List')$/;"	v
s:M	bundle/genutils-2.5/autoload/genutils.vim	/^let s:M = 1000$/;"	v
s:MRUList	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^let s:MRUList = []$/;"	v
s:MRU_Exclude_List	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^let s:MRU_Exclude_List = ["[BufExplorer]","__MRU_Files__"]$/;"	v
s:MenuController	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:NERDFileNameEscape	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^let s:NERDFileNameEscape="[]#*$%'\\" ?`!&();<>\\\\"$/;"	v
s:NERDTreeSortStarIndex	bundle/nerdtree/lib/nerdtree/path.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:NormalTag	bundle/tagbar/autoload/tagbar.vim	/^let s:NormalTag = copy(s:BaseTag)$/;"	v
s:OmniCpp_ShowAccess	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^let s:OmniCpp_ShowAccess = g:OmniCpp_ShowAccess$/;"	v
s:OmniCpp_ShowPrototypeInAbbr	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^let s:OmniCpp_ShowPrototypeInAbbr = g:OmniCpp_ShowPrototypeInAbbr$/;"	v
s:OmniCpp_ShowScopeInAbbr	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^let s:OmniCpp_ShowScopeInAbbr = g:OmniCpp_ShowScopeInAbbr$/;"	v
s:Opener	bundle/nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:PADDING	bundle/vim-powerline/autoload/Pl/Parser.vim	/^let s:PADDING = 1$/;"	v
s:Path	bundle/nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:PseudoTag	bundle/tagbar/autoload/tagbar.vim	/^let s:PseudoTag = copy(s:BaseTag)$/;"	v
s:RIGHT_SIDE	bundle/vim-powerline/autoload/Pl/Parser.vim	/^let s:RIGHT_SIDE = 2$/;"	v
s:SOFT_DIVIDER	bundle/vim-powerline/autoload/Pl/Parser.vim	/^let s:SOFT_DIVIDER = 1$/;"	v
s:SrcExpl_bufName	bundle/SrcExpl/plugin/srcexpl.vim	/^let s:SrcExpl_bufName = 'Source_Explorer'$/;"	v
s:SrcExpl_isDebug	bundle/SrcExpl/plugin/srcexpl.vim	/^let s:SrcExpl_isDebug = 0$/;"	v
s:SrcExpl_isRunning	bundle/SrcExpl/plugin/srcexpl.vim	/^let s:SrcExpl_isRunning = 0$/;"	v
s:SrcExpl_logPath	bundle/SrcExpl/plugin/srcexpl.vim	/^let s:SrcExpl_logPath = '~\/srcexpl.log'$/;"	v
s:SrcExpl_pluginName	bundle/SrcExpl/plugin/srcexpl.vim	/^let s:SrcExpl_pluginName = 'Source Explorer'$/;"	v
s:SrcExpl_pluginVer	bundle/SrcExpl/plugin/srcexpl.vim	/^let s:SrcExpl_pluginVer = 5.3$/;"	v
s:SrcExpl_winName	bundle/SrcExpl/plugin/srcexpl.vim	/^let s:SrcExpl_winName = 'SrcExpl'$/;"	v
s:SrcExpl_winVar	bundle/SrcExpl/plugin/srcexpl.vim	/^let s:SrcExpl_winVar = -1$/;"	v
s:String	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^let s:String = vital#of('neocomplcache').import('Data.String')$/;"	v
s:TBrowser_Config	bundle/TxtBrowser/ftplugin/txt.vim	/^		let s:TBrowser_Config = iconv(s:TBrowser_Config, 'utf8', &fenc)$/;"	v
s:TBrowser_Config	bundle/TxtBrowser/ftplugin/txt.vim	/^	let s:TBrowser_Config .= '--regex-txt="\/^(([0-9]+\\.){1}([0-9]+\\.?)[ \\t]+)(.+$)\/.   \\1\\4\/c,content\/" '$/;"	v
s:TBrowser_Config	bundle/TxtBrowser/ftplugin/txt.vim	/^	let s:TBrowser_Config .= '--regex-txt="\/^(([0-9]+\\.){2}([0-9]+\\.?)[ \\t]+)(.+$)\/.       \\1\\4\/c,content\/" '$/;"	v
s:TBrowser_Config	bundle/TxtBrowser/ftplugin/txt.vim	/^	let s:TBrowser_Config .= '--regex-txt="\/^(([0-9]+\\.){3}([0-9]+\\.?)[ \\t]+)(.+$)\/.           \\1\\4\/c,content\/" '$/;"	v
s:TBrowser_Config	bundle/TxtBrowser/ftplugin/txt.vim	/^	let s:TBrowser_Config .= '--regex-txt="\/^[ \\t]*(图[ \\t]*[0-9a-zA-Z]+[.: ][ \\t]*.+$)\/\\1\/f,figures\/i" '$/;"	v
s:TBrowser_Config	bundle/TxtBrowser/ftplugin/txt.vim	/^	let s:TBrowser_Config .= '--regex-txt="\/^[ \\t]*(表[ \\t]*[0-9a-zA-Z]+[.: ][ \\t]*.+$)\/\\1\/t,tables\/i" '$/;"	v
s:TBrowser_Config	bundle/TxtBrowser/ftplugin/txt.vim	/^let s:TBrowser_Config .= '--regex-txt="\/^([0-9]+\\.?[ \\t]+)(.+$)\/\\1\\2\/c,content\/" '$/;"	v
s:TBrowser_Config	bundle/TxtBrowser/ftplugin/txt.vim	/^let s:TBrowser_Config .= '--regex-txt="\/^[ \\t]+(figure[ \\t]+[0-9a-zA-Z]+([.: ]([ \\t]*.+)?)?$)\/\\1\/f,figures\/i" '$/;"	v
s:TBrowser_Config	bundle/TxtBrowser/ftplugin/txt.vim	/^let s:TBrowser_Config .= '--regex-txt="\/^[ \\t]+(table[ \\t]+[0-9a-zA-Z]+([.: ]([ \\t]*.+)?)?$)\/\\1\/t,tables\/i" '$/;"	v
s:TBrowser_Config	bundle/TxtBrowser/ftplugin/txt.vim	/^let s:TBrowser_Config = ' --langdef=txt --langmap=txt:.txt '$/;"	v
s:Tlist_Skip_Refresh	bundle/taglist.vim/plugin/taglist.vim	/^let s:Tlist_Skip_Refresh = 0$/;"	v
s:TreeDirNode	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeFileNode	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:TypeInfo	bundle/tagbar/autoload/tagbar.vim	/^let s:TypeInfo = {}$/;"	v
s:UNPROTECTED_CHAR_PRFX	bundle/genutils-2.5/autoload/genutils.vim	/^let s:UNPROTECTED_CHAR_PRFX = '\\%(\\%([^\\\\]\\|^\\)\\\\\\%(\\\\\\\\\\)*\\)\\@<!' " Doesn't eat slashes.$/;"	v
s:V	bundle/genutils-2.5/autoload/genutils.vim	/^let s:V = 5$/;"	v
s:V	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^let s:V = vital#of('neocomplcache')$/;"	v
s:X	bundle/genutils-2.5/autoload/genutils.vim	/^let s:X = 10$/;"	v
s:allocated_colors	bundle/vim-powerline/autoload/Pl/Hi.vim	/^let s:allocated_colors = {$/;"	v
s:aqua	colors/Tomorrow-Night-Bright.vim	/^let s:aqua = "70c0b1"$/;"	v
s:aqua	colors/Tomorrow-Night.vim	/^let s:aqua = "8abeb7"$/;"	v
s:async_dictionary_list	bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^  let s:async_dictionary_list = {}$/;"	v
s:async_dictionary_list	bundle/neocomplcache.vim/autoload/neocomplcache/sources/dictionary_complete.vim	/^  let s:async_dictionary_list = {}$/;"	v
s:async_tags_list	bundle/neocomplcache.vim/autoload/neocomplcache/sources/tags_complete.vim	/^  let s:async_tags_list = {}$/;"	v
s:autocommands_done	bundle/tagbar/autoload/tagbar.vim	/^let s:autocommands_done = 0$/;"	v
s:bMayComplete	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^let s:bMayComplete = 0$/;"	v
s:background	colors/Tomorrow-Night-Bright.vim	/^let s:background = "000000"$/;"	v
s:background	colors/Tomorrow-Night-Eighties.vim	/^	let s:background = "252525"$/;"	v
s:background	colors/Tomorrow-Night-Eighties.vim	/^let s:background = "16191C"$/;"	v
s:background	colors/Tomorrow-Night.vim	/^	let s:background = "252525"$/;"	v
s:background	colors/Tomorrow-Night.vim	/^let s:background = "1d1f21"$/;"	v
s:baseBufNr	bundle/lookupfile1_8/plugin/lookupfile.vim	/^let s:baseBufNr = 0$/;"	v
s:black	colors/ansi_blows.vim	/^let s:black='#000000'$/;"	v
s:black	colors/xterm16.vim	/^let s:black		= exists("g:black") ? g:black :		    '#000000'$/;"	v
s:blocklevel_tags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:blocklevel_tags = [$/;"	v
s:blue	colors/Tomorrow-Night-Bright.vim	/^let s:blue = "7aa6da"$/;"	v
s:blue	colors/Tomorrow-Night-Eighties.vim	/^let s:blue = "99CCCC"$/;"	v
s:blue	colors/Tomorrow-Night.vim	/^let s:blue = "81a2be"$/;"	v
s:blue	colors/ansi_blows.vim	/^let s:blue='#1d28d2'$/;"	v
s:blue	colors/xterm16.vim	/^let s:blue		= exists("g:blue") ? g:blue :		    '#0080FF'$/;"	v
s:boldBlack	colors/ansi_blows.vim	/^let s:boldBlack='#555555'$/;"	v
s:boldBlack	colors/xterm16.vim	/^let s:boldBlack='#555555'$/;"	v
s:boldBlue	colors/ansi_blows.vim	/^let s:boldBlue='#5050ff'$/;"	v
s:boldCyan	colors/ansi_blows.vim	/^let s:boldCyan='#44ffff'$/;"	v
s:boldCyan	colors/xterm16.vim	/^let s:boldCyan='#85AB5F'$/;"	v
s:boldGreen	colors/ansi_blows.vim	/^let s:boldGreen='#44ff44'$/;"	v
s:boldMagenta	colors/ansi_blows.vim	/^let s:boldMagenta='#ff44ff'$/;"	v
s:boldMagenta	colors/xterm16.vim	/^let s:boldMagenta='#ff00ff'$/;"	v
s:boldRed	colors/ansi_blows.vim	/^let s:boldRed='#dc3244'$/;"	v
s:boldWhite	colors/ansi_blows.vim	/^let s:boldWhite='#ffffff'$/;"	v
s:boldWhite	colors/xterm16.vim	/^let s:boldWhite='#ffffff'$/;"	v
s:brown	colors/ansi_blows.vim	/^let s:brown='#aa5500'$/;"	v
s:brown	colors/xterm16.vim	/^let s:brown='#aa5500'$/;"	v
s:bufList	bundle/lookupfile1_8/plugin/lookupfile.vim	/^let s:bufList = [1]$/;"	v
s:buffer_sources	bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^  let s:buffer_sources = {}$/;"	v
s:bundle	bundle/vundle/autoload/vundle/config.vim	/^let s:bundle = {}$/;"	v
s:cached_files	bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_complete.vim	/^let s:cached_files = {}$/;"	v
s:chartreuse	colors/Tomorrow-Night-Eighties.vim	/^let s:chartreuse = "B9CA4A"$/;"	v
s:check_file	bundle/syntastic/syntax_checkers/erlang/escript.vim	/^let s:check_file = expand('<sfile>:p:h') . syntastic#util#Slash() . 'erlang_check_file.erl'$/;"	v
s:check_file	bundle/syntastic/syntax_checkers/less/lessc.vim	/^    let s:check_file = 'lessc'$/;"	v
s:check_file	bundle/syntastic/syntax_checkers/less/lessc.vim	/^    let s:check_file = 'node ' . expand('<sfile>:p:h') . syntastic#util#Slash() . 'less-lint.js'$/;"	v
s:checked_ctags	bundle/tagbar/autoload/tagbar.vim	/^let s:checked_ctags       = 0$/;"	v
s:checked_ctags_types	bundle/tagbar/autoload/tagbar.vim	/^let s:checked_ctags_types = 0$/;"	v
s:comment	colors/Tomorrow-Night-Bright.vim	/^let s:comment = "969896"$/;"	v
s:comment	colors/Tomorrow-Night-Eighties.vim	/^let s:comment = "808F80"$/;"	v
s:comment	colors/Tomorrow-Night.vim	/^let s:comment = "969896"$/;"	v
s:compare_typeinfo	bundle/tagbar/autoload/tagbar.vim	/^let s:compare_typeinfo = {}$/;"	v
s:compiler	bundle/syntastic/syntax_checkers/python/python.vim	/^let s:compiler = expand('<sfile>:p:h') . syntastic#util#Slash() . 'compile.py'$/;"	v
s:converter	bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_abbr.vim	/^let s:converter = {$/;"	v
s:converter	bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_case.vim	/^let s:converter = {$/;"	v
s:converter	bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_delimiter.vim	/^let s:converter = {$/;"	v
s:converter	bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_nothing.vim	/^let s:converter = {$/;"	v
s:converter	bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_remove_next_keyword.vim	/^let s:converter = {$/;"	v
s:cpo_save	bundle/TxtBrowser/ftplugin/txt.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/TxtBrowser/plugin/txtbrowser.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/cSyntaxAfter/after/syntax/html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/cSyntaxAfter/after/syntax/java.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/cSyntaxAfter/after/syntax/javacc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/taglist.vim/plugin/taglist.vim	/^    let s:cpo_save = &cpo$/;"	v
s:cpo_save	syntax/html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	syntax/java.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	syntax/javacc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cppKeyword	bundle/OmniCppComplete/autoload/omni/cpp/tokenizer.vim	/^let s:cppKeyword = ['asm', 'auto', 'bool', 'break', 'case', 'catch', 'char', 'class', 'const', 'const_cast', 'continue', 'default', 'delete', 'do', 'double', 'dynamic_cast', 'else', 'enum', 'explicit', 'export', 'extern', 'false', 'float', 'for', 'friend', 'goto', 'if', 'inline', 'int', 'long', 'mutable', 'namespace', 'new', 'operator', 'private', 'protected', 'public', 'register', 'reinterpret_cast', 'return', 'short', 'signed', 'sizeof', 'static', 'static_cast', 'struct', 'switch', 'template', 'this', 'throw', 'true', 'try', 'typedef', 'typeid', 'typename', 'union', 'unsigned', 'using', 'virtual', 'void', 'volatile', 'wchar_t', 'while', 'and', 'and_eq', 'bitand', 'bitor', 'compl', 'not', 'not_eq', 'or', 'or_eq', 'xor', 'xor_eq']$/;"	v
s:cppOperatorPunctuator	bundle/OmniCppComplete/autoload/omni/cpp/tokenizer.vim	/^let s:cppOperatorPunctuator = ['->*', '->', '--', '-=', '-', '!=', '!', '##', '#', '%:%:', '%=', '%>', '%:', '%', '&&', '&=', '&', '(', ')', '*=', '*', ',', '...', '.*', '.', '\/=', '\/', '::', ':>', ':', ';', '?', '[', ']', '^=', '^', '{', '||', '|=', '|', '}', '~', '++', '+=', '+', '<<=', '<%', '<:', '<<', '<=', '<', '==', '=', '>>=', '>>', '>=', '>']$/;"	v
s:ctags_types	bundle/tagbar/autoload/tagbar.vim	/^let s:ctags_types         = {}$/;"	v
s:cterm2gui_dict	bundle/vim-powerline/autoload/Pl/Hi.vim	/^let s:cterm2gui_dict = {$/;"	v
s:cyan	colors/Tomorrow-Night-Eighties.vim	/^let s:cyan = "2DE3FE"$/;"	v
s:cyan	colors/ansi_blows.vim	/^let s:cyan='#00aaaa'$/;"	v
s:cyan	colors/xterm16.vim	/^let s:cyan		= exists("g:cyan") ? g:cyan :		    '#00FFFF'$/;"	v
s:darkblue	colors/xterm16.vim	/^let s:darkblue		= exists("g:darkblue") ? g:darkblue : 	    '#0000FF'$/;"	v
s:darkcyan	colors/xterm16.vim	/^let s:darkcyan		= exists("g:darkcyan") ? g:darkcyan :	    '#00CDCD'$/;"	v
s:darkgreen	colors/xterm16.vim	/^let s:darkgreen		= exists("g:darkgreen") ? g:darkgreen :	    '#00CD00'$/;"	v
s:darkgrey	colors/xterm16.vim	/^let s:darkgrey		= exists("g:darkgrey") ? g:darkgrey :	    '#808080'$/;"	v
s:darkmagenta	colors/xterm16.vim	/^let s:darkmagenta	= exists("g:darkmagenta") ? g:darkmagenta : '#CD00CD'$/;"	v
s:darkred	colors/xterm16.vim	/^let s:darkred		= exists("g:darkred") ? g:darkred :	    '#CD0000'$/;"	v
s:darkyellow	colors/xterm16.vim	/^let s:darkyellow	= exists("g:darkyellow") ? g:darkyellow :   '#CDCD00'$/;"	v
s:debug	bundle/tagbar/autoload/tagbar.vim	/^let s:debug = 0$/;"	v
s:debug_file	bundle/tagbar/autoload/tagbar.vim	/^let s:debug_file = ''$/;"	v
s:defFCShellInstalled	bundle/genutils-2.5/autoload/genutils.vim	/^let s:defFCShellInstalled = 0$/;"	v
s:defaultCheckers	bundle/syntastic/plugin/syntastic/registry.vim	/^let s:defaultCheckers = {$/;"	v
s:defaultFiletypeMap	bundle/syntastic/plugin/syntastic/registry.vim	/^let s:defaultFiletypeMap = {$/;"	v
s:default_includes	bundle/syntastic/autoload/syntastic/c.vim	/^let s:default_includes = [$/;"	v
s:default_modes	bundle/vim-powerline/autoload/Pl/Segment.vim	/^let s:default_modes = ['n', 'N', 'v', 'i', 'r', 's']$/;"	v
s:delimiterMap	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^let s:delimiterMap = {$/;"	v
s:deprecation_notices_issued	bundle/syntastic/autoload/syntastic/log.vim	/^let s:deprecation_notices_issued = []$/;"	v
s:dictionary_list	bundle/neocomplcache.vim/autoload/neocomplcache/sources/dictionary_complete.vim	/^  let s:dictionary_list = {}$/;"	v
s:did_snip_helper	bundle/snipmate.vim/ftplugin/html_snip_helper.vim	/^let s:did_snip_helper = 1$/;"	v
s:did_snips_mappings	bundle/snipmate.vim/after/plugin/snipMate.vim	/^let s:did_snips_mappings = 1$/;"	v
s:doc_dict	bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^let s:doc_dict = {$/;"	v
s:doc_dict	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^let s:doc_dict = {$/;"	v
s:ds_pattern	bundle/auto-pairs/plugin/auto-pairs.vim	/^let s:ds_pattern = '\\v"'  . s:string_chunk . '"'$/;"	v
s:emapleader	bundle/Align/plugin/AlignMapsPlugin.vim	/^  let s:emapleader= escape(s:mapleader,'\\ ')$/;"	v
s:empty_tags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:empty_tags = [$/;"	v
s:exists_md5	bundle/neocomplcache.vim/autoload/vital/_13055f8/System/Cache.vim	/^  let s:exists_md5 = 0$/;"	v
s:exists_md5	bundle/neocomplcache.vim/autoload/vital/_13055f8/System/Cache.vim	/^  let s:exists_md5 = 1$/;"	v
s:expand_bufnr	bundle/tagbar/autoload/tagbar.vim	/^let s:expand_bufnr = -1$/;"	v
s:fcShellPreFuncs	bundle/genutils-2.5/autoload/genutils.vim	/^  let s:fcShellPreFuncs = {}$/;"	v
s:fileWild	bundle/lookupfile1_8/plugin/lookupfile.vim	/^let s:fileWild = {}$/;"	v
s:first_sign_id	bundle/syntastic/plugin/syntastic/signs.vim	/^let s:first_sign_id = 5000$/;"	v
s:firstmenu	bundle/Align/plugin/AlignMapsPlugin.vim	/^ let s:firstmenu= 1$/;"	v
s:foreground	colors/Tomorrow-Night-Bright.vim	/^let s:foreground = "eaeaea"$/;"	v
s:foreground	colors/Tomorrow-Night-Eighties.vim	/^let s:foreground = "C5C8C6"$/;"	v
s:foreground	colors/Tomorrow-Night.vim	/^let s:foreground = "c5c8c6"$/;"	v
s:function_return_types	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^let s:function_return_types = {}$/;"	v
s:functions	bundle/ccvext.vim/plugin/ccvext.vim	/^let s:functions = {'_command':{}}$/;"	v
s:ghc_mod_new	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^let s:ghc_mod_new = -1$/;"	v
s:global_candidates_list	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^  let s:global_candidates_list = { 'dictionary_variables' : {} }$/;"	v
s:global_options	bundle/syntastic/autoload/syntastic/log.vim	/^let s:global_options = [$/;"	v
s:glsl_extensions	bundle/syntastic/syntax_checkers/glsl/cgc.vim	/^let s:glsl_extensions = {$/;"	v
s:green	colors/Tomorrow-Night-Bright.vim	/^let s:green = "b9ca4a"$/;"	v
s:green	colors/Tomorrow-Night.vim	/^let s:green = "b5bd68"$/;"	v
s:green	colors/ansi_blows.vim	/^let s:green='#00aa00'$/;"	v
s:green	colors/xterm16.vim	/^let s:green		= exists("g:green") ? g:green :		    '#00FF00'$/;"	v
s:grey	colors/xterm16.vim	/^let s:grey		= exists("g:grey") ? g:grey :		    '#C0C0C0'$/;"	v
s:hasPreviewWindow	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^let s:hasPreviewWindow = match(&completeopt, 'preview')>=0$/;"	v
s:hasPreviewWindowOld	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^let s:hasPreviewWindowOld = s:hasPreviewWindow$/;"	v
s:has_highlighting	bundle/syntastic/plugin/syntastic/highlighting.vim	/^let s:has_highlighting = v:version > 701 || (v:version == 701 && has('patch040'))$/;"	v
s:has_maven	bundle/syntastic/syntax_checkers/java/javac.vim	/^let s:has_maven = 0$/;"	v
s:icon_closed	bundle/tagbar/autoload/tagbar.vim	/^let s:icon_closed = g:tagbar_iconchars[0]$/;"	v
s:icon_open	bundle/tagbar/autoload/tagbar.vim	/^let s:icon_open   = g:tagbar_iconchars[1]$/;"	v
s:ics	bundle/tagbar/syntax/tagbar.vim	/^let s:ics = escape(join(g:tagbar_iconchars, ''), ']^\\-')$/;"	v
s:ignore_errors	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:ignore_errors = [$/;"	v
s:imports	bundle/syntastic/syntax_checkers/sass/sass.vim	/^    let s:imports = "--compass"$/;"	v
s:imports	bundle/syntastic/syntax_checkers/sass/sass.vim	/^let s:imports = ""$/;"	v
s:inline_tags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:inline_tags = [$/;"	v
s:internal_candidates_list	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^  let s:internal_candidates_list = {}$/;"	v
s:isDebugEnabled	bundle/syntastic/autoload/syntastic/log.vim	/^let s:isDebugEnabled = function(exists('*and') ? 's:isDebugEnabled_smart' : 's:isDebugEnabled_dumb')$/;"	v
s:is_cygwin	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_enabled	bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^  let s:is_enabled = 0$/;"	v
s:is_mac	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_maximized	bundle/tagbar/autoload/tagbar.vim	/^let s:is_maximized    = 0$/;"	v
s:is_unix	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_windows	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:keepcpo	bundle/Align/autoload/Align.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	bundle/Align/autoload/AlignMaps.vim	/^let s:keepcpo         = &cpo$/;"	v
s:keepcpo	bundle/Align/plugin/AlignMapsPlugin.vim	/^let s:keepcpo                = &cpo$/;"	v
s:keepcpo	bundle/Align/plugin/AlignPlugin.vim	/^let s:keepcpo            = &cpo$/;"	v
s:keepcpo	bundle/Align/plugin/cecutil.vim	/^let s:keepcpo        = &cpo$/;"	v
s:keepcpo	bundle/ZoomWin/autoload/ZoomWin.vim	/^let s:keepcpo        = &cpo$/;"	v
s:keepcpo	bundle/ZoomWin/plugin/ZoomWinPlugin.vim	/^let s:keepcpo              = &cpo$/;"	v
s:keymaps	bundle/tagbar/plugin/tagbar.vim	/^let s:keymaps = [$/;"	v
s:known_files	bundle/tagbar/autoload/tagbar.vim	/^let s:known_files = {$/;"	v
s:last_highlight_tline	bundle/tagbar/autoload/tagbar.vim	/^let s:last_highlight_tline = 0$/;"	v
s:lenSpaceStr	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^let s:lenSpaceStr = strlen(s:spaceStr)$/;"	v
s:light_green	colors/Tomorrow-Night-Eighties.vim	/^let s:light_green = "82ECA5"$/;"	v
s:line	colors/Tomorrow-Night-Bright.vim	/^let s:line = "2a2a2a"$/;"	v
s:line	colors/Tomorrow-Night-Eighties.vim	/^	let s:line = "3a3a3a"$/;"	v
s:line	colors/Tomorrow-Night-Eighties.vim	/^let s:line = "23282D"$/;"	v
s:line	colors/Tomorrow-Night.vim	/^	let s:line = "3a3a3a"$/;"	v
s:line	colors/Tomorrow-Night.vim	/^let s:line = "282a2e"$/;"	v
s:loaded	bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^let s:loaded = {}$/;"	v
s:local_candidates_list	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^  let s:local_candidates_list = {}$/;"	v
s:localoptlist	bundle/ZoomWin/autoload/ZoomWin.vim	/^ let s:localoptlist   = ["ai","ar","bh","bin","bl","bomb","bt","cfu","ci","cin","cink","cino","cinw","cms","com","cpt","diff","efm","eol","ep","et","fenc","fex","ff","flp","fo","ft","gp","imi","ims","inde","inex","indk","inf","isk","key","kmp","lisp","mps","ml","ma","mod","nf","ofu","oft","pi","qe","ro","sw","sn","si","sts","spc","spf","spl","sua","swf","smc","syn","ts","tx","tw","udf","wfh","wfw","wm"]$/;"	v
s:localoptlist	bundle/ZoomWin/autoload/ZoomWin.vim	/^ let s:localoptlist   = g:zoomwin_localoptlist$/;"	v
s:logTimestamp	bundle/syntastic/autoload/syntastic/log.vim	/^let s:logTimestamp = function(has('reltime') ? 's:logTimestamp_smart' : 's:logTimestamp_dumb')$/;"	v
s:magenta	colors/ansi_blows.vim	/^let s:magenta='#aa00aa'$/;"	v
s:magenta	colors/xterm16.vim	/^let s:magenta		= exists("g:magenta") ? g:magenta :	    '#7F0055'$/;"	v
s:makeArgumentList	bundle/genutils-2.5/autoload/genutils.vim	/^let s:makeArgumentList = ''$/;"	v
s:makeArgumentString	bundle/genutils-2.5/autoload/genutils.vim	/^let s:makeArgumentString = ''$/;"	v
s:mapleader	bundle/Align/plugin/AlignMapsPlugin.vim	/^  let s:mapleader = exists("g:mapleader")? g:mapleader : '\\'$/;"	v
s:matcher	bundle/neocomplcache.vim/autoload/neocomplcache/filters/matcher_fuzzy.vim	/^let s:matcher = {$/;"	v
s:matcher	bundle/neocomplcache.vim/autoload/neocomplcache/filters/matcher_head.vim	/^let s:matcher = {$/;"	v
s:matcher	bundle/neocomplcache.vim/autoload/neocomplcache/filters/matcher_old.vim	/^let s:matcher = {$/;"	v
s:maxDotsInExtension	bundle/a.vim/plugin/a.vim	/^let s:maxDotsInExtension = 1$/;"	v
s:member_sources	bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^  let s:member_sources = {}$/;"	v
s:menu_char_prefix	bundle/taglist.vim/plugin/taglist.vim	/^let s:menu_char_prefix =$/;"	v
s:modemap	bundle/syntastic/plugin/syntastic.vim	/^let s:modemap = g:SyntasticModeMap.Instance()$/;"	v
s:modifier	bundle/Align/plugin/cecutil.vim	/^ let s:modifier= "sil! "$/;"	v
s:modifier	bundle/Align/plugin/cecutil.vim	/^ let s:modifier= "sil! keepj "$/;"	v
s:myBufNum	bundle/lookupfile1_8/autoload/lookupfile.vim	/^  let s:myBufNum = -1$/;"	v
s:mySNR	bundle/genutils-2.5/autoload/genutils.vim	/^let s:mySNR = ''$/;"	v
s:mySNR	bundle/lookupfile1_8/plugin/lookupfile.vim	/^let s:mySNR = ''$/;"	v
s:name	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^let s:name = '[BufExplorer]'$/;"	v
s:nearby_disabled	bundle/tagbar/autoload/tagbar.vim	/^let s:nearby_disabled = 0$/;"	v
s:neocomplcache_source	bundle/neocomplcache.vim/autoload/unite/sources/neocomplcache.vim	/^let s:neocomplcache_source = {$/;"	v
s:new_window	bundle/tagbar/autoload/tagbar.vim	/^let s:new_window      = 1$/;"	v
s:next_sign_id	bundle/syntastic/plugin/syntastic/signs.vim	/^let s:next_sign_id = s:first_sign_id$/;"	v
s:none	colors/xterm16.vim	/^let s:none		= 'NONE'$/;"	v
s:notifier_types	bundle/syntastic/plugin/syntastic/notifiers.vim	/^let s:notifier_types = ['signs', 'balloons', 'highlighting', 'cursor', 'autoloclist']$/;"	v
s:notifiers	bundle/syntastic/plugin/syntastic.vim	/^let s:notifiers = g:SyntasticNotifiers.Instance()$/;"	v
s:notifyWindow	bundle/genutils-2.5/autoload/genutils.vim	/^let s:notifyWindow = {}$/;"	v
s:ocamlpp	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let s:ocamlpp="camlp4o"$/;"	v
s:ocamlpp	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let s:ocamlpp="camlp4r"$/;"	v
s:old_cpo	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:options	bundle/tagbar/plugin/tagbar.vim	/^let s:options = [$/;"	v
s:orange	colors/Tomorrow-Night-Bright.vim	/^let s:orange = "e78c45"$/;"	v
s:orange	colors/Tomorrow-Night-Eighties.vim	/^let s:orange = "F99157"$/;"	v
s:orange	colors/Tomorrow-Night.vim	/^let s:orange = "de935f"$/;"	v
s:originBuffer	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^let s:originBuffer = 0$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=#\\([^-+# ]\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=+\\([^-+# ]\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=-\\([^-+# ]\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . '][-+# ]\\?\\)\\@<=[^*(]\\+\\(\\*\\?\\(([^)]\\+)\\)\\? :\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(^[' . s:ics . '] \\?\\)\\@<=[^-+: ]\\+[^:]\\+$'$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\S\\@<![' . s:ics . ']\\([-+# ]\\?\\)\\@='$/;"	v
s:paused	bundle/tagbar/autoload/tagbar.vim	/^let s:paused = 0$/;"	v
s:platform	bundle/ccvext.vim/plugin/ccvext.vim	/^    let s:platform = 'unix'$/;"	v
s:platform	bundle/ccvext.vim/plugin/ccvext.vim	/^    let s:platform = 'win32'$/;"	v
s:platform_inde	bundle/ccvext.vim/plugin/ccvext.vim	/^let s:platform_inde = {$/;"	v
s:popupIsHidden	bundle/lookupfile1_8/autoload/lookupfile.vim	/^  let s:popupIsHidden = 0$/;"	v
s:popupItemResultList	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^let s:popupItemResultList = []$/;"	v
s:postfix	bundle/ccvext.vim/plugin/ccvext.vim	/^let s:postfix = ['"*.java"', '"*.h"', '"*.c"', '"*.hpp"', '"*.cpp"', '"*.cc"', '*.cs', '*.js']$/;"	v
s:purple	colors/Tomorrow-Night-Bright.vim	/^let s:purple = "D565EB"$/;"	v
s:purple	colors/Tomorrow-Night.vim	/^let s:purple = "D565EB"$/;"	v
s:pwin_by_tagbar	bundle/tagbar/autoload/tagbar.vim	/^let s:pwin_by_tagbar = 0$/;"	v
s:pylint_new	bundle/syntastic/syntax_checkers/python/pylint.vim	/^let s:pylint_new = -1$/;"	v
s:quiet_warnings	bundle/syntastic/plugin/syntastic.vim	/^            let s:quiet_warnings = [s:quiet_warnings]$/;"	v
s:quiet_warnings	bundle/syntastic/plugin/syntastic.vim	/^        let s:quiet_warnings = get(g:syntastic_quiet_messages, 'type', [])$/;"	v
s:reCComment	bundle/OmniCppComplete/autoload/omni/cpp/tokenizer.vim	/^let s:reCComment = '\\\/\\*\\|\\*\\\/'$/;"	v
s:reComment	bundle/OmniCppComplete/autoload/omni/cpp/tokenizer.vim	/^let s:reComment = s:reCComment.'\\|'.s:reCppComment$/;"	v
s:reCppComment	bundle/OmniCppComplete/autoload/omni/cpp/tokenizer.vim	/^let s:reCppComment = '\\\/\\\/'$/;"	v
s:reCppKeyword	bundle/OmniCppComplete/autoload/omni/cpp/tokenizer.vim	/^let s:reCppKeyword = '\\C\\<'.join(s:cppKeyword, '\\>\\|\\<').'\\>'$/;"	v
s:reCppOperatorOrPunctuator	bundle/OmniCppComplete/autoload/omni/cpp/tokenizer.vim	/^let s:reCppOperatorOrPunctuator = escape(join(s:cppOperatorPunctuator, '\\|'), '*.\/^~[]')$/;"	v
s:reIncludeFilePart	bundle/OmniCppComplete/autoload/omni/cpp/includes.vim	/^let s:reIncludeFilePart = '\\(<\\|"\\)\\(\\f\\|\\s\\)\\+\\(>\\|"\\)'$/;"	v
s:rePreprocIncludeFile	bundle/OmniCppComplete/autoload/omni/cpp/includes.vim	/^let s:rePreprocIncludeFile = s:rePreprocIncludePart . s:reIncludeFilePart$/;"	v
s:rePreprocIncludePart	bundle/OmniCppComplete/autoload/omni/cpp/includes.vim	/^let s:rePreprocIncludePart = '\\C#\\s*include\\s*'$/;"	v
s:red	colors/Tomorrow-Night-Bright.vim	/^let s:red = "d54e53"$/;"	v
s:red	colors/Tomorrow-Night-Eighties.vim	/^let s:red = "F2777A"$/;"	v
s:red	colors/Tomorrow-Night.vim	/^let s:red = "cc6666"$/;"	v
s:red	colors/ansi_blows.vim	/^let s:red='#b90000'$/;"	v
s:red	colors/xterm16.vim	/^let s:red		= exists("g:red") ? g:red :		    '#FF0000'$/;"	v
s:registry	bundle/syntastic/plugin/syntastic.vim	/^let s:registry = g:SyntasticRegistry.Instance()$/;"	v
s:rst2pseudoxml	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let s:rst2pseudoxml = executable('rst2pseudoxml.py') ? 'rst2pseudoxml.py' : 'rst2pseudoxml'$/;"	v
s:running	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^let s:running = 0$/;"	v
s:running_windows	bundle/syntastic/plugin/syntastic.vim	/^let s:running_windows = syntastic#util#isRunningWindows()$/;"	v
s:sass_cache_location	bundle/syntastic/syntax_checkers/sass/sass.vim	/^let s:sass_cache_location = tempname()$/;"	v
s:save_cpo	bundle/Mark--Karkat/plugin/mark.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/SrcExpl/plugin/srcexpl.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	bundle/genutils-2.5/autoload/genutils.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/lookupfile1_8/autoload/lookupfile.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/lookupfile1_8/plugin/lookupfile.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/async_cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/commands.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/context_filetype.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/filters.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_abbr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_case.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_delimiter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_nothing.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/filters/converter_remove_next_keyword.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/filters/matcher_fuzzy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/filters/matcher_head.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/filters/matcher_old.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_length.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_nothing.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_rank.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/mappings.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/sources/dictionary_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/sources/tags_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/neocomplcache/variables.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/unite/sources/file_include.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/unite/sources/neocomplcache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/autoload/vital/_13055f8/System/Cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/plugin/neocomplcache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/plugin/neocomplcache/buffer_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/plugin/neocomplcache/dictionary_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/plugin/neocomplcache/include_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/plugin/neocomplcache/syntax_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/plugin/neocomplcache/tags_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplcache.vim/vest/test-neocomplcache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/c.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/log.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/postprocess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/applescript/osacompile.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/cppcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/make.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/oclint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/sparse.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/splint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/chef/foodcritic.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/co/coco.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/coffee/coffeelint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/coq/coqtop.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cpp/cppcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cs/mcs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/css/csslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cucumber/cucumber.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cuda/nvcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/d/dmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/dustjs/swiffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/erlang/escript.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/glsl/cgc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/go/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/go/gofmt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/go/golint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/go/gotype.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/go/govet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haml/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haml/haml_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/handlebars/handlebars.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haskell/hdevtools.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haskell/hlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/hss/hss.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/html/jshint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/html/validator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/html/w3.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/java/javac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/jscs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/json/jsonlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/json/jsonval.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/less/lessc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/lex/flex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/limbo/limbo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/lisp/clisp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/llvm/llvm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/lua/luac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/matlab/mlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/nasm/nasm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/nroff/mandoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/perl/perl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/php/php.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/php/phpcs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/po/msgfmt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/pod/podchecker.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/puppet/puppet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/flake8.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/frosted.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/pep257.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/pep8.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/py3kwarn.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/pylama.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/pylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/python.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/racket/racket.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/rst/rstcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ruby/macruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ruby/rubylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/rust/rustc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sass/sass.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/scala/fsc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/scala/scalac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/scss/scss_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sh/checkbashisms.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sh/sh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sh/shellcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/tcl/nagelfar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/tex/lacheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/text/language_check.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/typescript/tsc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/vala/valac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/vhdl/ghdl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/xml/xmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/yacc/bison.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/yaml/jsyaml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/zpt/zptlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/zsh/zsh.vim	/^let s:save_cpo = &cpo$/;"	v
s:script_candidates_list	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^  let s:script_candidates_list = {}$/;"	v
s:sdir	bundle/neocomplcache.vim/autoload/neocomplcache/cache.vim	/^let s:sdir = neocomplcache#util#substitute_path_separator($/;"	v
s:segment_mods	bundle/vim-powerline/autoload/Pl/Mod.vim	/^let s:segment_mods = []$/;"	v
s:selection	bundle/genutils-2.5/autoload/genutils.vim	/^let s:selection = -1$/;"	v
s:selection	colors/Tomorrow-Night-Bright.vim	/^let s:selection = "6B6865"$/;"	v
s:selection	colors/Tomorrow-Night-Eighties.vim	/^	let s:selection = "585858"$/;"	v
s:selection	colors/Tomorrow-Night-Eighties.vim	/^let s:selection = "6B6865"$/;"	v
s:selection	colors/Tomorrow-Night.vim	/^	let s:selection = "585858"$/;"	v
s:selection	colors/Tomorrow-Night.vim	/^let s:selection = "6B6865"$/;"	v
s:self_version	bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:setup_done	bundle/syntastic/plugin/syntastic/highlighting.vim	/^let s:setup_done = 0$/;"	v
s:setup_done	bundle/syntastic/plugin/syntastic/signs.vim	/^let s:setup_done = 0$/;"	v
s:short_help	bundle/tagbar/autoload/tagbar.vim	/^let s:short_help      = 1$/;"	v
s:snippets	bundle/snipmate.vim/plugin/snipMate.vim	/^let s:snippets = {} | let s:multi_snips = {}$/;"	v
s:sort_by	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^let s:sort_by = ["number", "name", "fullpath", "mru", "extension"]$/;"	v
s:sorter	bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_length.vim	/^let s:sorter = {$/;"	v
s:sorter	bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_nothing.vim	/^let s:sorter = {$/;"	v
s:sorter	bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_rank.vim	/^let s:sorter = {$/;"	v
s:source	bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache.vim/autoload/neocomplcache/sources/dictionary_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache.vim/autoload/neocomplcache/sources/tags_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplcache.vim/autoload/unite/sources/file_include.vim	/^let s:source = {$/;"	v
s:spaceStr	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^let s:spaceStr = ' '$/;"	v
s:spacer	bundle/genutils-2.5/autoload/genutils.vim	/^let s:spacer= "                                                               ".$/;"	v
s:splitMode	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^let s:splitMode = ""$/;"	v
s:ss_pattern	bundle/auto-pairs/plugin/auto-pairs.vim	/^let s:ss_pattern = '\\v''' . s:string_chunk . ''''$/;"	v
s:statusline_in_use	bundle/tagbar/autoload/tagbar.vim	/^let s:statusline_in_use = 0$/;"	v
s:string_chunk	bundle/auto-pairs/plugin/auto-pairs.vim	/^let s:string_chunk = '\\v%(\\\\\\_.|[^\\1]|[\\r\\n]){-}'$/;"	v
s:syntax_list	bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^  let s:syntax_list = {}$/;"	v
s:szCurrentWorkingDir	bundle/OmniCppComplete/autoload/omni/cpp/complete.vim	/^let s:szCurrentWorkingDir = getcwd()$/;"	v
s:tabSpace	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^let s:tabSpace = []$/;"	v
s:tags_list	bundle/neocomplcache.vim/autoload/neocomplcache/sources/tags_complete.vim	/^  let s:tags_list = {}$/;"	v
s:template_cursor	plugin/load_template.vim	/^let s:template_cursor = 'TEMPLATE_CURSOR'$/;"	v
s:template_neednew	plugin/load_template.vim	/^let s:template_neednew = 'NEEDNEW'$/;"	v
s:template_sourcefile	plugin/load_template.vim	/^let s:template_sourcefile = '\/root\/.vim\/templates'.g:vimrc_splitstr.'template_source.vim'$/;"	v
s:tlist_app_name	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_app_name = "none"$/;"	v
s:tlist_brief_help	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_brief_help = 1$/;"	v
s:tlist_cur_file_idx	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_cur_file_idx = -1$/;"	v
s:tlist_debug	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_debug = 0$/;"	v
s:tlist_debug_file	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_debug_file = ''$/;"	v
s:tlist_def_ant_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_ant_settings = 'ant;p:projects;t:targets'$/;"	v
s:tlist_def_asm_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_asm_settings = 'asm;d:define;l:label;m:macro;t:type'$/;"	v
s:tlist_def_aspperl_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_aspperl_settings =$/;"	v
s:tlist_def_aspvbs_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_aspvbs_settings =$/;"	v
s:tlist_def_awk_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_awk_settings = 'awk;f:function'$/;"	v
s:tlist_def_basic_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_basic_settings =$/;"	v
s:tlist_def_beta_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_beta_settings = 'beta;f:fragment;s:slot;v:pattern'$/;"	v
s:tlist_def_c_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_c_settings = 'c;d:macro;g:enum;s:struct;u:union;t:typedef;' .$/;"	v
s:tlist_def_cobol_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_cobol_settings = 'cobol;d:data;f:file;g:group;p:paragraph;' .$/;"	v
s:tlist_def_cpp_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_cpp_settings = 'c++;n:namespace;v:variable;d:macro;t:typedef;' .$/;"	v
s:tlist_def_cs_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_cs_settings = 'c#;d:macro;t:typedef;n:namespace;c:class;' .$/;"	v
s:tlist_def_csh_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_csh_settings = 'sh;f:function'$/;"	v
s:tlist_def_d_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_d_settings = 'c++;n:namespace;v:variable;t:typedef;' .$/;"	v
s:tlist_def_dosbatch_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_dosbatch_settings = 'dosbatch;l:labels;v:variables'$/;"	v
s:tlist_def_eiffel_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_eiffel_settings = 'eiffel;c:class;f:feature'$/;"	v
s:tlist_def_erlang_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_erlang_settings = 'erlang;d:macro;r:record;m:module;f:function'$/;"	v
s:tlist_def_expect_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_expect_settings = 'tcl;c:class;f:method;p:procedure'$/;"	v
s:tlist_def_flex_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_flex_settings = 'flex;v:global;c:classes;p:properties;'.$/;"	v
s:tlist_def_fortran_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_fortran_settings = 'fortran;p:program;b:block data;' .$/;"	v
s:tlist_def_go_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_go_settings = 'go;f:function;p:package;t:struct'$/;"	v
s:tlist_def_html_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_html_settings = 'html;a:anchor;f:function'$/;"	v
s:tlist_def_java_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_java_settings = 'java;p:package;c:class;i:interface;' .$/;"	v
s:tlist_def_javascript_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_javascript_settings =$/;"	v
s:tlist_def_lisp_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_lisp_settings = 'lisp;f:function'$/;"	v
s:tlist_def_lua_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_lua_settings = 'lua;f:function'$/;"	v
s:tlist_def_make_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_make_settings = 'make;m:macro'$/;"	v
s:tlist_def_matlab_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_matlab_settings = 'matlab;f:function'$/;"	v
s:tlist_def_ocamal_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_ocamal_settings = 'ocamal;M:module;v:global;t:type;'.$/;"	v
s:tlist_def_pascal_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_pascal_settings = 'pascal;f:function;p:procedure'$/;"	v
s:tlist_def_perl_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_perl_settings = 'perl;c:constant;l:label;p:package;s:subroutine'$/;"	v
s:tlist_def_php_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_php_settings =$/;"	v
s:tlist_def_python_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_python_settings = 'python;c:class;m:member;f:function'$/;"	v
s:tlist_def_rexx_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_rexx_settings = 'rexx;s:subroutine'$/;"	v
s:tlist_def_ruby_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_ruby_settings = 'ruby;c:class;f:method;F:function;' .$/;"	v
s:tlist_def_scheme_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_scheme_settings = 'scheme;s:set;f:function'$/;"	v
s:tlist_def_sh_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_sh_settings = 'sh;f:function'$/;"	v
s:tlist_def_slang_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_slang_settings = 'slang;n:namespace;f:function'$/;"	v
s:tlist_def_sml_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_sml_settings = 'sml;e:exception;c:functor;s:signature;' .$/;"	v
s:tlist_def_sql_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_sql_settings = 'sql;f:functions;' .$/;"	v
s:tlist_def_tcl_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_tcl_settings = 'tcl;c:class;f:method;m:method;p:procedure'$/;"	v
s:tlist_def_tex_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_tex_settings = 'tex;c:chapters;s:sections;u:subsections;'.$/;"	v
s:tlist_def_vera_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_vera_settings = 'vera;c:class;d:macro;e:enumerator;' .$/;"	v
s:tlist_def_verilog_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_verilog_settings = 'verilog;m:module;c:constant;P:parameter;' .$/;"	v
s:tlist_def_vhdl_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_vhdl_settings = 'vhdl;c:constant;t:type;T:subtype;r:record;e:entity;f:function;p:procedure;P:package'$/;"	v
s:tlist_def_vim_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_vim_settings =$/;"	v
s:tlist_def_yacc_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_yacc_settings = 'yacc;l:label'$/;"	v
s:tlist_def_zsh_settings	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_def_zsh_settings = 'sh;f:function'$/;"	v
s:tlist_file_count	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_file_count = 0$/;"	v
s:tlist_file_lnum_idx_cache	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_file_lnum_idx_cache = -1$/;"	v
s:tlist_file_name_idx_cache	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_file_name_idx_cache = -1$/;"	v
s:tlist_file_names	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_file_names=''$/;"	v
s:tlist_ftype_count	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_ftype_count = 0$/;"	v
s:tlist_menu_empty	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_menu_empty = 1$/;"	v
s:tlist_msg	bundle/taglist.vim/plugin/taglist.vim	/^    let s:tlist_msg = ''$/;"	v
s:tlist_removed_flist	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_removed_flist = ""$/;"	v
s:tlist_sid	bundle/taglist.vim/plugin/taglist.vim	/^    let s:tlist_sid = substitute(maparg('<SID>xx'), '<SNR>\\(\\d\\+_\\)xx$',$/;"	v
s:tlist_win_maximized	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_win_maximized = 0$/;"	v
s:tlist_winsize_chgd	bundle/taglist.vim/plugin/taglist.vim	/^let s:tlist_winsize_chgd = -1$/;"	v
s:tree_up_dir_line	bundle/nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:type_init_done	bundle/tagbar/autoload/tagbar.vim	/^let s:type_init_done    = 0$/;"	v
s:types	bundle/bufexplorer.zip/plugin/bufexplorer.vim	/^let s:types = {"fullname": ':p', "path": ':p:h', "relativename": ':~:.', "relativepath": ':~:.:h', "shortname": ':t'}$/;"	v
s:uname	bundle/syntastic/plugin/syntastic.vim	/^        let s:uname = system('uname')$/;"	v
s:visibility_symbols	bundle/tagbar/autoload/tagbar.vim	/^let s:visibility_symbols = {$/;"	v
s:white	colors/ansi_blows.vim	/^let s:white='#aaaaaa'$/;"	v
s:white	colors/xterm16.vim	/^let s:white		= exists("g:white") ? g:white :		    '#FFFFFF'$/;"	v
s:width	bundle/syntastic/autoload/syntastic/util.vim	/^let s:width = function(exists('*strwidth') ? 'strwidth' : 'strlen')$/;"	v
s:window	colors/Tomorrow-Night-Bright.vim	/^let s:window = "4d5057"$/;"	v
s:window	colors/Tomorrow-Night-Eighties.vim	/^	let s:window = "5e5e5e"$/;"	v
s:window	colors/Tomorrow-Night-Eighties.vim	/^let s:window = "4D5057"$/;"	v
s:window	colors/Tomorrow-Night.vim	/^	let s:window = "5e5e5e"$/;"	v
s:window	colors/Tomorrow-Night.vim	/^let s:window = "4d5057"$/;"	v
s:windowName	bundle/lookupfile1_8/autoload/lookupfile.vim	/^  let s:windowName = '[Lookup File]'$/;"	v
s:window_expanded	bundle/tagbar/autoload/tagbar.vim	/^let s:window_expanded   = 0$/;"	v
s:window_pos	bundle/tagbar/autoload/tagbar.vim	/^let s:window_pos = {$/;"	v
s:winrestcmd	bundle/tagbar/autoload/tagbar.vim	/^let s:winrestcmd      = ''$/;"	v
s:yellow	colors/Tomorrow-Night-Bright.vim	/^let s:yellow = "e7c547"$/;"	v
s:yellow	colors/Tomorrow-Night-Eighties.vim	/^let s:yellow = "FFCC66"$/;"	v
s:yellow	colors/Tomorrow-Night.vim	/^let s:yellow = "f0c674"$/;"	v
s:yellow	colors/ansi_blows.vim	/^let s:yellow='#ffff44'$/;"	v
s:yellow	colors/xterm16.vim	/^let s:yellow		= exists("g:yellow") ? g:yellow :	    '#FFFF00'$/;"	v
save_foldinfo	bundle/neocomplcache.vim/autoload/neocomplcache/handler.vim	/^function! s:save_foldinfo() "{{{$/;"	f
scale_matrix	bundle/vim-powerline/fontpatcher/fontpatcher	/^			scale_matrix = psMat.scale(font_dim['width'] \/ sym_dim['width'], 1)$/;"	v
scale_ratio	bundle/vim-powerline/fontpatcher/fontpatcher	/^			scale_ratio = font_dim['height'] \/ sym_dim['height']$/;"	v
scale_ratio	bundle/vim-powerline/fontpatcher/fontpatcher	/^			scale_ratio = font_dim['width'] \/ sym_dim['width']$/;"	v
scan	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:scan(str, pattern)$/;"	f
set_auto_completion_length	bundle/neocomplcache.vim/autoload/neocomplcache/commands.vim	/^function! s:set_auto_completion_length(len) "{{{$/;"	f
set_complete_results_pos	bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:set_complete_results_pos(funcs, cur_text) "{{{$/;"	f
set_complete_results_words	bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:set_complete_results_words(complete_results) "{{{$/;"	f
set_default	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:set_default(var, val)$/;"	f
set_default_custom	bundle/neocomplcache.vim/autoload/neocomplcache/init.vim	/^function! s:set_default_custom() "{{{$/;"	f
set_dictionary_helper	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:set_dictionary_helper(variable, keys, value) "{{{$/;"	f
set_dictionary_helper	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:set_dictionary_helper(variable, keys, pattern)$/;"	f
shift	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:shift(list)$/;"	f
showMenu	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:showMenu(node)$/;"	f
sign	bundle/vundle/autoload/vundle/installer.vim	/^func! s:sign(status) $/;"	f
smart_execute_command	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:smart_execute_command(action, word)$/;"	f
snipMate#expandSnip	bundle/snipmate.vim/autoload/snipMate.vim	/^fun snipMate#expandSnip(snip, col)$/;"	f
snipMate#jumpTabStop	bundle/snipmate.vim/autoload/snipMate.vim	/^fun snipMate#jumpTabStop(backwards)$/;"	f
snippets_dir	bundle/snipmate.vim/plugin/snipMate.vim	/^	let snippets_dir = substitute(globpath(&rtp, 'snippets\/'), "\\n", ',', 'g')$/;"	v
sort	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:sort(list, expr)$/;"	f
sort_by	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:sort_by(list, expr)$/;"	f
sorter.filter	bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_length.vim	/^function! s:sorter.filter(context) "{{{$/;"	f
sorter.filter	bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_nothing.vim	/^function! s:sorter.filter(context) "{{{$/;"	f
sorter.filter	bundle/neocomplcache.vim/autoload/neocomplcache/filters/sorter_rank.vim	/^function! s:sorter.filter(context) "{{{$/;"	f
source.finalize	bundle/neocomplcache.vim/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	bundle/neocomplcache.vim/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.gather_candidates	bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	bundle/neocomplcache.vim/autoload/unite/sources/file_include.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.get_complete_words	bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:source.get_complete_words(complete_pos, complete_str) "{{{$/;"	f
source.get_complete_words	bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^function! s:source.get_complete_words(complete_pos, complete_str) "{{{$/;"	f
source.get_complete_words	bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^function! s:source.get_complete_words(complete_pos, complete_str) "{{{$/;"	f
source.get_complete_words	bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:source.get_complete_words(complete_pos, complete_str) "{{{$/;"	f
source.get_complete_words	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete.vim	/^function! s:source.get_complete_words(complete_pos, complete_str) "{{{$/;"	f
source.get_keyword_list	bundle/neocomplcache.vim/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:source.get_keyword_list(complete_str) "{{{$/;"	f
source.get_keyword_list	bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! s:source.get_keyword_list(complete_str) "{{{$/;"	f
source.get_keyword_list	bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:source.get_keyword_list(complete_str) "{{{$/;"	f
source.get_keyword_list	bundle/neocomplcache.vim/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:source.get_keyword_list(complete_str) "{{{$/;"	f
source.get_keyword_pos	bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:source.get_keyword_pos(cur_text) "{{{$/;"	f
source.get_keyword_pos	bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^function! s:source.get_keyword_pos(cur_text) "{{{$/;"	f
source.get_keyword_pos	bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^function! s:source.get_keyword_pos(cur_text) "{{{$/;"	f
source.get_keyword_pos	bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:source.get_keyword_pos(cur_text) "{{{$/;"	f
source.get_keyword_pos	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete.vim	/^function! s:source.get_keyword_pos(cur_text) "{{{$/;"	f
source.hooks.on_final	bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:source.hooks.on_final(context) "{{{$/;"	f
source.hooks.on_init	bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:source.hooks.on_init(context) "{{{$/;"	f
source.hooks.on_init	bundle/neocomplcache.vim/autoload/unite/sources/file_include.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.initialize	bundle/neocomplcache.vim/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	bundle/neocomplcache.vim/autoload/neocomplcache/sources/filename_include.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	bundle/neocomplcache.vim/autoload/neocomplcache/sources/include_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	bundle/neocomplcache.vim/autoload/neocomplcache/sources/member_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	bundle/neocomplcache.vim/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	bundle/neocomplcache.vim/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
span	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:span(f, xs)$/;"	f
split3	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:split3(expr, pattern)$/;"	f
split_args	bundle/neocomplcache.vim/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:split_args(cur_text, complete_str) "{{{$/;"	f
split_leftright	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:split_leftright(expr, pattern)$/;"	f
split_pattern	bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:split_pattern(keyword_pattern) "{{{$/;"	f
start_complete	bundle/neocomplcache.vim/autoload/unite/sources/neocomplcache.vim	/^function! s:start_complete(is_quick_match) "{{{$/;"	f
strchars	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^  function! s:strchars(str)$/;"	f
strwidthpart	bundle/neocomplcache.vim/autoload/neocomplcache/async_cache.vim	/^function! s:strwidthpart(str, width) "{{{$/;"	f
strwidthpart	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:strwidthpart(str, width)$/;"	f
strwidthpart_reverse	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:strwidthpart_reverse(str, width)$/;"	f
substitute_candidate	bundle/neocomplcache.vim/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:substitute_candidate(candidate) "{{{$/;"	f
substitute_last	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:substitute_last(expr, pat, sub)$/;"	f
substitute_path_separator	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:substitute_path_separator(path)$/;"	f
sym_attr	bundle/vim-powerline/fontpatcher/fontpatcher	/^		sym_attr = SYM_ATTR[sym_glyph.unicode]$/;"	v
sym_dim	bundle/vim-powerline/fontpatcher/fontpatcher	/^			sym_dim = get_dim(font[sym_glyph.unicode])$/;"	v
sym_dim	bundle/vim-powerline/fontpatcher/fontpatcher	/^		sym_dim = get_dim(font[sym_glyph.unicode])$/;"	v
sym_dim	bundle/vim-powerline/fontpatcher/fontpatcher	/^		sym_dim = get_dim(sym_glyph)$/;"	v
sym_ycenter	bundle/vim-powerline/fontpatcher/fontpatcher	/^		sym_ycenter  = sym_dim['height'] \/ 2$/;"	v
symbols	bundle/vim-powerline/fontpatcher/fontpatcher	/^	symbols = fontforge.open(args.symbol_font)$/;"	v
sync	bundle/vundle/autoload/vundle/installer.vim	/^func! s:sync(bang, bundle) abort$/;"	f
syntastic	bundle/syntastic/plugin/syntastic.vim	/^    augroup syntastic$/;"	a
syntastic	bundle/syntastic/plugin/syntastic.vim	/^augroup syntastic$/;"	a
syntastic#c#CheckPKG	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#CheckPKG(name, ...)$/;"	f
syntastic#c#CheckPhp	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#CheckPhp()$/;"	f
syntastic#c#CheckPython	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#CheckPython()$/;"	f
syntastic#c#CheckRuby	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#CheckRuby()$/;"	f
syntastic#c#GetLocList	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#GetLocList(filetype, subchecker, options)$/;"	f
syntastic#c#NullOutput	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#NullOutput()$/;"	f
syntastic#c#ReadConfig	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#ReadConfig(file)$/;"	f
syntastic#log#debug	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debug(level, msg, ...)$/;"	f
syntastic#log#debugDump	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugDump(level)$/;"	f
syntastic#log#debugShowOptions	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugShowOptions(level, names)$/;"	f
syntastic#log#debugShowVariables	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugShowVariables(level, names)$/;"	f
syntastic#log#deprecationWarn	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#deprecationWarn(msg)$/;"	f
syntastic#log#error	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#error(msg)$/;"	f
syntastic#log#info	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#info(msg)$/;"	f
syntastic#log#warn	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#warn(msg)$/;"	f
syntastic#postprocess#compressWhitespace	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#compressWhitespace(errors)$/;"	f
syntastic#postprocess#cygwinRemoveCR	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#cygwinRemoveCR(errors)$/;"	f
syntastic#postprocess#decodeXMLEntities	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#decodeXMLEntities(errors)$/;"	f
syntastic#postprocess#filterForeignErrors	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#filterForeignErrors(errors)$/;"	f
syntastic#postprocess#sort	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#sort(errors)$/;"	f
syntastic#util#DevNull	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#DevNull()$/;"	f
syntastic#util#Slash	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#Slash() abort$/;"	f
syntastic#util#bufIsActive	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#bufIsActive(buffer)$/;"	f
syntastic#util#decodeXMLEntities	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#decodeXMLEntities(string)$/;"	f
syntastic#util#dictFilter	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#dictFilter(errors, filter)$/;"	f
syntastic#util#findInParent	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#findInParent(what, where)$/;"	f
syntastic#util#getVersion	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#getVersion(command)$/;"	f
syntastic#util#isRunningWindows	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#isRunningWindows()$/;"	f
syntastic#util#parseShebang	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#parseShebang()$/;"	f
syntastic#util#parseVersion	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#parseVersion(version)$/;"	f
syntastic#util#redraw	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#redraw(full)$/;"	f
syntastic#util#shescape	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#shescape(string)$/;"	f
syntastic#util#shexpand	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#shexpand(string)$/;"	f
syntastic#util#unique	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#unique(list)$/;"	f
syntastic#util#versionIsAtLeast	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#versionIsAtLeast(installed, required)$/;"	f
syntastic#util#wideMsg	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#wideMsg(msg)$/;"	f
system	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:system(str, ...)$/;"	f
system	bundle/vundle/autoload/vundle/installer.vim	/^func! s:system(cmd) abort$/;"	f
tagbar#CloseWindow	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#CloseWindow() abort$/;"	f
tagbar#OpenWindow	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#OpenWindow(...) abort$/;"	f
tagbar#RestoreSession	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#RestoreSession() abort$/;"	f
tagbar#SetFoldLevel	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#SetFoldLevel(level, force) abort$/;"	f
tagbar#StartDebug	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#StartDebug(...) abort$/;"	f
tagbar#StopDebug	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#StopDebug() abort$/;"	f
tagbar#ToggleWindow	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#ToggleWindow() abort$/;"	f
tagbar#autoopen	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#autoopen(...) abort$/;"	f
tagbar#currentfile	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#currentfile() abort$/;"	f
tagbar#currenttag	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#currenttag(fmt, default, ...) abort$/;"	f
tagbar#gettypeconfig	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#gettypeconfig(type) abort$/;"	f
tagbar#getusertypes	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#getusertypes() abort$/;"	f
tagbar#highlighttag	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#highlighttag(openfolds, force) abort$/;"	f
tagbar#toggle_pause	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#toggle_pause() abort$/;"	f
take_while	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:take_while(f, xs)$/;"	f
tlist_pyrex_settings	bundle/taglist.vim/plugin/taglist.vim	/^let tlist_pyrex_settings='python;c:classe;m:memder;f:function'$/;"	v
tlist_txt_settings	bundle/TxtBrowser/ftplugin/txt.vim	/^let tlist_txt_settings = 'txt;c:content;f:figures;t:tables'$/;"	v
toggleIgnoreFilter	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:toggleIgnoreFilter()$/;"	f
toggleShowBookmarks	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:toggleShowBookmarks()$/;"	f
toggleShowFiles	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:toggleShowFiles()$/;"	f
toggleShowHidden	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:toggleShowHidden()$/;"	f
toggleZoom	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:toggleZoom()$/;"	f
translate	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! s:translate(key, val)$/;"	f
translateElement	bundle/syntastic/autoload/syntastic/util.vim	/^function! s:translateElement(key, term)$/;"	f
translateFilter	bundle/syntastic/autoload/syntastic/util.vim	/^function! s:translateFilter(filters)$/;"	f
trim	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:trim(str)$/;"	f
truncate	bundle/neocomplcache.vim/autoload/neocomplcache/async_cache.vim	/^function! s:truncate(str, width) "{{{$/;"	f
truncate	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:truncate(str, width)$/;"	f
truncate_skipping	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator)$/;"	f
truncate_smart	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^function! s:truncate_smart(str, max, footer_width, separator)$/;"	f
u	bundle/repeat.vim/autoload/repeat.vim	/^nnoremap <silent> u     :<C-U>call repeat#wrap('u',v:count)<CR>$/;"	m
uname	bundle/syntastic/plugin/syntastic.vim	/^function! s:uname()$/;"	f
uniq	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:uniq(list, ...)$/;"	f
unite#sources#file_include#define	bundle/neocomplcache.vim/autoload/unite/sources/file_include.vim	/^function! unite#sources#file_include#define()$/;"	f
unite#sources#neocomplcache#define	bundle/neocomplcache.vim/autoload/unite/sources/neocomplcache.vim	/^function! unite#sources#neocomplcache#define() "{{{$/;"	f
unite#sources#neocomplcache#start_complete	bundle/neocomplcache.vim/autoload/unite/sources/neocomplcache.vim	/^function! unite#sources#neocomplcache#start_complete() "{{{$/;"	f
unite#sources#neocomplcache#start_quick_match	bundle/neocomplcache.vim/autoload/unite/sources/neocomplcache.vim	/^function! unite#sources#neocomplcache#start_quick_match() "{{{$/;"	f
unload	bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^function! s:unload()$/;"	f
unshift	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:unshift(list, val)$/;"	f
upDirCurrentRootClosed	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:upDirCurrentRootClosed()$/;"	f
upDirCurrentRootOpen	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:upDirCurrentRootOpen()$/;"	f
view_changelog	bundle/vundle/autoload/vundle/scripts.vim	/^func! s:view_changelog()$/;"	f
view_log	bundle/vundle/autoload/vundle/scripts.vim	/^func! s:view_log()$/;"	f
vimlintOutput	bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^function! s:vimlintOutput(filename, pos, ev, eid, mes, obj)$/;"	f
vital#	bundle/neocomplcache.vim/autoload/vital/_13055f8.vim	/^function! vital#{s:self_version}#new()$/;"	f
vital#of	bundle/neocomplcache.vim/autoload/vital.vim	/^function! vital#of(name)$/;"	f
vundle#config#bundle	bundle/vundle/autoload/vundle/config.vim	/^func! vundle#config#bundle(arg, ...)$/;"	f
vundle#config#init	bundle/vundle/autoload/vundle/config.vim	/^func! vundle#config#init()$/;"	f
vundle#config#init_bundle	bundle/vundle/autoload/vundle/config.vim	/^func! vundle#config#init_bundle(name, opts)$/;"	f
vundle#config#require	bundle/vundle/autoload/vundle/config.vim	/^func! vundle#config#require(bundles) abort$/;"	f
vundle#installer#clean	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#clean(bang) abort$/;"	f
vundle#installer#delete	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#delete(bang, dir_name) abort$/;"	f
vundle#installer#docs	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#docs() abort$/;"	f
vundle#installer#helptags	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#helptags(bundles) abort$/;"	f
vundle#installer#install	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#install(bang, name) abort$/;"	f
vundle#installer#install_and_require	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#install_and_require(bang, name) abort$/;"	f
vundle#installer#list	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#list(bang) abort$/;"	f
vundle#installer#new	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#new(bang, ...) abort$/;"	f
vundle#installer#run	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#run(func_name, name, ...) abort$/;"	f
vundle#rc	bundle/vundle/autoload/vundle.vim	/^func! vundle#rc(...) abort$/;"	f
vundle#scripts#all	bundle/vundle/autoload/vundle/scripts.vim	/^func! vundle#scripts#all(bang, ...)$/;"	f
vundle#scripts#bundle_names	bundle/vundle/autoload/vundle/scripts.vim	/^func! vundle#scripts#bundle_names(names)$/;"	f
vundle#scripts#complete	bundle/vundle/autoload/vundle/scripts.vim	/^func! vundle#scripts#complete(a,c,d)$/;"	f
vundle#scripts#reload	bundle/vundle/autoload/vundle/scripts.vim	/^func! vundle#scripts#reload() abort$/;"	f
vundle#scripts#view	bundle/vundle/autoload/vundle/scripts.vim	/^func! vundle#scripts#view(title, headers, results)$/;"	f
wantedClasses	plugin/libvim_javaimports.c	/^char wantedClasses[MAX_IMPORT_CHARS];$/;"	v
wcswidth	bundle/neocomplcache.vim/autoload/neocomplcache/async_cache.vim	/^  function! s:wcswidth(str) "{{{$/;"	f
wcswidth	bundle/neocomplcache.vim/autoload/vital/_13055f8/Prelude.vim	/^  function! s:wcswidth(str)$/;"	f
wcwidth	bundle/neocomplcache.vim/autoload/neocomplcache/async_cache.vim	/^  function! s:wcwidth(str) "{{{$/;"	f
wcwidth	bundle/neocomplcache.vim/autoload/neocomplcache/async_cache.vim	/^  function! s:wcwidth(ucs) "{{{$/;"	f
with_index	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:with_index(list, ...)$/;"	f
word_caching	bundle/neocomplcache.vim/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:word_caching(srcname) "{{{$/;"	f
wrap	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/String.vim	/^function! s:wrap(str,...)$/;"	f
wrap	bundle/vim-surround/plugin/surround.vim	/^function! s:wrap(string,char,type,...)$/;"	f
wrapreg	bundle/vim-surround/plugin/surround.vim	/^function! s:wrapreg(reg,char,...)$/;"	f
writefile	bundle/neocomplcache.vim/autoload/vital/_13055f8/System/Cache.vim	/^function! s:writefile(cache_dir, filename, list)$/;"	f
yS	bundle/vim-surround/plugin/surround.vim	/^  nmap yS  <Plug>YSurround$/;"	m
ySS	bundle/vim-surround/plugin/surround.vim	/^  nmap ySS <Plug>YSsurround$/;"	m
ySs	bundle/vim-surround/plugin/surround.vim	/^  nmap ySs <Plug>YSsurround$/;"	m
ys	bundle/vim-surround/plugin/surround.vim	/^  nmap ys  <Plug>Ysurround$/;"	m
yss	bundle/vim-surround/plugin/surround.vim	/^  nmap yss <Plug>Yssurround$/;"	m
zip	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:zip(...)$/;"	f
zip_fill	bundle/neocomplcache.vim/autoload/vital/_13055f8/Data/List.vim	/^function! s:zip_fill(xs, ys, filler)$/;"	f
